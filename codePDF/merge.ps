%!PS-Adobe-3.0
%%Title: Car.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:31 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.geom.Point2D; ) p
(//test//) c n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.Random;) p n
() N
(public) K
( ) p
(class) K
( ) p
(Car) L
( {) p n
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(int) k
( carsCreated = 0;) p n
() N
() S 8 T () S
(private) K
( Point2D.Float coordinate;) p n
() S 8 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
( id;) p n
() S 8 T () S
(private) K
( ) p
(float) k
( desiredSpeed;) p n
() S 8 T () S
(private) K
( ) p
(float) k
( currentSpeed;) p n
() S 8 T () S
(private) K
( Random rng = ) p
(new) K
( Random\(\);) p n
() S 8 T () S
(private) K
( Road currentRoad;) p n
() S 8 T () S
(private) K
( Lane currentLane;) p n
() S 8 T () S
(/*) c n
() S 8 T ( * targetLane: not used to its full purpose in current version. Was supp) N
(osed) N
() S 8 T ( * to be part of inner road lane change) N
() S 8 T ( */) N
() p 8 T () S
(private) K
( Lane targetLane;) p n
() S 8 T () S
(/*) c n
() S 8 T ( * target connection: connection it aims to make a turn at. Can be null ) N
(if) N
() S 8 T ( * the car decides to reach an exit point) N
() S 8 T ( */) N
() p 8 T () S
(private) K
( Connection targetConnection;) p n
() S 8 T () S
(private) K
( CarWorld cWorld;) p n
() N
() S 8 T () S
(/*) c n
() S 8 T ( * distanceTravelled: distance travelled on the current road, required f) N
(or) N
() S 8 T ( * perception sequence) N
() S 8 T ( */) N
() p 8 T () S
(private) K
( ) p
(float) k
( distanceTravelled;) p n
() N
() S 8 T () S
(public) K
( Car\(Point2D.Float coordinate, ) p
(float) k
( ds, Lane initialLane,) p n
() S 8 T () S 16 T () S 24 T (CarWorld cWorld, Point2D.Float entryPoint\) {) N
() S 8 T () S 16 T (this.id = Car.carsCreated;) N
() S 8 T () S 16 T (Car.carsCreated++;) N
() S 8 T () S 16 T (this.coordinate = coordinate;) N
() S 8 T () S 16 T (this.desiredSpeed = ds;) N
() S 8 T () S 16 T (this.enterLane\(initialLane, entryPoint\);) N
() S 8 T () S 16 T (this.cWorld = cWorld;) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(int) k
( totalCar\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( Car.carsCreated;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.currentRoad;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getTravelled\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( this.distanceTravelled;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( setCarsCreated\() p
(int) k
( i\) {) p n
() N
() S 8 T () S 16 T (carsCreated = i;) N
() N
() S 8 T (}) N
() N
(Car.java) (Page 1/6) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(/*) c n
() S 8 T ( * checkCourse: not used to its full purpose in current version. Was) N
() S 8 T ( * supposed to be part of inner road lane change. Currently being used a) N
(s a) N
() S 8 T ( * part of speed decision when making a turn) N
() S 8 T ( */) N
() p 8 T () S
(private) K
( ) p
(boolean) k
( checkCourse\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( \(this.currentLane.equals\(this.targetLane\)\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getId\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.id;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setTravelled\() p
(float) k
( f\) {) p n
() S 8 T () S 16 T (this.distanceTravelled = f;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getCoordinate\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( coordinate;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setCoordinate\(Point2D.Float coordinate\) {) p n
() S 8 T () S 16 T (this.coordinate = coordinate;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getDesiredSpeed\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( desiredSpeed;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setDesiredSpeed\() p
(float) k
( ds\) {) p n
() S 8 T () S 16 T (this.desiredSpeed = ds;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getCurrentSpeed\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( currentSpeed;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setCurrentSpeed\() p
(float) k
( currentSpeed\) {) p n
() S 8 T () S 16 T (this.currentSpeed = currentSpeed;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getCurrentLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( currentLane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setCurrentLane\(Lane currentLane\) {) p n
() S 8 T () S 16 T (this.currentLane = currentLane;) N
() S 8 T (}) N
() N
() S 8 T () S
(/*) c n
() S 8 T ( * enterLane: lane entering logic. If the road of the lanes change,) N
() S 8 T ( * enterRoad will be called as well) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( ) p
(void) k
( enterLane\(Lane lane, Point2D.Float entryPoint\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(this.currentLane != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (this.currentLane.carLeaves\() S
(this) k
(\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(if) K
( \(lane ) p
(instanceof) K
( StraightLane\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// entering a straightlane) c n
() p 8 T () S 16 T () S 24 T (this.setTravelled\(lane.findDistance\() S
(this) k
(\)\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(lane ) p
(instanceof) K
( Connection\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// entering a connection) c n
() p 8 T () S 16 T () S 24 T (this.setTravelled\(1\);) N
() S 8 T () S 16 T () S 24 T (this.targetConnection = ) S
(null) k
(;) p n
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.coordinate = entryPoint;) N
(Car.java) (Page 2/6) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Car.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S 16 T (Road tRoad = lane.getRoad\(\);) N
() S 8 T () S 16 T (Lane previousLane = this.currentLane;) N
() S 8 T () S 16 T (Road previousRoad;) N
() S 8 T () S 16 T () S
(if) K
( \(previousLane == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (previousRoad = ) S
(null) k
(;) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (previousRoad = previousLane.getRoad\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.currentLane = lane;) N
() S 8 T () S 16 T (lane.carEnters\() S
(this) k
(\);) p n
() S 8 T () S 16 T () S
(if) K
( \(!tRoad.equals\(previousRoad\)\) {) p n
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Entering road) str
("\);) p n
() S 8 T () S 16 T () S 24 T (enterRoad\(tRoad\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( enterRoad\(Road tRoad\) {) p n
() N
() S 8 T () S 16 T () S
(/* gets the whole connections available on */) c n
() p 8 T () S 16 T (ArrayList<Connection> connections = currentLane.getSameConnectio) N
(ns\(\);) N
() S 8 T () S 16 T () S
(/* sanitizes the list to have connections that are ahead of the ) c n
(cars */) N
() p 8 T () S 16 T (ArrayList<Connection> legalConnections = ) S
(new) K
( ArrayList<Connectio) p n
(n>\(\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < connections.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (Connection cc = connections.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(Car.distance\(this.currentLane.getStart\(\), cc.getStar) p n
(t\(\)\) >= this.distanceTravelled\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (legalConnections.add\(cc\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(boolean) k
( ending = currentLane.isEnding\(\);) p n
() S 8 T () S 16 T () S
(/* dummy: Connection representing an exit point */) c n
() p 8 T () S 16 T (Connection dummy = ) S
(new) K
( Connection\(\);) p n
() S 8 T () S 16 T () S
(if) K
( \(ending\) {) p n
() S 8 T () S 16 T () S 24 T (legalConnections.add\(dummy\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(int) k
( random = rng.nextInt\(legalConnections.size\(\)\);) p n
() S 8 T () S 16 T (Connection chosen = legalConnections.get\(random\);) N
() N
() S 8 T () S 16 T () S
(/*) c n
() S 8 T () S 16 T ( * if the dummy connection is randomly chosen it will aim to rea) N
(ch the) N
() S 8 T () S 16 T ( * exit point of the car. Other wise appropriate state changes o) N
(ccur for) N
() S 8 T () S 16 T ( * making turns) N
() S 8 T () S 16 T ( */) N
() p 8 T () S 16 T () S
(if) K
( \(chosen.equals\(dummy\)\) {) p n
() S 8 T () S 16 T () S 24 T (ArrayList<Lane> sameLanes = currentLane.getSameLanes\(\);) N
() S 8 T () S 16 T () S 24 T () S
(int) k
( nr = rng.nextInt\(sameLanes.size\(\)\);) p n
() S 8 T () S 16 T () S 24 T (Lane chosenLane = sameLanes.get\(nr\);) N
() S 8 T () S 16 T () S 24 T (this.targetLane = chosenLane;) N
() S 8 T () S 16 T () S 24 T (this.targetConnection = ) S
(null) k
(;) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() N
() S 8 T () S 16 T () S 24 T (this.targetLane = chosen.getStartLane\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(Car.distance\(this.currentLane.getStart\(\), chosen.get) p n
(Start\(\)\) >= this.distanceTravelled\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (this.targetConnection = chosen;) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.targetConnection = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.currentRoad = tRoad;) N
() S 8 T (}) N
(Car.java) (Page 3/6) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(/* move: decision making as well as updating its coordinate */) c n
() p 8 T () S
(public) K
( ) p
(void) k
( move\(\) {) p n
() N
() S 8 T () S 16 T () S
(// perception sequence: START) c n
() p n
() S 8 T () S 16 T (Car frontCar = this.currentLane.getFrontCar\() S
(this) k
(\);) p n
() S 8 T () S 16 T (TrafficLight tfl = this.currentLane.getNextTrafficLight\() S
(this) k
(\);) p n
() S 8 T () S 16 T () S
(float) k
( cd = 100;) p n
() S 8 T () S 16 T () S
(float) k
( td = 100;) p n
() S 8 T () S 16 T () S
(if) K
( \(frontCar != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (cd = Car.distance\(frontCar.getCoordinate\(\), this.getCoor) N
(dinate\(\)\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(if) K
( \(tfl != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (td = Car.distance\(tfl.getCoordinate\(\), this.getCoordinat) N
(e\(\)\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// current---car---trafficlight\(red/green\)----100m :: react to t) c n
(he car) N
() p 8 T () S 16 T () S
(// current----trafficlight\(green\)---car--100m :: react to the ca) c n
(r) N
() p 8 T () S 16 T () S
(// current---trafficlight\(red\)----car ---100m :: react to the li) c n
(ght) N
() p 8 T () S 16 T () S
(// current -----100m----x-----y :: free run) c n
() p 8 T () S 16 T () S
(if) K
( \(cd >= 100 && td >= 100\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// free run) c n
() p 8 T () S 16 T () S 24 T (accelerate\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(td < cd && td < 100 && tfl.getStatus\(\).equals\(") p
(red) str
("\)\)) p n
( {) N
() S 8 T () S 16 T () S 24 T () S
(// react to the red light) c n
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(td < 15\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.setCurrentSpeed\(0\);) N
() S 8 T () S 16 T () S 24 T () S
(else) K
( ) p
(if) K
( \(td < 70\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.setCurrentSpeed\(td\);) N
() S 8 T () S 16 T () S 24 T () S
(else) K
( ) p
(if) K
( \(td < 100\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(this.currentSpeed > td\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (decelerate\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(\(td < cd && td < 100 && tfl.getStatus\(\).equals\(") p
(green) str
(") p n
(\)\)\) {) N
() S 8 T () S 16 T () S 24 T () S
(// react to the green light-> ignore the light and react) c n
( to the) N
() p 8 T () S 16 T () S 24 T () S
(// closest car or slow down if making turn) c n
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(this.targetConnection != ) p
(null) k n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& checkCourse\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& Car.distance\(this.coordinate,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (this.targetConnection.ge) N
(tStart\(\)\) < 100\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(td < 70\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(currentSpeed < 60\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.accelerate\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(else) K
( ) p
(if) K
( \(currentSpeed > 80\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.decelerate\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(cd < 15\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.setCurrentSpeed\(0\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(cd < 70\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.setCurrentSpeed\(cd\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(cd < 100\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(this.currentSpeed > cd\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (decelerate\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (accelerate\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
(Car.java) (Page 4/6) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Car.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(\(cd < td && cd < 100\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// react to the car) c n
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(cd < 15\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.setCurrentSpeed\(0\);) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(cd < 70\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.setCurrentSpeed\(cd\);) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(cd < 100\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(this.currentSpeed > cd\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (decelerate\(\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// perception sequence: END) c n
() p n
() S 8 T () S 16 T () S
(// action sequence: START) c n
() p 8 T () S 16 T () S
(if) K
( \(this.currentSpeed == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(frontCar != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(") S
(front car : ) str
(" + frontCar.coordina) p n
(te\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(float) k
( tempDistance = this.currentSpeed * 0.02f;) p n
() N
() S 8 T () S 16 T () S 24 T (Point2D.Float nextPosition = this.currentLane.nextPositi) N
(on\() S
(this) k
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (tempDistance, this.distanceTravelled\);) N
() N
() S 8 T () S 16 T () S 24 T () S
(// state change sequence: Additional perception and chan) c n
(ge in) N
() p 8 T () S 16 T () S 24 T () S
(// states: START) c n
() p 8 T () S 16 T () S 24 T (Point2D.Float nextDisplacement = ) S
(new) K
( Point2D.Float\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Math.abs\(nextPosition.x - this.coordinat) N
(e.x\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Math.abs\(nextPosition.y - this.coordinat) N
(e.y\)\);) N
() N
() S 8 T () S 16 T () S 24 T (Point2D.Float dToEnd = ) S
(new) K
( Point2D.Float\(Math.abs\(curren) p n
(tLane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getEnd\(\).x - this.getCoordinate\(\).x\), M) N
(ath.abs\(currentLane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getEnd\(\).y - this.getCoordinate\(\).y\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(this.currentLane ) p
(instanceof) K
( StraightLane\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(dToEnd.x < nextDisplacement.x || dTo) N
(End.y < nextDisplacement.y\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// reached an exit point) c n
() p 8 T () S 16 T () S 24 T () S 32 T (this.coordinate = this.currentLane.getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (this.remove\(\);) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(\(this.currentLane ) p
(instanceof) K
( Connection\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float lastPoint = this.currentLane.getEn) N
(d\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(Car.distance\(this.coordinate, lastPoint\) < 5) p n
(\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.enterLane\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(\(Connection\) this.curre) N
(ntLane\).getTargetLane\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(\(Connection\) this.curre) N
(ntLane\).getEnd\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T (this.coordinate = nextPosition;) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(this.targetConnection != ) p
(null) k
(\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(Car.distance\(this.currentLane.getStart\(\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (targetConnection.getStart\(\)\) <= ) N
(this.distanceTravelled) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& checkCourse\(\)\) {) N
(Car.java) (Page 5/6) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.enterLane\(targetConnection,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (targetConnection.getStar) N
(t\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// State change sequence: END) c n
() p 8 T () S 16 T () S
(// action sequence: END) c n
() p 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( decelerate\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (this.currentSpeed -= 500 * 0.02;) N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( accelerate\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(if) K
( \(this.currentSpeed < this.desiredSpeed\) {) p n
() S 8 T () S 16 T () S 24 T (this.currentSpeed += 30 * 0.02;) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( remove\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (this.cWorld.removeCar\() S
(this) k
(\);) p n
() S 8 T () S 16 T (this.currentLane.removeCar\() S
(this) k
(\);) p n
() S 8 T () S 16 T (System.gc\(\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(this.currentSpeed >= 160\) {) p n
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.RED\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(this.currentSpeed < 160 && this.currentSpeed >= 120\) ) p n
({) N
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.ORANGE\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(this.currentSpeed < 120 && this.currentSpeed >= 80\) {) p n
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.YELLOW\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(this.currentSpeed < 80 && this.currentSpeed >= 40\) {) p n
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.MAGENTA\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(this.currentSpeed < 40 && this.currentSpeed > 0\) {) p n
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.BLUE\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(this.currentSpeed == 0\) {) p n
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.BLACK\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (g.fillOval\(\() S
(int) k
(\) coordinate.x - 4, \() p
(int) k
(\) coordinate.y - 4, 8, 8\)) p n
(;) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(float) k
( distance\(Point2D.Float p1, Point2D.Float p2\) {) p n
() S 8 T () S 16 T () S
(return) K
( \() p
(float) k
(\) Math.sqrt\(Math.pow\(\(p1.x - p2.x\), 2.0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ Math.pow\(p1.y - p2.y, 2.0\)\);) N
() S 8 T (}) N
() N
(}) N
(Car.java) (Page 6/6) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Car.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: CarPark.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.util.Random;) p n
() N
(public) K
( ) p
(class) K
( ) p
(CarPark) L
( {) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( START = 0;) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( END = 1;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( parkId;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( type;) p n
() S 8 T () S
(private) K
( Point2D.Float coordinate;) p n
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(int) k
( parksCreated = 0;) p n
() S 8 T () S
(private) K
( Random rng = ) p
(new) K
( Random\(\);) p n
() S 8 T () S
(// higher the spawn rate, more frequent car spawn) c n
() p 8 T () S
(private) K
( ) p
(double) k
( spawnRate;) p n
() S 8 T () S
(private) K
( Lane lane;) p n
() S 8 T () S
(private) K
( CarWorld world;) p n
() S 8 T () S
(// attribute to check that the park does not spawn another car too soon.) c n
() p 8 T () S
(// distance is checked between the car park and the previous car it spaw) c n
(ned.) N
() p 8 T () S
(private) K
( Car previousCar = ) p
(null) k
(;) p n
() N
() S 8 T () S
(public) K
( CarPark\(Lane bLane, ) p
(int) k
( type, CarWorld cWorld\) {) p n
() S 8 T () S 16 T (this.parkId = parksCreated;) N
() S 8 T () S 16 T (this.lane = bLane;) N
() S 8 T () S 16 T (this.spawnRate = 0.003d;) N
() S 8 T () S 16 T (this.type = type;) N
() S 8 T () S 16 T (this.world = cWorld;) N
() S 8 T () S 16 T () S
(if) K
( \(type == START\) {) p n
() S 8 T () S 16 T () S 24 T (this.coordinate = lane.getStart\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(type == END\) {) p n
() S 8 T () S 16 T () S 24 T (this.coordinate = lane.getEnd\(\);) N
() S 8 T () S 16 T (} ) N
() S 8 T () S 16 T (parksCreated++;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getId\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.parkId;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setSpawn\() p
(int) k
( i\) {) p n
() S 8 T () S 16 T (this.spawnRate = \(\() S
(double) k
(\) i / \() p
(double) k
(\) 1000\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getCoordinate\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.coordinate;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.lane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( reset\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (this.previousCar = ) S
(null) k
(;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( setParksCreated\() p
(int) k
( i\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (parksCreated = i;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
() N
() S 8 T () S 16 T () S
(if) K
( \(this.type == START\) {) p n
() S 8 T () S 16 T () S 24 T () S
(double) k
( range = this.spawnRate / 2;) p n
(CarPark.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S
(double) k
( dice = Math.random\(\);) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( dspeed = rng.nextInt\(\(180 - 160\) + 1\) + 160;) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(dice >= 0.5d - range && dice <= 0.5d + range) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& this.world.getCars\(\).size\(\) < 80\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(previousCar == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Car c = ) S
(new) K
( Car\(this.lane.getStart\(\), ds) p n
(peed, this.lane,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (this.world, this.lane.ge) N
(tStart\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (c.setCurrentSpeed\(100\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (previousCar = c;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.world.addCar\(c\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(Car.distance\(previousCar.getCoordina) p n
(te\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (this.coordinate\) > 15\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Car c = ) S
(new) K
( Car\(this.lane.getSta) p n
(rt\(\), dspeed,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (this.lane, this.) N
(world, this.lane.getStart\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (c.setCurrentSpeed\(100\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (previousCar = c;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.world.addCar\(c\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (g.setColor\(Color.BLACK\);) N
() S 8 T () S 16 T (g.fillOval\() N
() S 8 T () S 16 T () S 24 T () S 32 T (\() S
(int) k
(\) \(coordinate.x - Math.sqrt\(2 * \(Math.pow\(7.) p n
(5 / 2, 2\)\)\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T (\() S
(int) k
(\) \(coordinate.y - Math.sqrt\(2 * \(Math.pow\(7.) p n
(5 / 2, 2\)\)\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T (15, 15\);) N
() N
() S 8 T (}) N
() N
(}) N
(CarPark.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/CarPark.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: CarSimView.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.BorderLayout;) p n
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Container;) p n
(import) K
( java.awt.Dimension;) p n
() N
(import) K
( javax.swing.JButton;) p n
(import) K
( javax.swing.JFrame;) p n
() N
(import) K
( control.ParkController;) p n
(import) K
( control.TrafficLightController;) p n
(import) K
( control.WorldController;) p n
() N
(public) K
( ) p
(class) K
( ) p
(CarSimView) L
( ) p
(extends) K
( JFrame {) p n
() N
() S 8 T () S
(private) K
( Container mainContainer;) p n
() S 8 T () S
(private) K
( WorldController wControl;) p n
() S 8 T () S
(private) K
( TrafficLightController tlc;) p n
() S 8 T () S
(private) K
( ParkController pc;) p n
() S 8 T () S
(private) K
( JButton stopButton, startButton;) p n
() S 8 T () S
(private) K
( MainMenu mainMenu;) p n
() S 8 T () S
(private) K
( SimulationPanel simPanel;) p n
() S 8 T () S
(private) K
( ConsolePanel consolePanel;) p n
() S 8 T () S
(private) K
( TrafficLightPanel tlp;) p n
() S 8 T () S
(private) K
( UserHelpPanel usrHelpPanel;) p n
() S 8 T () S
(private) K
( ) p
(boolean) k
( addingLight = ) p
(false) k
(;) p n
() N
() S 8 T () S
(public) K
( CarSimView\(String title, WorldController wControl,) p n
() S 8 T () S 16 T () S 24 T (TrafficLightController tlc, ParkController pc\) {) N
() S 8 T () S 16 T () S
(super) K
(\(title\);) p n
() S 8 T () S 16 T (mainContainer = this.getContentPane\(\);) N
() S 8 T () S 16 T (BorderLayout borderLayout = ) S
(new) K
( BorderLayout\(\);) p n
() S 8 T () S 16 T () S
(// FlowLayout experimentLayout = new FlowLayout\(\);) c n
() p 8 T () S 16 T (this.setLayout\(borderLayout\);) N
() S 8 T () S 16 T (this.wControl = wControl;) N
() S 8 T () S 16 T (this.tlc = tlc;) N
() S 8 T () S 16 T (this.pc = pc;) N
() S 8 T () S 16 T (simPanel = ) S
(new) K
( SimulationPanel\(this.wControl, tlc, ) p
(this) k
(\);) p n
() S 8 T () S 16 T (mainMenu = ) S
(new) K
( MainMenu\(this.wControl, ) p
(this) k
(\);) p n
() S 8 T () S 16 T (consolePanel = ) S
(new) K
( ConsolePanel\(this.wControl, ) p
(this) k
(, pc\);) p n
() N
() S 8 T () S 16 T (usrHelpPanel = ) S
(new) K
( UserHelpPanel\(this.wControl, ) p
(this) k
(\);) p n
() N
() S 8 T () S 16 T (this.setResizable\() S
(false) k
(\);) p n
() S 8 T () S 16 T (this.setSize\(1280, 670\);) N
() S 8 T () S 16 T (mainContainer.setBackground\() S
(new) K
( Color\(0,150,0\)\);) p n
() S 8 T () S 16 T (consolePanel.setPreferredSize\() S
(new) K
( Dimension\(200, 660\)\);) p n
() S 8 T () S 16 T (mainMenu.setPreferredSize\() S
(new) K
( Dimension\(1000, 660\)\);) p n
() S 8 T () S 16 T (this.setDefaultCloseOperation\(JFrame.EXIT_ON_CLOSE\);) N
() S 8 T () S 16 T (this.setLocationRelativeTo\() S
(null) k
(\);) p n
() S 8 T () S 16 T (this.setVisible\() S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (mainContainer.removeAll\(\);) N
() S 8 T () S 16 T (mainContainer.add\(mainMenu, BorderLayout.CENTER\);) N
() S 8 T () S 16 T (this.repaint\(\);) N
() S 8 T () S 16 T (this.revalidate\(\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( TrafficPanel\() p
(int) k
( id\) {) p n
() S 8 T () S 16 T (mainContainer.removeAll\(\);) N
() S 8 T () S 16 T (mainContainer.add\() S
(new) K
( TrafficLightPanel\(this.wControl, tlc, ) p
(this) k
() p n
(, id\)\);) N
() S 8 T () S 16 T (mainContainer.revalidate\(\);) N
() S 8 T () S 16 T (mainContainer.repaint\(\);) N
() S 8 T (}) N
() N
() S 8 T () S
(// THIS IS NEW) c n
(CarSimView.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(public) K
( ) p
(void) k
( HelpPanel\(\) {) p n
() S 8 T () S 16 T (mainContainer.removeAll\(\);) N
() S 8 T () S 16 T (mainContainer.add\(usrHelpPanel\);) N
() S 8 T () S 16 T (mainContainer.revalidate\(\);) N
() S 8 T () S 16 T (mainContainer.repaint\(\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( mainMenu\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(// change panel main menu) c n
() p 8 T () S 16 T (mainContainer.removeAll\(\);) N
() S 8 T () S 16 T (mainContainer.add\(mainMenu\);) N
() S 8 T () S 16 T (mainContainer.revalidate\(\);) N
() S 8 T () S 16 T (mainContainer.repaint\(\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( simulationView\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (mainContainer.removeAll\(\);) N
() S 8 T () S 16 T (mainContainer.add\(simPanel, BorderLayout.CENTER\);) N
() S 8 T () S 16 T (mainContainer.add\(consolePanel, BorderLayout.WEST\);) N
() S 8 T () S 16 T (mainContainer.revalidate\(\);) N
() S 8 T () S 16 T (mainContainer.repaint\(\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( DynamicChart getDynamicChart\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( consolePanel.getDynamicChart\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setAddingLight\() p
(boolean) k
( b\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T () S 16 T (addingLight = b;) N
() S 8 T () S 16 T () S
(if) K
( \(b == ) p
(true) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (this.consolePanel.disableButtons\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (this.consolePanel.enableButtons\(\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(boolean) k
( getAddingLight\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.addingLight;) p n
() S 8 T (}) N
() N
(}) N
(CarSimView.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/CarSimView.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: CarWorld.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Point;) p n
(import) K
( java.awt.Rectangle;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.HashMap;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map.Entry;) p n
() N
(public) K
( ) p
(class) K
( ) p
(CarWorld) L
( {) p n
() S 8 T () S
(private) K
( String status = ") p
(paused) str
(";) p n
() S 8 T () S
(private) K
( ) p
(int) k
( height;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( width;) p n
() S 8 T () S
(private) K
( ArrayList<Road> roads = ) p
(new) K
( ArrayList<Road>\(\);) p n
() S 8 T () S
(private) K
( HashMap<Integer, Car> cars = ) p
(new) K
( HashMap<Integer, Car>\(\);) p n
() S 8 T () S
(private) K
( ArrayList<TrafficLight> lights = ) p
(new) K
( ArrayList<TrafficLight>\(\);) p n
() S 8 T () S
(private) K
( ArrayList<CarPark> parks = ) p
(new) K
( ArrayList<CarPark>\(\);) p n
() S 8 T () S
(private) K
( QuadTree quad;) p n
() N
() S 8 T () S
(public) K
( CarWorld\(\) {) p n
() S 8 T () S 16 T (this.height = 1000;) N
() S 8 T () S 16 T (this.width = 800;) N
() S 8 T () S 16 T (quad = ) S
(new) K
( QuadTree\(0, ) p
(new) K
( Rectangle\(this.width, this.height\)\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( CarWorld\() p
(int) k
( height, ) p
(int) k
( width\) {) p n
() S 8 T () S 16 T (this.height = height;) N
() S 8 T () S 16 T (this.width = width;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getHeight\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( height;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getWidth\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( width;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addRoad\(Road road\) {) p n
() S 8 T () S 16 T (roads.add\(road\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addCar\(Car car\) {) p n
() S 8 T () S 16 T (cars.put\(car.getId\(\), car\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( removeRoad\(String roadId\) {) p n
() S 8 T () S 16 T (roads.remove\(roadId\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( String toString\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( ") p
(Number of roads: ) str
(" + roads.size\(\) + ") p
(Number of cars) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ cars.size\(\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setStatus\(String s\) {) p n
() S 8 T () S 16 T (this.status = s;) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( String getStatus\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.status;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( HashMap<Integer, Car> getCars\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( cars;) p n
() S 8 T (}) N
(CarWorld.java) (Page 1/4) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(public) K
( ) p
(void) k
( removeCar\(Car car\) {) p n
() S 8 T () S 16 T (cars.remove\(car.getId\(\)\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getRoad\() p
(int) k
( roadId\) {) p n
() S 8 T () S 16 T (Road tRoad = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < roads.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (Road cRoad = roads.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(cRoad.getId\(\) == roadId\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (tRoad = cRoad;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( tRoad;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<Road> getRoads\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( roads;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<TrafficLight> getLights\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( lights;) p n
() S 8 T (}) N
() N
() S 8 T () S
(// resetting the state of the world for a new road network) c n
() p 8 T () S
(public) K
( ) p
(void) k
( flush\(\) {) p n
() S 8 T () S 16 T (TrafficLight.setTotalLights\(0\);) N
() S 8 T () S 16 T (Car.setCarsCreated\(0\);) N
() S 8 T () S 16 T (CarPark.setParksCreated\(0\);) N
() S 8 T () S 16 T (roads = ) S
(new) K
( ArrayList<Road>\(\);) p n
() S 8 T () S 16 T (cars = ) S
(new) K
( HashMap<Integer, Car>\(\);) p n
() S 8 T () S 16 T (parks = ) S
(new) K
( ArrayList<CarPark>\(\);) p n
() S 8 T () S 16 T (this.lights = ) S
(new) K
( ArrayList<TrafficLight>\(\);) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addPark\(CarPark cp\) {) p n
() S 8 T () S 16 T (System.out.println\(") S
(adding car park) str
("\);) p n
() S 8 T () S 16 T (parks.add\(cp\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<CarPark> getParks\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.parks;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addLight\(TrafficLight light\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (this.lights.add\(light\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<Car> checkCollision\(\) {) p n
() S 8 T () S 16 T (quad.clear\(\);) N
() S 8 T () S 16 T (ArrayList<Car> collided = ) S
(new) K
( ArrayList<Car>\(\);) p n
() S 8 T () S 16 T (Iterator<Entry<Integer, Car>> carIt = cars.entrySet\(\).iterator\(\)) N
(;) N
() S 8 T () S 16 T () S
(while) K
( \(carIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (quad.insert\(carIt.next\(\).getValue\(\)\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (ArrayList<Car> returnObjects = ) S
(new) K
( ArrayList<Car>\(\);) p n
() S 8 T () S 16 T (carIt = cars.entrySet\(\).iterator\(\);) N
() N
() S 8 T () S 16 T () S
(while) K
( \(carIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (returnObjects.clear\(\);) N
() S 8 T () S 16 T () S 24 T (Car currentCar = carIt.next\(\).getValue\(\);) N
(CarWorld.java) (Page 2/4) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/CarWorld.java) (1/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (quad.retrieve\(returnObjects, currentCar\);) N
() S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < returnObjects.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(\(!returnObjects.get\(i\).equals\(currentCar\)\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& Car.distance\(returnObjects.ge) N
(t\(i\).getCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (currentCar.getCo) N
(ordinate\(\)\) < 7\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.status = ") S
(paused) str
(";) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (collided.add\(currentCar\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (collided.add\(returnObjects.get\(i\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(return) K
( collided;) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( collided;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( reset\(\) {) p n
() S 8 T () S 16 T () S
(// returning to the initial state of the current simulation) c n
() p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < roads.size\(\); i++\) {) p n
() N
() S 8 T () S 16 T () S 24 T (Road cr = roads.get\(i\);) N
() N
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Integer, Lane>> lIt = cr.getLanes\(\).entry) N
(Set\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(lIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Lane currentLane = lIt.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (currentLane.getCarsInLane\(\).clear\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Iterator<Entry<Point2D.Float, ConnectionPoint>> ) N
(cpIt = currentLane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getConnectionPoints\(\).entrySet\() N
(\).iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(cpIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Iterator<Entry<Lane, Connection>> conIt ) N
(= cpIt.next\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getValue\(\).getConnectio) N
(ns\(\).entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(while) K
( \(conIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (conIt.next\(\).getValue\(\).getCarsI) N
(nLane\(\).clear\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.cars.clear\(\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (lights.get\(i\).reset\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (Car.setCarsCreated\(0\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < parks.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (parks.get\(i\).reset\(\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() S 8 T () N
() S 8 T () S
(public) K
( ArrayList<Lane> getLanes\(\) {) p n
() S 8 T () S 16 T (ArrayList<Lane> laneReturn = ) S
(new) K
( ArrayList<Lane>\(\);) p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < this.roads.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (Road cr = roads.get\(i\);) N
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Integer, Lane>> lIt = cr.getLanes\(\).entry) N
(Set\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(lIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (laneReturn.add\(lIt.next\(\).getValue\(\)\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
(CarWorld.java) (Page 3/4) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(return) K
( laneReturn;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addNewLight\(Integer selectedLane, Point point\) {) p n
() N
() S 8 T () S 16 T (Lane sl = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < this.getLanes\(\).size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(this.getLanes\(\).get\(i\).getLaneId\(\) == selectedLane\) ) p n
({) N
() S 8 T () S 16 T () S 24 T () S 32 T (sl = this.getLanes\(\).get\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (Point2D.Float closest = getClosestPointOnSegment\(sl.getStart\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T (sl.getEnd\(\), point\);) N
() S 8 T () S 16 T (TrafficLight tl = ) S
(new) K
( TrafficLight\(sl, ") p
(green) str
(", 5f, 5f, 1f, close) p n
(st\);) N
() S 8 T () S 16 T (sl.addTrafficLight\(tl\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(static) K
( Point2D.Float getClosestPointOnSegment\(Point2D.Float ss,) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float se, Point p\) {) N
() S 8 T () S 16 T () S
(return) K
( getClosestPointOnSegment\(ss.x, ss.y, se.x, se.y, p.x, p.y) p n
(\);) N
() S 8 T (}) N
() N
() S 8 T () S
(/**) C n
() S 8 T ( * used to find coordinate for the new traffic light From) N
() S 8 T ( * http://www.java2s.com) N
() S 8 T ( * /Code/Java/2D-Graphics-GUI/Returnsclosestpointonsegmenttopoint.htm) N
() S 8 T ( **/) N
() p 8 T () S
(public) K
( ) p
(static) K
( Point2D.Float getClosestPointOnSegment\() p
(float) k
( sx1, ) p
(float) k
( sy) p n
(1,) N
() S 8 T () S 16 T () S 24 T () S
(float) k
( sx2, ) p
(float) k
( sy2, ) p
(int) k
( px, ) p
(int) k
( py\) {) p n
() S 8 T () S 16 T () S
(double) k
( xDelta = sx2 - sx1;) p n
() S 8 T () S 16 T () S
(double) k
( yDelta = sy2 - sy1;) p n
() N
() S 8 T () S 16 T () S
(if) K
( \(\(xDelta == 0\) && \(yDelta == 0\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( IllegalArgumentException\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (") S
(Segment start equals segment end) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(double) k
( u = \(\(px - sx1\) * xDelta + \(py - sy1\) * yDelta\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (/ \(xDelta * xDelta + yDelta * yDelta\);) N
() N
() S 8 T () S 16 T () S
(final) K
( Point2D.Float closestPoint;) p n
() S 8 T () S 16 T () S
(if) K
( \(u < 0\) {) p n
() S 8 T () S 16 T () S 24 T (closestPoint = ) S
(new) K
( Point2D.Float\(sx1, sy1\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(u > 1\) {) p n
() S 8 T () S 16 T () S 24 T (closestPoint = ) S
(new) K
( Point2D.Float\(sx2, sy2\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (closestPoint = ) S
(new) K
( Point2D.Float\(\() p
(float) k
(\) Math.round\(sx1 ) p n
(+ u) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (* xDelta\), \() S
(float) k
(\) Math.round\(sy1 + u * ) p n
(yDelta\)\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(return) K
( closestPoint;) p n
() S 8 T (}) N
() N
(}) N
(CarWorld.java) (Page 4/4) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/CarWorld.java) (2/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: ChangingLane.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
() N
(public) K
( ) p
(class) K
( ) p
(ChangingLane) L
( ) p
(extends) K
( Lane {) p n
() S 8 T () S
(// special lane that will be created dynamically when ever a car changes) c n
() p 8 T () S
(//NOT IN USE IN CURRENT VERSION OF THE SYSTEM) c n
() p 8 T () S
(private) K
( Lane startLane;) p n
() S 8 T () S
(private) K
( Lane targetLane;) p n
() S 8 T () S
(private) K
( Point2D.Float startPoint, endPoint;) p n
() N
() S 8 T () S
(public) K
( ChangingLane\(Lane sl, Lane tl, Road road, Point2D.Float sp\) {) p n
() S 8 T () S 16 T () S
(super) K
(\(\);) p n
() S 8 T () S 16 T (this.contained=road;) N
() S 8 T () S 16 T (this.startLane = sl;) N
() S 8 T () S 16 T (this.targetLane = tl;) N
() S 8 T () S 16 T (this.startPoint = sp;) N
() S 8 T () S 16 T (this.endPoint = setUpChangingLane\(sl, tl, sp\);) N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( Float setUpChangingLane\(Lane sl, Lane tl, Float sp\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( calculateLaneSpan\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Float nextPosition\(Car car, ) p
(float) k
( targetDistance,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( distanceTravelled\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getStart\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.startPoint;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getEnd\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.endPoint;) p n
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.contained;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( findDistance\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() N
(ChangingLane.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (@Override) N
() S 8 T () S
(public) K
( Car getFrontCar\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( TrafficLight getNextTrafficLight\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paintBorders\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () N
() S 8 T (}) N
() N
(}) N
(ChangingLane.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/ChangingLane.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: ConnectTest.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( tests;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.util.HashMap;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Map.Entry;) p n
() N
(import) K
( model.Car;) p n
(import) K
( model.Connection;) p n
(import) K
( model.ConnectionPoint;) p n
(import) K
( model.Lane;) p n
(import) K
( model.Road;) p n
(import) K
( model.StraightRoad;) p n
(import) K
( model.UnknownConnectionError;) p n
() N
(public) K
( ) p
(class) K
( ) p
(ConnectTest) L
( {) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\) ) p
(throws) K
( InterruptedException {) p n
() S 8 T () S 16 T (Road sr = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(200, 200\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(400, 200\), 3, 1\);) p n
() S 8 T () S 16 T (System.out.println\(sr.getBilateral\(\)\);) N
() S 8 T () S 16 T (Road sr2 = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(300, 1000\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(300, 200\), 1, 0\);) p n
() S 8 T () S 16 T (Car car= ) S
(new) K
( Car\(\);) p n
() S 8 T () S 16 T (System.out.println\(sr2.getBilateral\(\)\);) N
() S 8 T () S 16 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr2, 0, sr, 1\);) N
() S 8 T () S 16 T () S 24 T () N
() S 8 T () S 16 T () S 24 T (Lane testLane = sr2.getLanes\(\).get\(0\);) N
() S 8 T () S 16 T () S 24 T (System.out.println\(testLane\);) N
() S 8 T () S 16 T () S 24 T (HashMap<Point2D.Float, ConnectionPoint> cpMap = testLane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getConnectionPoints\(\);) N
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Point2D.Float, ConnectionPoint>> it = cpM) N
(ap) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(it.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Map.Entry pair = \(Map.Entry\) it.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(pair.getKey\(\) + ") S
( = ) str
(" + pair.g) p n
(etValue\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (ConnectionPoint testCp = \(ConnectionPoint\) pair.) N
(getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (HashMap<Lane, Connection> connections = testCp.g) N
(etConnections\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Iterator<Entry<Lane, Connection>> it1 = connecti) N
(ons.entrySet\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(it1.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(printing connection) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Map.Entry pair1 = \(Map.Entry\) it1.next\(\)) N
(;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Connection c1 = \(Connection\) pair1.getVa) N
(lue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Next position test:) str
("+ c1.n) p n
(extPosition\(car, 0.02f, 0.34f\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(c1.getStart\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(c1.getIntersection\(\)\)) N
(;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(c1.getEnd\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (} ) S
(catch) K
( \(UnknownConnectionError e\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// TODO Auto-generated catch block) c n
() p 8 T () S 16 T () S 24 T (System.out.println\(") S
(error) str
("\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (Car c1 = ) S
(new) K
( Car\(\);) p n
() S 8 T () S 16 T (c1.setCurrentSpeed\(10\);) N
() S 8 T () S 16 T (c1.enterLane\(sr2.getLanes\(\).get\(0\), sr2.getLanes\(\).get\(0\).getSta) N
(ConnectTest.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(rt\(\)\);) p n
() S 8 T () S 16 T () S
(while) K
( \() p
(true) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (c1.move\(\);) N
() S 8 T () S 16 T () S 24 T (Thread.sleep\(20\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
(}) N
(ConnectTest.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/tests/ConnectTest.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: Connection.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.RenderingHints;) p n
(import) K
( java.awt.geom.Line2D;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.math.BigDecimal;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Map.Entry;) p n
(//this is quadratic bezier curve that car will move onto while changing) c n
(// lane) N
() p n
(public) K
( ) p
(class) K
( ) p
(Connection) L
( ) p
(extends) K
( Lane {) p n
() N
() S 8 T () S
(private) K
( Road sRoad, tRoad;) p n
() S 8 T () S
(private) K
( Lane sLane, tLane;) p n
() S 8 T () S
(private) K
( Point2D.Float interStartPoint;) p n
() S 8 T () S
(private) K
( Point2D.Float interEndPoint;) p n
() S 8 T () S
(private) K
( Point2D.Float intersectingPoint;) p n
() S 8 T () S
(private) K
( ConnectionPoint cp;) p n
() S 8 T () S
(private) K
( ) p
(float) k
([] bezierDistanceTable = ) p
(new) K
( ) p
(float) k
([1001];) p n
() S 8 T () S
(private) K
( Point2D.Float[] bezierPointTable = ) p
(new) K
( Point2D.Float[1001];) p n
() N
() S 8 T () S
(public) K
( Connection\(\) {) p n
() S 8 T () S 16 T () S
(// dummy: used to represent an exit point.) c n
() p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Connection\(Road sRoad, Lane sLane, Road tRoad, Lane tLane,) p n
() S 8 T () S 16 T () S 24 T (ConnectionPoint cp, Point2D.Float interStartPoint,) N
() S 8 T () S 16 T () S 24 T (Point2D.Float interEndPoint, Point2D.Float intersectingP) N
(oint\)) N
() S 8 T () S 16 T () S 24 T () S
(throws) K
( UnknownConnectionError {) p n
() S 8 T () S 16 T () S
(super) K
(\(\);) p n
() S 8 T () S 16 T (this.sRoad = sRoad;) N
() S 8 T () S 16 T (this.sLane = sLane;) N
() S 8 T () S 16 T (this.tRoad = tRoad;) N
() S 8 T () S 16 T (this.tLane = tLane;) N
() S 8 T () S 16 T (this.cp = cp;) N
() S 8 T () S 16 T (this.interStartPoint = interStartPoint;) N
() S 8 T () S 16 T (this.interEndPoint = interEndPoint;) N
() S 8 T () S 16 T (this.intersectingPoint = intersectingPoint;) N
() S 8 T () S 16 T (setupBezier\(interStartPoint, intersectingPoint, interEndPoint\);) N
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( calculateLaneSpan\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( bezierDistanceTable[1000];) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float nextPosition\(Car car, ) p
(float) k
( targetDistance,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( distanceTravelled\) {) p n
() N
() S 8 T () S 16 T () S
(// bezier curve. Only up the table for coordinate according to) c n
() p 8 T () S 16 T () S
(// distanceTravelled+targetDistance;) c n
() p n
() S 8 T () S 16 T () S
(float) k
( finalDistance = targetDistance + distanceTravelled;) p n
() N
() S 8 T () S 16 T () S
(float) k
( fdRound = round\(finalDistance\).floatValue\(\);) p n
() N
() S 8 T () S 16 T () S
(int) k
( index = binarySearch\(this.bezierDistanceTable, finalDistance) p n
(,) N
() S 8 T () S 16 T () S 24 T () S 32 T (targetDistance\);) N
() S 8 T () S 16 T () S
(if) K
( \(index == -1\) {) p n
(Connection.java) (Page 1/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (System.out.println\(") S
(something went wrong) str
("\);) p n
() S 8 T () S 16 T () S 24 T (System.exit\(0\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(index > 1000\) {) p n
() S 8 T () S 16 T () S 24 T (index = 1000;) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (car.setTravelled\(finalDistance\);) N
() S 8 T () S 16 T () S
(return) K
( bezierPointTable[index];) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getStart\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.interStartPoint;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getEnd\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.interEndPoint;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getIntersection\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.intersectingPoint;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getTargetRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.tRoad;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getTargetLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.tLane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getStartLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.sLane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.sRoad;) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( Point2D.Float calculateBezier\() p
(float) k
( t\) {) p n
() N
() S 8 T () S 16 T () S
(float) k
( x = \(1 - t\) * \(1 - t\) * this.interStartPoint.x + 2 * \(1 - ) p n
(t\) * t) N
() S 8 T () S 16 T () S 24 T () S 32 T (* this.intersectingPoint.x + t * t * this.interE) N
(ndPoint.x;) N
() S 8 T () S 16 T () S
(float) k
( y = \(1 - t\) * \(1 - t\) * this.interStartPoint.y + 2 * \(1 - ) p n
(t\) * t) N
() S 8 T () S 16 T () S 24 T () S 32 T (* this.intersectingPoint.y + t * t * this.interE) N
(ndPoint.y;) N
() S 8 T () S 16 T () S
(return) K
( ) p
(new) K
( Point2D.Float\(x, y\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( setupBezier\(Point2D.Float startingPoint,) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float controlPoint, Point2D.Float endPoint\) {) N
() S 8 T () S 16 T () S
(float) k
( t = 0.000f;) p n
() S 8 T () S 16 T () S
(float) k
( x;) p n
() S 8 T () S 16 T () S
(float) k
( y;) p n
() S 8 T () S 16 T () S
(float) k
( cumulativeDistance = 0;) p n
() S 8 T () S 16 T () S
(int) k
( i = 0;) p n
() S 8 T () S 16 T (Point2D.Float bezierPoint;) N
() S 8 T () S 16 T (Point2D.Float currentPoint = startingPoint;) N
() S 8 T () S 16 T () S
(for) K
( \(; t <= 1; i++\) {) p n
() N
() S 8 T () S 16 T () S 24 T (x = \(1 - t\) * \(1 - t\) * startingPoint.x + 2 * \(1 - t\) * ) N
(t) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (* controlPoint.x + t * t * endPoint.x;) N
() S 8 T () S 16 T () S 24 T (y = \(1 - t\) * \(1 - t\) * startingPoint.y + 2 * \(1 - t\) * ) N
(t) N
(Connection.java) (Page 2/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Connection.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (* controlPoint.y + t * t * endPoint.y;) N
() S 8 T () S 16 T () S 24 T (bezierPoint = ) S
(new) K
( Point2D.Float\(x, y\);) p n
() S 8 T () S 16 T () S 24 T (bezierPointTable[i] = bezierPoint; ) S
(// t for point) c n
() p 8 T () S 16 T () S 24 T (cumulativeDistance += \() S
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (\(bezierPoint.x - currentPoint.x\), 2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ Math.pow\(bezierPoint.y - currentPoint.) N
(y, 2.0\)\);) N
() S 8 T () S 16 T () S 24 T (bezierDistanceTable[i] = cumulativeDistance;) N
() S 8 T () S 16 T () S 24 T (currentPoint = bezierPoint;) N
() S 8 T () S 16 T () S 24 T (t += 0.001f;) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (System.out.println\(") S
(bezier setup) str
("\);) p n
() S 8 T () S 16 T (System.out.println\(") S
(Total connection distance = ) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ bezierDistanceTable[1000]\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(static) K
( BigDecimal round\() p
(float) k
( finalDistance\) {) p n
() N
() S 8 T () S 16 T (BigDecimal bd = ) S
(new) K
( BigDecimal\(finalDistance\);) p n
() S 8 T () S 16 T (bd.setScale\(4, BigDecimal.ROUND_HALF_UP\);) N
() S 8 T () S 16 T () S
(return) K
( bd;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(int) k
( binarySearch\() p
(float) k
([] table, ) p
(float) k
( target, ) p
(float) k
( errorBound\) ) p n
({) N
() S 8 T () S 16 T () S
(int) k
( firstKey = \(table.length / 2\);) p n
() S 8 T () S 16 T () S
(if) K
( \(Math.abs\(table[firstKey] - target\) < errorBound\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( firstKey;) p n
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[firstKey] > target\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// look for the values smaller) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, 0, firstKey - 1, target, erro) p n
(rBound\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[firstKey] < target\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// look for the values larger) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, firstKey + 1, table.length, t) p n
(arget,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (errorBound\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( -1;) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(int) k
( binarySearch\() p
(float) k
([] table, ) p
(int) k
( lowerBound, ) p
(int) k
( upperBound,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( target, ) p
(float) k
( errorBound\) {) p n
() N
() S 8 T () S 16 T () S
(int) k
( halfPoint = \(lowerBound + upperBound\) / 2;) p n
() S 8 T () S 16 T () S
(if) K
( \(lowerBound == upperBound\) {) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( halfPoint;) p n
() N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(else) K
( ) p
(if) K
( \(Math.abs\(table[halfPoint] - target\) < errorBound\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( halfPoint;) p n
() N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[halfPoint] > target\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, lowerBound, halfPoint - 1, ta) p n
(rget,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (errorBound\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[halfPoint] < target\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// look for bigger half) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, halfPoint + 1, upperBound, ta) p n
(rget,) N
(Connection.java) (Page 3/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (errorBound\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( -1;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( findDistance\(Car car\) {) p n
() S 8 T () S 16 T () S
(// not needed for this class) c n
() p 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Car getFrontCar\(Car car\) {) p n
() N
() S 8 T () S 16 T () S
(float) k
( closest = 100f;) p n
() S 8 T () S 16 T (Car closestCar = ) S
(null) k
(;) p n
() N
() S 8 T () S 16 T () S
(float) k
( dtp = Car.distance\(this.cp.getPointCoordinate\(\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.sLane.getStart\(\)\);) N
() S 8 T () S 16 T () S
(// needs to see cars in front of it currently in originating lan) c n
(e, cars) N
() p 8 T () S 16 T () S
(// in current connection) c n
() p 8 T () S 16 T () S
(// as well as cars after the connection) c n
() p n
() S 8 T () S 16 T () S
(// in originating lane) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> olCars = this.sLane.getCarsInLane\() N
(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(olCars.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Car oCar = olCars.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(oCar.getTravelled\(\) > car.getTravelled\(\) + dtp) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(oCar.getTravelled\(\) - \(car.getTravel) N
(led\(\) + dtp\)\) < 100f\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (closest = Car.distance\(oCar.getCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (car.getCoordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (closestCar = oCar;) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// in ending lane) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> elCars = this.tLane.getCarsInLane\() N
(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(elCars.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Car eCar = elCars.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(eCar.getTravelled\(\) > Car.distance\() p
(new) K
( Point2D.Float) p n
(\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (intersectingPoint.x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (- \(interEndPoint.x - int) N
(ersectingPoint.x\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (intersectingPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (- \(interEndPoint.y - int) N
(ersectingPoint.y\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.tLane.getStart\(\)\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& Car.distance\(eCar.getCoordinate\(\), ca) N
(r.getCoordinate\(\)\) < 100f) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(Car.distance\(eCar.getCoordinate\(\), t) N
(his.interEndPoint\) < Car) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.distance\(car.getCoordin) N
(ate\(\), this.interEndPoint\)\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (closest = Car.distance\(eCar.getCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (car.getCoordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (closestCar = eCar;) N
() S 8 T () S 16 T () S 24 T (}) N
(Connection.java) (Page 4/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Connection.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// in current connection) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> cit = this.getCarsInLane\(\).entrySe) N
(t\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.iterator\(\);) N
() N
() S 8 T () S 16 T () S
(while) K
( \(cit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry<Integer, Car> cPair = cit.next\(\);) N
() S 8 T () S 16 T () S 24 T (Car cCar = cPair.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(cCar.getTravelled\(\) > car.getTravelled\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// cCar is somewhere ahead of the car in the sam) c n
(e lane) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(\(\(cCar.getTravelled\(\) - car.getTravelled\(\)\) ) p n
(< closest\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& !car.equals\(cCar\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (closest = cCar.getTravelled\(\) - car.getT) N
(ravelled\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (closestCar = cCar;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// if closest car is null it means the parameter car is the lead) c n
(ing) N
() p 8 T () S 16 T () S
(// car) c n
() p 8 T () S 16 T () S
(return) K
( closestCar;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( TrafficLight getNextTrafficLight\(Car car\) {) p n
() S 8 T () S 16 T () S
(// not needed) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paintBorders\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// not needed) c n
() p n
() S 8 T (}) N
() N
(}) N
(Connection.java) (Page 5/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Connection.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: ConnectionPoint.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.HashMap;) p n
() N
(//object holding connections) c n
(public) K
( ) p
(class) K
( ) p
(ConnectionPoint) L
( {) p n
() S 8 T () S
(private) K
( HashMap<Lane, Connection> connections = ) p
(new) K
( HashMap<Lane, Connec) p n
(tion>\(\);) N
() S 8 T () S
(private) K
( Point2D.Float pointCoordinate;) p n
() S 8 T () S
(private) K
( Road road;) p n
() S 8 T () S
(private) K
( Lane lane;) p n
() N
() S 8 T () S
(public) K
( ConnectionPoint\(Road road, Lane lane, Point2D.Float coordinate\) {) p n
() S 8 T () S 16 T (this.road = road;) N
() S 8 T () S 16 T (this.lane = lane;) N
() S 8 T () S 16 T (this.pointCoordinate = coordinate;) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getPointCoordinate\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( pointCoordinate;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setPointCoordinate\(Point2D.Float pointCoordinate\) {) p n
() S 8 T () S 16 T (this.pointCoordinate = pointCoordinate;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( road;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( lane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addConnection\(Connection cn\) ) p
(throws) K
( UnknownConnectionError {) p n
() S 8 T () S 16 T (connections.put\(cn.getTargetLane\(\), cn\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( HashMap<Lane, Connection> getConnections\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( connections;) p n
() S 8 T (}) N
(}) N
(ConnectionPoint.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/ConnectionPoint.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: ConsolePanel.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.BorderLayout;) p n
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Dimension;) p n
(import) K
( java.awt.Font;) p n
(import) K
( java.awt.event.ActionEvent;) p n
(import) K
( java.awt.event.ActionListener;) p n
(import) K
( java.io.File;) p n
() N
(import) K
( javax.swing.ImageIcon;) p n
(import) K
( javax.swing.JButton;) p n
(import) K
( javax.swing.JLabel;) p n
(import) K
( javax.swing.JPanel;) p n
(import) K
( javax.swing.JSlider;) p n
(import) K
( javax.swing.event.ChangeEvent;) p n
(import) K
( javax.swing.event.ChangeListener;) p n
() N
(import) K
( control.ParkController;) p n
(import) K
( control.WorldController;) p n
() N
(public) K
( ) p
(class) K
( ) p
(ConsolePanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( ActionListener {) p n
() N
() S 8 T () S
(private) K
( WorldController wController;) p n
() S 8 T () S
(private) K
( CarSimView mainFrame;) p n
() S 8 T () S
(private) K
( Font font = ) p
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 20\);) p n
() S 8 T () S
(private) K
( JButton startButton, stopButton, returnButton, trafficlightButto) p n
(n,) N
() S 8 T () S 16 T () S 24 T (helpButton, resetButton, addLightBtn;) N
() S 8 T () S
(private) K
( JLabel cntrlPanel_gfx, carSpawnLabel, teamLabel, carSpeedLabel;) p n
() S 8 T () S
(private) K
( JPanel bottomButtonPanel, topButtonPanel;) p n
() S 8 T () S
(private) K
( JSlider carSpawnSlider = ) p
(new) K
( JSlider\(0, 10, 3\);) p n
() S 8 T () S
(private) K
( BorderLayout borderLayout = ) p
(new) K
( BorderLayout\(\);) p n
() S 8 T (DynamicChart demo;) N
() S 8 T () S
(private) K
( ImageIcon cntrlPanel_img, teamlogo_img, carspeed_img;) p n
() N
() S 8 T () S
(public) K
( ConsolePanel\(WorldController wController, CarSimView mainFrame,) p n
() S 8 T () S 16 T () S 24 T () S
(final) K
( ParkController pc\) {) p n
() S 8 T () S 16 T (this.mainFrame = mainFrame;) N
() S 8 T () S 16 T (this.wController = wController;) N
() S 8 T () S 16 T (this.setPreferredSize\() S
(new) K
( Dimension\(200, 800\)\);) p n
() N
() S 8 T () S 16 T (this.setLayout\(borderLayout\);) N
() N
() S 8 T () S 16 T (topButtonPanel = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T (bottomButtonPanel = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T (demo = ) S
(new) K
( DynamicChart\("", this.wController\);) p n
() N
() S 8 T () S 16 T (Font font = ) S
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 14\);) p n
() S 8 T () S 16 T (carSpawnLabel = ) S
(new) K
( JLabel\(") p
(Car Spawn Rate) str
("\);) p n
() S 8 T () S 16 T (carSpawnLabel.setFont\(font\);) N
() S 8 T () S 16 T (cntrlPanel_gfx = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (cntrlPanel_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (File.separator + ") S
(gfx) str
(" + File.separator + ") p
(cntrl_gf) str n
(x.gif) S
("\)\);) p n
() S 8 T () S 16 T (cntrlPanel_gfx.setIcon\(cntrlPanel_img\);) N
() S 8 T () S 16 T (teamLabel = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (teamlogo_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (File.separator + ") S
(gfx) str
(" + File.separator + ") p
(teamNE) str n
(RD_img.gif) S
("\)\);) p n
() S 8 T () S 16 T (teamLabel.setIcon\(teamlogo_img\);) N
() S 8 T () S 16 T (carSpeedLabel = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (carspeed_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (File.separator + ") S
(gfx) str
(" + File.separator + ") p
(CSC.gif) str
() p n
("\)\);) N
() S 8 T () S 16 T (carSpeedLabel.setIcon\(carspeed_img\);) N
() N
() S 8 T () S 16 T (this.add\(topButtonPanel, BorderLayout.NORTH\);) N
() S 8 T () S 16 T () S
(// topButtonPanel) c n
(ConsolePanel.java) (Page 1/3) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (this.add\(bottomButtonPanel, BorderLayout.SOUTH\);) N
() N
() S 8 T () S 16 T () S
(// JButton setup!) c n
() p 8 T () S 16 T (stopButton = ) S
(new) K
( CustomJButton\(") p
(Stop) str
("\);) p n
() S 8 T () S 16 T (stopButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (startButton = ) S
(new) K
( CustomJButton\(") p
(Start) str
("\);) p n
() S 8 T () S 16 T (startButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (addLightBtn = ) S
(new) K
( CustomJButton\(") p
(Add Traffic Light) str
("\);) p n
() S 8 T () S 16 T (addLightBtn.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (returnButton = ) S
(new) K
( CustomJButton\(") p
(Return To Main Menu) str
("\);) p n
() S 8 T () S 16 T (returnButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (trafficlightButton = ) S
(new) K
( CustomJButton\(") p
(Adjust Traffic Lights) str
("\);) p n
() S 8 T () S 16 T (trafficlightButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (helpButton = ) S
(new) K
( CustomJButton\(") p
(Help?) str
("\);) p n
() S 8 T () S 16 T (helpButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (resetButton = ) S
(new) K
( CustomJButton\(") p
(RESET) str
("\);) p n
() S 8 T () S 16 T (resetButton.addActionListener\() S
(this) k
(\);) p n
() N
() S 8 T () S 16 T (JLabel controlTitleLabel = ) S
(new) K
( JLabel\(") p
(Control Panel) str
("\);) p n
() S 8 T () S 16 T (controlTitleLabel.setFont\(font\);) N
() S 8 T () S 16 T (JLabel trafficTitleLabel = ) S
(new) K
( JLabel\(") p
(Adjust Traffic Ligts) str
("\);) p n
() N
() S 8 T () S 16 T (carSpawnSlider.setPaintTicks\() S
(true) k
(\);) p n
() S 8 T () S 16 T (carSpawnSlider.setPaintLabels\() S
(true) k
(\);) p n
() S 8 T () S 16 T (carSpawnSlider.setMinorTickSpacing\(1\);) N
() S 8 T () S 16 T (carSpawnSlider.setMajorTickSpacing\(5\);) N
() S 8 T () S 16 T (carSpawnSlider.addChangeListener\() S
(new) K
( ChangeListener\(\) {) p n
() N
() S 8 T () S 16 T () S 24 T (@Override) N
() S 8 T () S 16 T () S 24 T () S
(public) K
( ) p
(void) k
( stateChanged\(ChangeEvent e\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T (JSlider source = \(JSlider\) e.getSource\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// red slider) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( value = source.getValue\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (pc.setSpawnChance\(value\);) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T (}\);) N
() N
() S 8 T () S 16 T (topButtonPanel.add\(cntrlPanel_gfx\);) N
() S 8 T () S 16 T (topButtonPanel.add\(stopButton\);) N
() S 8 T () S 16 T (topButtonPanel.add\(startButton\);) N
() S 8 T () S 16 T (topButtonPanel.add\(resetButton\);) N
() N
() S 8 T () S 16 T (topButtonPanel.add\(trafficlightButton\);) N
() N
() S 8 T () S 16 T (topButtonPanel.add\(addLightBtn\);) N
() S 8 T () S 16 T (topButtonPanel.add\(carSpawnLabel\);) N
() S 8 T () S 16 T (topButtonPanel.add\(carSpawnSlider\);) N
() S 8 T () S 16 T (topButtonPanel.add\(demo.content\);) N
() S 8 T () S 16 T (topButtonPanel.add\(carSpeedLabel\);) N
() S 8 T () S 16 T (bottomButtonPanel.add\(returnButton\);) N
() S 8 T () S 16 T (bottomButtonPanel.add\(helpButton\);) N
() S 8 T () S 16 T (bottomButtonPanel.add\(teamLabel\);) N
() S 8 T () S 16 T (topButtonPanel.setPreferredSize\() S
(new) K
( Dimension\(200, 520\)\);) p n
() S 8 T () S 16 T (bottomButtonPanel.setPreferredSize\() S
(new) K
( Dimension\(200, 100\)\);) p n
() N
() S 8 T () S 16 T (mainFrame.add\() S
(this) k
(\);) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == stopButton\) {) p n
() S 8 T () S 16 T () S 24 T (this.wController.pause\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\) == startButton\) {) p n
() S 8 T () S 16 T () S 24 T (this.wController.start\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\) == returnButton\) {) p n
(ConsolePanel.java) (Page 2/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/ConsolePanel.java) (1/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (this.wController.pause\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.setAddingLight\() S
(false) k
(\);) p n
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Main Menu) str
("\);) p n
() S 8 T () S 16 T () S 24 T (mainFrame.mainMenu\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\) == trafficlightButton\) {) p n
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Traffic Light Menu) str
("\);) p n
() S 8 T () S 16 T () S 24 T (this.wController.pause\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.TrafficPanel\(0\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\) == helpButton\) {) p n
() S 8 T () S 16 T () S 24 T (this.wController.pause\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.HelpPanel\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\) == resetButton\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// RESET) c n
() p 8 T () S 16 T () S 24 T (this.wController.reset\(\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\) == addLightBtn\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(mainFrame.getAddingLight\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (mainFrame.setAddingLight\() S
(false) k
(\);) p n
() N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(!mainFrame.getAddingLight\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (wController.pause\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (mainFrame.setAddingLight\() S
(true) k
(\);) p n
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T (mainFrame.repaint\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( DynamicChart getDynamicChart\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.demo;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( enableButtons\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (startButton.setEnabled\() S
(true) k
(\);) p n
() S 8 T () S 16 T (stopButton.setEnabled\() S
(true) k
(\);) p n
() S 8 T () S 16 T (helpButton.setEnabled\() S
(true) k
(\);) p n
() S 8 T () S 16 T (trafficlightButton.setEnabled\() S
(true) k
(\);) p n
() S 8 T () S 16 T (helpButton.setEnabled\() S
(true) k
(\);) p n
() S 8 T () S 16 T (resetButton.setEnabled\() S
(true) k
(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( disableButtons\(\) {) p n
() S 8 T () S 16 T (startButton.setEnabled\() S
(false) k
(\);) p n
() S 8 T () S 16 T (stopButton.setEnabled\() S
(false) k
(\);) p n
() S 8 T () S 16 T (helpButton.setEnabled\() S
(false) k
(\);) p n
() S 8 T () S 16 T (trafficlightButton.setEnabled\() S
(false) k
(\);) p n
() S 8 T () S 16 T (helpButton.setEnabled\() S
(false) k
(\);) p n
() S 8 T () S 16 T (resetButton.setEnabled\() S
(false) k
(\);) p n
() S 8 T (}) N
(}) N
(ConsolePanel.java) (Page 3/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/ConsolePanel.java) (2/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: CustomJButton.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Font;) p n
(import) K
( java.awt.GradientPaint;) p n
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.Graphics2D;) p n
(import) K
( java.awt.RenderingHints;) p n
(import) K
( java.awt.Shape;) p n
(import) K
( java.awt.geom.RoundRectangle2D;) p n
() N
(import) K
( javax.swing.ButtonModel;) p n
(import) K
( javax.swing.JButton;) p n
(//The creation of a custom JButton that extends the normal java swing JButton) c n
(public) K
( ) p
(class) K
( ) p
(CustomJButton) L
( ) p
(extends) K
( JButton {) p n
() N
() S 8 T () S
(private) K
( GradientPaint gradientPaint; ) p
(// provides a way to fill a Shape w) c n
(ith) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T () S
(// a linear color gradient pattern) c n
() p 8 T () S
(private) K
( Color deafultButtonColour = ) p
(new) K
( Color\(255, 255, 255\);) p n
() S 8 T () S
(private) K
( ) p
(final) K
( Color buttonColour1 = ) p
(new) K
( Color\(100, 100, 100\);) p n
() S 8 T () S
(private) K
( ) p
(final) K
( Color buttonColour2 = ) p
(new) K
( Color\(255, 0, 0\);) p n
() N
() S 8 T () S
(public) K
( CustomJButton\(String text\) {) p n
() S 8 T () S 16 T () S
(super) K
(\(text\);) p n
() S 8 T () S 16 T (setFont\() S
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 12\)\);) p n
() S 8 T () S 16 T (setForeground\(Color.WHITE\);) N
() S 8 T () S 16 T (setFocusable\() S
(false) k
(\);) p n
() S 8 T () S 16 T (setContentAreaFilled\() S
(false) k
(\);) p n
() S 8 T () S 16 T (setBorderPainted\() S
(false) k
(\);) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T (Graphics2D g2d = \(Graphics2D\) g.create\(\);) N
() S 8 T () S 16 T (g2d.setRenderingHint\(RenderingHints.KEY_ANTIALIASING,) N
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.VALUE_ANTIALIAS_ON\);) N
() S 8 T () S 16 T () S
(int) k
( height = getHeight\(\);) p n
() S 8 T () S 16 T () S
(int) k
( width = getWidth\(\);) p n
() S 8 T () S 16 T (ButtonModel buttonModel = getModel\(\);) S
(// The JButton Model) c n
() p n
() S 8 T () S 16 T (gradientPaint = ) S
(new) K
( GradientPaint\(0, 0, deafultButtonColour, 0,) p n
() S 8 T () S 16 T () S 24 T () S 32 T (height / 2, buttonColour1, ) S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (g2d.setPaint\(gradientPaint\);) N
() S 8 T () S 16 T (GradientPaint gradientPainter1;) N
() N
() S 8 T () S 16 T () S
(if) K
( \(!buttonModel.isPressed\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (gradientPainter1 = ) S
(new) K
( GradientPaint\(0, 0, ) p
(new) K
( Color\(100) p n
(, 100, 100\), 0,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (height - 1, ) S
(new) K
( Color\(0, 0, 0\)\);) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (gradientPaint = ) S
(new) K
( GradientPaint\(0, 0, deafultButtonCol) p n
(our, 0,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (height / 2, buttonColour2, ) S
(true) k
(\);) p n
() S 8 T () S 16 T () S 24 T (g2d.setPaint\(gradientPaint\);) N
() S 8 T () S 16 T () S 24 T (gradientPainter1 = ) S
(new) K
( GradientPaint\(0, 0, ) p
(new) K
( Color\(0, ) p n
(0, 0\), 0, height - 1,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(new) K
( Color\(100, 100, 100\)\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (RoundRectangle2D.Float r2d = ) S
(new) K
( RoundRectangle2D.Float\(0, 0,) p n
() S 8 T () S 16 T () S 24 T () S 32 T (width - 1, height - 1, 10, 10\);) N
() S 8 T () S 16 T (Shape clip = g2d.getClip\(\);) N
() S 8 T () S 16 T (g2d.clip\(r2d\);) N
() S 8 T () S 16 T (g2d.fillRect\(0, 0, width, height\);) N
() S 8 T () S 16 T (g2d.setClip\(clip\);) N
() S 8 T () S 16 T (g2d.setPaint\(gradientPainter1\);) N
() S 8 T () S 16 T (g2d.drawRoundRect\(0, 0, width - 1, height - 1, 10, 10\);) N
(CustomJButton.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (g2d.dispose\(\);) N
() S 8 T () S 16 T (super.paintComponent\(g\);) N
() N
() S 8 T (}) N
(}) N
(CustomJButton.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/CustomJButton.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: DynamicChart.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.BorderLayout;) p n
(import) K
( java.awt.Color;) p n
() N
(import) K
( javax.swing.JPanel;) p n
() N
(import) K
( org.jfree.chart.ChartFactory;) p n
(import) K
( org.jfree.chart.ChartPanel;) p n
(import) K
( org.jfree.chart.JFreeChart;) p n
(import) K
( org.jfree.chart.axis.ValueAxis;) p n
(import) K
( org.jfree.chart.plot.XYPlot;) p n
(import) K
( org.jfree.data.time.Millisecond;) p n
(import) K
( org.jfree.data.time.TimeSeries;) p n
(import) K
( org.jfree.data.time.TimeSeriesCollection;) p n
(import) K
( org.jfree.data.xy.XYDataset;) p n
(import) K
( org.jfree.ui.ApplicationFrame;) p n
() N
(import) K
( control.WorldController;) p n
() N
(public) K
( ) p
(class) K
( ) p
(DynamicChart) L
( ) p
(extends) K
( ApplicationFrame {) p n
() S 8 T () S
(private) K
( TimeSeries series;) p n
() S 8 T () S
(private) K
( ) p
(double) k
( lastValue = 100.0;) p n
() S 8 T () S
(public) K
( JPanel content;) p n
() S 8 T () S
(private) K
( WorldController wc;) p n
() N
() S 8 T () S
(public) K
( DynamicChart\() p
(final) K
( String title, WorldController wc\) {) p n
() N
() S 8 T () S 16 T () S
(super) K
(\(title\);) p n
() S 8 T () S 16 T (this.series = ) S
(new) K
( TimeSeries\("", Millisecond.class\);) p n
() S 8 T () S 16 T (this.wc = wc;) N
() N
() S 8 T () S 16 T () S
(final) K
( TimeSeriesCollection dataset = ) p
(new) K
( TimeSeriesCollection\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.series\);) N
() S 8 T () S 16 T () S
(final) K
( JFreeChart chart = createChart\(dataset\);) p n
() N
() S 8 T () S 16 T () S
(// timer.setInitialDelay\(20\);) c n
() p n
() S 8 T () S 16 T () S
(// Sets background color of chart) c n
() p 8 T () S 16 T (chart.setBackgroundPaint\(Color.LIGHT_GRAY\);) N
() N
() S 8 T () S 16 T () S
(// Created JPanel to show graph on screen) c n
() p 8 T () S 16 T (content = ) S
(new) K
( JPanel\() p
(new) K
( BorderLayout\(\)\);) p n
() N
() S 8 T () S 16 T () S
(// Created Chartpanel for chart area) c n
() p 8 T () S 16 T () S
(final) K
( ChartPanel chartPanel = ) p
(new) K
( ChartPanel\(chart\);) p n
() N
() S 8 T () S 16 T () S
(// Added chartpanel to main panel) c n
() p 8 T () S 16 T (content.add\(chartPanel\);) N
() N
() S 8 T () S 16 T () S
(// Sets the size of whole window \(JPanel\)) c n
() p 8 T () S 16 T (chartPanel.setPreferredSize\() S
(new) K
( java.awt.Dimension\(200, 140\)\);) p n
() N
() S 8 T () S 16 T () S
(// Puts the whole content on a Frame) c n
() p 8 T () S 16 T () S
(// setContentPane\(content\);) c n
() p n
() S 8 T () S 16 T () S
(// timer.start\(\);) c n
() p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( updateData\(\) {) p n
() N
() S 8 T () S 16 T (this.lastValue = this.wc.getAverageSpeed\(\);) N
() N
() S 8 T () S 16 T () S
(final) K
( Millisecond now = ) p
(new) K
( Millisecond\(\);) p n
() S 8 T () S 16 T (this.series.addOrUpdate\() S
(new) K
( Millisecond\(\), this.lastValue\);) p n
() S 8 T () S 16 T () N
() S 8 T (}) N
() N
(DynamicChart.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(private) K
( JFreeChart createChart\() p
(final) K
( XYDataset dataset\) {) p n
() S 8 T () S 16 T () S
(final) K
( JFreeChart result = ChartFactory.createTimeSeriesChart\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (") S
(Average Car Speed) str
(", ") p
(Time) str
(", ") p
(Speed) str
(", dataset, ) p
(false) k
(,) p n
( ) S
(true) k
(, ) p
(false) k
(\);) p n
() S 8 T () S 16 T () N
() S 8 T () S 16 T () S
(final) K
( XYPlot plot = result.getXYPlot\(\);) p n
() N
() S 8 T () S 16 T (plot.setBackgroundPaint\() S
(new) K
( Color\(255,255,255\)\);) p n
() S 8 T () S 16 T (plot.setDomainGridlinesVisible\() S
(true) k
(\);) p n
() S 8 T () S 16 T (plot.setDomainGridlinePaint\(Color.lightGray\);) N
() S 8 T () S 16 T (plot.setRangeGridlinesVisible\() S
(true) k
(\);) p n
() S 8 T () S 16 T (plot.setRangeGridlinePaint\(Color.lightGray\);) N
() S 8 T () N
() N
() S 8 T () S 16 T (ValueAxis xaxis = plot.getDomainAxis\(\);) N
() S 8 T () S 16 T (xaxis.setAutoRange\() S
(true) k
(\);) p n
() N
() S 8 T () S 16 T () S
(// Domain axis would show data of 60 seconds for a time) c n
() p 8 T () S 16 T (xaxis.setFixedAutoRange\(3000.0\); ) S
(// 60 seconds) c n
() p 8 T () S 16 T () S
(// xaxis.setVerticalTickLabels\(true\);) c n
() p n
() S 8 T () S 16 T (ValueAxis yaxis = plot.getRangeAxis\(\);) N
() S 8 T () S 16 T (yaxis.setRange\(0.0, 200.0\);) N
() N
() S 8 T () S 16 T () S
(return) K
( result;) p n
() S 8 T (}) N
(}) N
(DynamicChart.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/DynamicChart.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: Lane.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.RenderingHints;) p n
(import) K
( java.awt.geom.Line2D;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.HashMap;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Map.Entry;) p n
() N
(import) K
( javax.swing.JOptionPane;) p n
() N
(//abstract class that all types of lanes extends) c n
(public) K
( ) p
(abstract) K
( ) p
(class) K
( ) p
(Lane) L
( {) p n
() N
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(float) k
( SMALL_NUM = \() p
(float) k
(\) 0.00000001;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( laneId; ) p
(// its id) c n
() p 8 T () S
(private) K
( ) p
(int) k
( laneKey;) p n
() S 8 T () S
(protected) K
( Road contained;) p n
() S 8 T () S
(protected) K
( ) p
(float) k
( laneSpan;) p n
() S 8 T () S
(private) K
( HashMap<Point2D.Float, ConnectionPoint> connectionPoints = ) p
(new) K
( H) p n
(ashMap<Point2D.Float, ConnectionPoint>\(\);) N
() S 8 T () S
(private) K
( HashMap<Integer, Car> carsInLane = ) p
(new) K
( HashMap<Integer, Car>\(\);) p n
() S 8 T () S
(private) K
( ) p
(boolean) k
( hasPark = ) p
(false) k
(;) p n
() S 8 T () S
(private) K
( CarWorld world;) p n
() S 8 T () S
(protected) K
( Point2D.Float startPoint;) p n
() S 8 T () S
(protected) K
( Point2D.Float endPoint;) p n
() S 8 T () S
(private) K
( ) p
(boolean) k
( isEnding = ) p
(false) k
(;) p n
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(int) k
( lanesCreated = 0;) p n
() N
() S 8 T () S
(// store traffic lights that belong to this lane.) c n
() p 8 T (ArrayList<TrafficLight> trafficLights = ) S
(new) K
( ArrayList<TrafficLight>\(\);) p n
() N
() S 8 T () S
(public) K
( Lane\(\) {) p n
() S 8 T () S 16 T () S
(// test stub) c n
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane\(Point2D.Float start, Point2D.Float end, Road cRoad,) p n
() S 8 T () S 16 T () S 24 T (CarWorld cWorld, ) S
(int) k
( lk\) {) p n
() S 8 T () S 16 T (this.startPoint = start;) N
() S 8 T () S 16 T (this.endPoint = end;) N
() S 8 T () S 16 T (this.contained = cRoad;) N
() S 8 T () S 16 T (this.laneId = lanesCreated;) N
() S 8 T () S 16 T (this.world = cWorld;) N
() S 8 T () S 16 T (lanesCreated++;) N
() S 8 T () S 16 T (this.laneKey = lk;) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( ) p
(float) k
( calculateLaneSpan\(\);) p n
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( Point2D.Float nextPosition\(Car car, ) p
(float) k
( targetDistance) p n
(,) N
() S 8 T () S 16 T () S 24 T () S
(float) k
( distanceTravelled\);) p n
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getLaneSpan\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( laneSpan;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getLaneId\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.laneId;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( Road getRoad\(\);) p n
() N
() S 8 T () S
(public) K
( ) p
(final) K
( ) p
(void) k
( setLaneSpan\() p
(float) k
( laneSpan\) {) p n
(Lane.java) (Page 1/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (this.laneSpan = laneSpan;) N
() S 8 T (}) N
() N
() S 8 T () S
(// in case of roundabout this will return center point) c n
() p 8 T () S
(public) K
( Point2D.Float getStart\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.startPoint;) p n
() S 8 T (}) N
() N
() S 8 T () S
(// in case of roundabout this will return center point) c n
() p 8 T () S
(public) K
( Point2D.Float getEnd\(\) {) p n
() N
() S 8 T () S 16 T () S
(return) K
( this.endPoint;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addTrafficLight\(TrafficLight light\) {) p n
() N
() S 8 T () S 16 T (ArrayList<TrafficLight> lights = light.getLane\(\).trafficLights;) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (TrafficLight currentLight = lights.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(Car.distance\(currentLight.getCoordinate\(\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (light.getCoordinate\(\)\) < 20\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (JOptionPane.showMessageDialog\() S
(null) k
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (") S
(the light is too close to other lights in lane) str
("\)) p n
(;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.trafficLights.add\(light\);) N
() S 8 T () S 16 T (this.world.addLight\(light\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( removeTrafficLight\() p
(int) k
( lid\) {) p n
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < trafficLights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(trafficLights.get\(i\).getId\(\) == lid\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(for) K
( \() p
(int) k
( j = 0; j < this.world.getLights\(\).size\() p n
(\); j++\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (TrafficLight jr = this.world.getLights\(\)) N
(.get\(j\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(jr.getId\(\) == lid\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.world.getLights\(\).remove\(j\)) N
(;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (trafficLights.remove\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(break) K
(;) p n
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( TrafficLight getNextTrafficLight\(Car car\);) p n
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getSpan\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( laneSpan;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addCar\(Car car\) {) p n
() S 8 T () S 16 T () S
(int) k
( carId = car.getId\(\);) p n
() S 8 T () S 16 T (carsInLane.put\(carId, car\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( removeCar\(Car car\) {) p n
() S 8 T () S 16 T () S
(int) k
( carId = car.getId\(\);) p n
() S 8 T () S 16 T (carsInLane.remove\(carId\);) N
(Lane.java) (Page 2/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Lane.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(boolean) k
( addConnectionPoint\(ConnectionPoint cp, Connection cn\)) p n
() S 8 T () S 16 T () S 24 T () S
(throws) K
( UnknownConnectionError {) p n
() N
() S 8 T () S 16 T () S
(if) K
( \(connectionPoints.get\() p
(new) K
( Point2D.Float\(\() p
(int) k
(\) cp) p n
() S 8 T () S 16 T () S 24 T () S 32 T (.getPointCoordinate\(\).x, \() S
(int) k
(\) cp.getPointCoordi) p n
(nate\(\).y\)\) == ) S
(null) k
(\) {) p n
() N
() S 8 T () S 16 T () S 24 T (System.out) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.println\(") S
(Connection point not found, adding new con) str n
(nection point) S
("\);) p n
() S 8 T () S 16 T () S 24 T (cp.addConnection\(cn\);) N
() S 8 T () S 16 T () S 24 T (connectionPoints.put\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(new) K
( Point2D.Float\(\(\() p
(int) k
(\) cp.getPointCoor) p n
(dinate\(\).x\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(\() S
(int) k
(\) cp.getPointCoordi) p n
(nate\(\).y\)\), cp\);) N
() S 8 T () S 16 T () S 24 T (TrafficLight tl = ) S
(new) K
( TrafficLight\(cp.getLane\(\), ") p
(green) str
(",) p n
( 5f, 5f,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (1f, cp.getPointCoordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T (cp.getLane\(\).addTrafficLight\(tl\);) N
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (System.out) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.println\(") S
(connection point found, adding new connect) str n
(ion to the existing connection point) S
("\);) p n
() S 8 T () S 16 T () S 24 T (ConnectionPoint existingCp = connectionPoints) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.get\() S
(new) K
( Point2D.Float\(\() p
(int) k
(\) cp.getPoint) p n
(Coordinate\(\).x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\() S
(int) k
(\) cp.getPointCoordin) p n
(ate\(\).y\)\);) N
() S 8 T () S 16 T () S 24 T (existingCp.addConnection\(cn\);) N
() S 8 T () S 16 T () S 24 T () S
(return) K
( ) p
(true) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( HashMap<Point2D.Float, ConnectionPoint> getConnectionPoints\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.connectionPoints;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( ) p
(void) k
( paint\(Graphics g\);) p n
() N
() S 8 T () S
(public) K
( ) p
(void) k
( paintTrafficLights\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < this.trafficLights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (trafficLights.get\(i\).paint\(g\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( carEnters\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(int) k
( carId = car.getId\(\);) p n
() S 8 T () S 16 T (carsInLane.put\(carId, car\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( carLeaves\(Car car\) {) p n
() S 8 T () S 16 T (carsInLane.remove\(car.getId\(\)\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( Car getFrontCar\(Car car\);) p n
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getLaneKey\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.laneKey;) p n
() S 8 T (}) N
() N
() S 8 T () S
(// returns all the connections in the same direction lane) c n
() p 8 T () S
(public) K
( ArrayList<Connection> getSameConnections\(\) {) p n
() N
(Lane.java) (Page 3/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (ArrayList<Connection> cal = ) S
(new) K
( ArrayList<Connection>\(\);) p n
() S 8 T () S 16 T (Iterator<Entry<Integer, Lane>> lit = this.contained.getLanes\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(lit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry<Integer, Lane> lp = lit.next\(\);) N
() S 8 T () S 16 T () S 24 T (Lane currentLane = lp.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(currentLane.laneKey % 2 == this.laneKey % 2\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Iterator<Entry<Point2D.Float, ConnectionPoint>> ) N
(cit = currentLane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getConnectionPoints\(\).entrySet\() N
(\).iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(cit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Map.Entry<Point2D.Float, ConnectionPoint) N
(> cp = cit.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (ConnectionPoint currentPoint = cp.getVal) N
(ue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Iterator<Entry<Lane, Connection>> conIt ) N
(= currentPoint) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getConnections\(\).entryS) N
(et\(\).iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(while) K
( \(conIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Map.Entry<Lane, Connection> conP) N
( = conIt.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Connection currentConnection = c) N
(onP.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (cal.add\(currentConnection\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( cal;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setHasPark\() p
(boolean) k
( b\) {) p n
() S 8 T () S 16 T (this.hasPark = b;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(boolean) k
( getHasPark\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.hasPark;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(abstract) K
( ) p
(float) k
( findDistance\(Car car\);) p n
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setEnding\() p
(boolean) k
( b\) {) p n
() S 8 T () S 16 T (this.isEnding = b;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(boolean) k
( isEnding\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.isEnding;) p n
() S 8 T (}) N
() N
() S 8 T () S
(// return the list of the lanes of the same direction that are in the sa) c n
(me) N
() p 8 T () S
(// road) c n
() p 8 T () S
(public) K
( ArrayList<Lane> getSameLanes\(\) {) p n
() S 8 T () S 16 T () S
(int) k
( currentKey = this.getLaneKey\(\);) p n
() S 8 T () S 16 T (ArrayList<Lane> sal = ) S
(new) K
( ArrayList<Lane>\(\);) p n
() S 8 T () S 16 T (Iterator<Entry<Integer, Lane>> lit = this.contained.getLanes\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(lit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry<Integer, Lane> lp = lit.next\(\);) N
() S 8 T () S 16 T () S 24 T (Lane currentLane = lp.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(currentKey % 2 == this.laneKey % 2\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (sal.add\(currentLane\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( sal;) p n
() S 8 T (}) N
(Lane.java) (Page 4/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Lane.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(public) K
( ) p
(abstract) K
( ) p
(void) k
( paintBorders\(Graphics g\);) p n
() N
() S 8 T () S
(public) K
( HashMap<Integer, Car> getCarsInLane\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.carsInLane;) p n
() S 8 T (}) N
(}) N
(Lane.java) (Page 5/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Lane.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: LightButton.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(public) K
( ) p
(class) K
( ) p
(LightButton) L
( ) p
(extends) K
( CustomJButton {) p n
() N
() S 8 T () S
(int) k
( lightId;) p n
() N
() S 8 T () S
(public) K
( LightButton\(String text, ) p
(int) k
( id\) {) p n
() S 8 T () S 16 T () S
(super) K
(\(text\);) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated constructor stub) c n
() p 8 T () S 16 T (this.lightId = id;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getId\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.lightId;) p n
() S 8 T (}) N
(}) N
(LightButton.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/LightButton.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: Main.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:30 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( control;) p n
() N
(import) K
( javax.swing.JFrame;) p n
(import) K
( javax.swing.SwingUtilities;) p n
() N
(import) K
( model.CarWorld;) p n
(import) K
( view.CarSimView;) p n
() N
(public) K
( ) p
(class) K
( ) p
(Main) L
( {) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\) {) p n
() N
() S 8 T () S 16 T (WorldController wControl = ) S
(new) K
( WorldController\(\);) p n
() S 8 T () S 16 T (CarWorld cWorld = wControl.createWorld\(\);) N
() S 8 T () S 16 T (TrafficLightController tlc = ) S
(new) K
( TrafficLightController\(cWorld\);) p n
() S 8 T () S 16 T (ParkController pc= ) S
(new) K
( ParkController\(cWorld\);) p n
() S 8 T () S 16 T (JFrame frame = ) S
(new) K
( CarSimView\(") p
(carSim) str
(", wControl, tlc, pc\);) p n
() S 8 T () S 16 T (wControl.setView\(frame\);) N
() S 8 T () S 16 T (tlc.setView\(frame\);) N
() N
() S 8 T () S 16 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T (wControl.simulate\(\);) N
() S 8 T () S 16 T () S 24 T (\(\(CarSimView\) frame\).mainMenu\(\);) N
() S 8 T () S 16 T (} ) S
(catch) K
( \(InterruptedException e\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// TODO Auto-generated catch block) c n
() p 8 T () S 16 T () S 24 T (System.out.println\(") S
(simulation error) str
("\);) p n
() S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
(}) N
(Main.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/Main.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: MainMenu.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Dimension;) p n
(import) K
( java.awt.event.ActionEvent;) p n
(import) K
( java.awt.event.ActionListener;) p n
(import) K
( java.io.File;) p n
() N
(import) K
( javax.swing.BorderFactory;) p n
(import) K
( javax.swing.ImageIcon;) p n
(import) K
( javax.swing.JButton;) p n
(import) K
( javax.swing.JLabel;) p n
(import) K
( javax.swing.JPanel;) p n
() N
(import) K
( control.WorldController;) p n
() N
(public) K
( ) p
(class) K
( ) p
(MainMenu) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( ActionListener {) p n
() S 8 T (JButton tButton, interButton, fullSimulation;) N
() S 8 T (WorldController wControl;) N
() S 8 T (CarSimView mainFrame;) N
() S 8 T () S
(private) K
( JPanel buttonJPanel;) p n
() S 8 T () S
(private) K
( ImageIcon title_img;) p n
() N
() S 8 T () S
(public) K
( MainMenu\(WorldController wControl, CarSimView mainFrame\) {) p n
() S 8 T () S 16 T (this.wControl = wControl;) N
() S 8 T () S 16 T (this.mainFrame = mainFrame;) N
() S 8 T () S 16 T (buttonJPanel = ) S
(new) K
( JPanel\(\);) p n
() N
() S 8 T () S 16 T (tButton = ) S
(new) K
( CustomJButton\(") p
(T Junction) str
("\);) p n
() S 8 T () S 16 T (tButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (interButton = ) S
(new) K
( CustomJButton\(") p
(Intersection) str
("\);) p n
() S 8 T () S 16 T (interButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (fullSimulation = ) S
(new) K
( CustomJButton\(") p
(Full Simulation) str
("\);) p n
() S 8 T () S 16 T (fullSimulation.addActionListener\() S
(this) k
(\);) p n
() N
() S 8 T () S 16 T (title_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\(File.separator ) p n
(+ ") S
(gfx) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ File.separator + ") S
(title_gfx.gif) str
("\)\);) p n
() S 8 T () S 16 T (JLabel titleSimulationTitle = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (titleSimulationTitle.setIcon\(title_img\);) N
() S 8 T () S 16 T (this.add\(titleSimulationTitle\);) N
() N
() S 8 T () S 16 T (this.setBorder\(BorderFactory.createMatteBorder\(3, 3, 3, 3, Color) N
(.BLACK\)\);) N
() S 8 T () S 16 T (buttonJPanel.setBorder\(BorderFactory.createMatteBorder\(2, 2, 2, ) N
(2,) N
() S 8 T () S 16 T () S 24 T () S 32 T (Color.BLACK\)\);) N
() S 8 T () S 16 T (buttonJPanel.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T (buttonJPanel.setPreferredSize\() S
(new) K
( Dimension\(400, 50\)\);) p n
() S 8 T () S 16 T (this.add\(buttonJPanel\);) N
() N
() S 8 T () S 16 T (buttonJPanel.add\(tButton\);) N
() S 8 T () S 16 T (buttonJPanel.add\(interButton\);) N
() S 8 T () S 16 T (buttonJPanel.add\(fullSimulation\);) N
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(if) K
( \(e.getSource\(\).equals\(tButton\)\) { ) p
(// T Junction choosen by us) c n
(er) N
() p 8 T () S 16 T () S 24 T (wControl.setTJunction\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.simulationView\(\);) N
() N
() S 8 T () S 16 T (}) S
(else) K
( ) p
(if) K
( \(e.getSource\(\).equals\(interButton\)\) { ) p
(// Intersection c) c n
(hooen) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T () S 8 T () S 16 T () S 24 T () S
(// by user) c n
(MainMenu.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (wControl.setIntersection\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.simulationView\(\);) N
() S 8 T () S 16 T () S 24 T () S
(// If there views set up for intersecton) c n
() p 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(e.getSource\(\).equals\(fullSimulation\)\) { ) p
(// Full simul) c n
(ation) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T () S 8 T () S 16 T () S 24 T () S 32 T () S
(// chosen by user.) c n
() p 8 T () S 16 T () S 24 T (wControl.setFullSimulation\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.simulationView\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
(MainMenu.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/MainMenu.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: ParkController.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:31 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( control;) p n
() N
(import) K
( java.util.ArrayList;) p n
() N
(import) K
( model.CarPark;) p n
(import) K
( model.CarWorld;) p n
() N
(public) K
( ) p
(class) K
( ) p
(ParkController) L
( {) p n
() S 8 T () S
(private) K
( CarWorld world;) p n
() N
() S 8 T () S
(public) K
( ParkController\(CarWorld world\) {) p n
() S 8 T () S 16 T (this.world = world;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setSpawnChance\() p
(int) k
( spawn\) {) p n
() S 8 T () S 16 T (ArrayList<CarPark> parks = world.getParks\(\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < parks.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (parks.get\(i\).setSpawn\(spawn\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
(ParkController.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/ParkController.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: QuadTree.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Rectangle;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.List;) p n
(//collision checking) c n
(//origially from) N
(/*http://gamedevelopment.tutsplus.com/tutorials/) N
( * quick-tip-use-quadtrees-to-detect-likely-collisions-in-2d-space--gamedev-374*) N
(/) N
() p n
(public) K
( ) p
(class) K
( ) p
(QuadTree) L
( {) p n
() S 8 T () S
(private) K
( ) p
(int) k
( MAX_OBJECTS = 8;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( MAX_LEVELS = 5;) p n
() N
() S 8 T () S
(private) K
( ) p
(int) k
( level;) p n
() S 8 T () S
(private) K
( ArrayList<Car> cars;) p n
() S 8 T () S
(private) K
( Rectangle bounds;) p n
() S 8 T () S
(private) K
( QuadTree[] nodes;) p n
() N
() S 8 T () S
(/*) c n
() S 8 T ( * Constructor) N
() S 8 T ( */) N
() p 8 T () S
(public) K
( QuadTree\() p
(int) k
( pLevel, Rectangle pBounds\) {) p n
() S 8 T () S 16 T (level = pLevel;) N
() S 8 T () S 16 T (cars = ) S
(new) K
( ArrayList<Car>\(\);) p n
() S 8 T () S 16 T (bounds = pBounds;) N
() S 8 T () S 16 T (nodes = ) S
(new) K
( QuadTree[4];) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( clear\(\) {) p n
() S 8 T () S 16 T (cars.clear\(\);) N
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < nodes.length; i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(nodes[i] != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (nodes[i].clear\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (nodes[i] = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( split\(\) {) p n
() S 8 T () S 16 T () S
(int) k
( subWidth = \() p
(int) k
(\) \(bounds.getWidth\(\) / 2\);) p n
() S 8 T () S 16 T () S
(int) k
( subHeight = \() p
(int) k
(\) \(bounds.getHeight\(\) / 2\);) p n
() S 8 T () S 16 T () S
(int) k
( x = \() p
(int) k
(\) bounds.getX\(\);) p n
() S 8 T () S 16 T () S
(int) k
( y = \() p
(int) k
(\) bounds.getY\(\);) p n
() N
() S 8 T () S 16 T (nodes[0] = ) S
(new) K
( QuadTree\(level + 1, ) p
(new) K
( Rectangle\(x + subWidth, y) p n
(,) N
() S 8 T () S 16 T () S 24 T () S 32 T (subWidth, subHeight\)\);) N
() S 8 T () S 16 T (nodes[1] = ) S
(new) K
( QuadTree\(level + 1, ) p
(new) K
( Rectangle\(x, y, subWidth,) p n
() S 8 T () S 16 T () S 24 T () S 32 T (subHeight\)\);) N
() S 8 T () S 16 T (nodes[2] = ) S
(new) K
( QuadTree\(level + 1, ) p
(new) K
( Rectangle\(x, y + subHeigh) p n
(t,) N
() S 8 T () S 16 T () S 24 T () S 32 T (subWidth, subHeight\)\);) N
() S 8 T () S 16 T (nodes[3] = ) S
(new) K
( QuadTree\(level + 1, ) p
(new) K
( Rectangle\(x + subWidth, y) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ subHeight, subWidth, subHeight\)\);) N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(int) k
( getIndex\(Car car\) {) p n
() S 8 T () S 16 T () S
(int) k
( index = -1;) p n
() S 8 T () S 16 T () S
(double) k
( verticalMidpoint = bounds.getX\(\) + \(bounds.getWidth\(\) / 2) p n
(\);) N
() S 8 T () S 16 T () S
(double) k
( horizontalMidpoint = bounds.getY\(\) + \(bounds.getHeight\(\) ) p n
(/ 2\);) N
() N
() S 8 T () S 16 T () S
(// Object can completely fit within the top quadrants) c n
() p 8 T () S 16 T () S
(boolean) k
( topQuadrant = \(car.getCoordinate\(\).getY\(\) <= horizontalM) p n
(idpoint\);) N
(QuadTree.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(// Object can completely fit within the bottom quadrants) c n
() p 8 T () S 16 T () S
(boolean) k
( bottomQuadrant = \(car.getCoordinate\(\).getY\(\) > horizonta) p n
(lMidpoint\);) N
() N
() S 8 T () S 16 T () S
(// Object can completely fit within the left quadrants) c n
() p 8 T () S 16 T () S
(if) K
( \(car.getCoordinate\(\).getX\(\) <= verticalMidpoint\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(topQuadrant\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (index = 1;) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(bottomQuadrant\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (index = 2;) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// Object can completely fit within the right quadrants) c n
() p 8 T () S 16 T () S
(else) K
( ) p
(if) K
( \(car.getCoordinate\(\).getX\(\) > verticalMidpoint\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(topQuadrant\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (index = 0;) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(bottomQuadrant\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (index = 3;) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(return) K
( index;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( insert\(Car car\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(nodes[0] != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( index = getIndex\(car\);) p n
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(index != -1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (nodes[index].insert\(car\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (cars.add\(car\);) N
() N
() S 8 T () S 16 T () S
(if) K
( \(cars.size\(\) > MAX_OBJECTS && level < MAX_LEVELS\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(nodes[0] == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (split\(\);) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S
(int) k
( i = 0;) p n
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(i < cars.size\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( index = getIndex\(cars.get\(i\)\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(index != -1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (nodes[index].insert\(cars.remove\(i\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (i++;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<Car> retrieve\(ArrayList<Car> returnObjects, Car car\) {) p n
() S 8 T () S 16 T () S
(int) k
( index = getIndex\(car\);) p n
() S 8 T () S 16 T () S
(if) K
( \(index != -1 && nodes[0] != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (nodes[index].retrieve\(returnObjects, car\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (returnObjects.addAll\(cars\);) N
() N
() S 8 T () S 16 T () S
(return) K
( returnObjects;) p n
() S 8 T (}) N
(}) N
(QuadTree.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/QuadTree.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: Road.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 8
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.geom.Line2D;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.Collections;) p n
(import) K
( java.util.HashMap;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.List;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Map.Entry;) p n
() N
(public) K
( ) p
(abstract) K
( ) p
(class) K
( ) p
(Road) L
( {) p n
() S 8 T () S
(// knows which lane is connecting to which road, pair of \(lane number, a) c n
(nd) N
() p 8 T () S
(// the road it connects to\).) c n
() p n
() S 8 T () S
(// some logical constrictions) c n
() p 8 T () S
(// base lane decides the type of the lanes that can be added) c n
() p n
() S 8 T () S
(private) K
( ) p
(int) k
( roadId;) p n
() S 8 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
( roadType;) p n
() S 8 T () S
(public) K
( ) p
(final) K
( ) p
(static) K
( ) p
(int) k
( roadWidth = 20; ) p
(// each lanes are 20 pixels wide) c n
() p 8 T () S
(private) K
( ) p
(static) K
( ) p
(int) k
( roadsCreated = 0;) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( STRAIGHT_LANE = 0;) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( ROUNDABOUT = 1;) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( CURVE = 2;) p n
() S 8 T () S
(private) K
( HashMap<Integer, Lane> lanes = ) p
(new) K
( HashMap<Integer, Lane>\(\);) p n
() S 8 T () S
(private) K
( CarWorld world;) p n
() N
() S 8 T () S
(// bilateral vs unilateral state) c n
() p 8 T () S
(// definition of connection: contiguous legal movements possible) c n
() p 8 T () S
(private) K
( ) p
(boolean) k
( bilateral;) p n
() N
() S 8 T () S
(// used for 90 degrees rotation) c n
() p 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
([][] perpenMat = ) p
(new) K
( ) p
(int) k
([][] { { 0, -1 }, { 1, 0) p n
( } };) N
() N
() S 8 T () S
(public) K
( Road\() p
(int) k
( roadType, CarWorld cWorld\) {) p n
() S 8 T () S 16 T (this.roadId = roadsCreated;) N
() S 8 T () S 16 T (this.world = cWorld;) N
() S 8 T () S 16 T (roadsCreated++;) N
() S 8 T () S 16 T (this.roadType = roadType;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T (Iterator<Entry<Integer, Lane>> it = lanes.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(it.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry pair = \(Map.Entry\) it.next\(\);) N
() S 8 T () S 16 T () S 24 T (Lane currentLane = \(Lane\) pair.getValue\(\);) N
() S 8 T () S 16 T () S 24 T (currentLane.paint\(g\);) N
() N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(/**** road type dependent ****/) C n
() p n
() S 8 T () S
(// contaaining all lanes) c n
() p n
() S 8 T () S
(/***********************/) C n
() p n
() S 8 T () S
(/***** road type independent *******/) C n
() p 8 T () S
(public) K
( ) p
(int) k
( getId\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.roadId;) p n
() N
() S 8 T (}) N
(Road.java) (Page 1/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(public) K
( HashMap<Integer, Lane> getLanes\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( lanes;) p
(// should return an arraylist) c n
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
() S 8 T () S 16 T () S
(// update all lanes belonging to this road) c n
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getType\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.roadType;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(boolean) k
( getBilateral\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.bilateral;) p n
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(void) k
( setBilateral\() p
(boolean) k
( bl\) {) p n
() S 8 T () S 16 T (this.bilateral = bl;) N
() S 8 T (}) N
() N
() S 8 T () S
(// currently only supports connections between straight lanes) c n
() p 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( connectLane\(Road currentRoad, ) p
(int) k
( currentLane,) p n
() S 8 T () S 16 T () S 24 T (Road targetRoad, ) S
(int) k
( targetLane\) ) p
(throws) K
( UnknownConnectio) p n
(nError {) N
() N
() S 8 T () S 16 T () S
(if) K
( \(\(currentRoad ) p
(instanceof) K
( StraightRoad && targetRoad ) p
(instanceo) K n
(f) S
( StraightRoad\)\) {) p n
() S 8 T () S 16 T () S 24 T (lineLineConnect\(currentRoad, currentLane, targetRoad, ta) N
(rgetLane\);) N
() N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(\(currentRoad ) p
(instanceof) K
( StraightRoad && targetRoad ) p
(in) K n
(stanceof) S
( RoundRoad\)\) {) p n
() N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(currentRoad ) p
(instanceof) K
( RoundRoad) p n
() S 8 T () S 16 T () S 24 T () S 32 T (&& targetRoad ) S
(instanceof) K
( StraightRoad\) {) p n
() N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( UnknownConnectionError\(\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// sets connection state between the lane corresponding to the) c n
() p 8 T () S 16 T () S
(// currentLane in currentRoad and the corresponding targetLane, ) c n
(in) N
() p 8 T () S 16 T () S
(// targetRoad) c n
() p n
() S 8 T (}) N
() N
() S 8 T () S
(// lane connection logic between straight lines) c n
() p 8 T () S
(private) K
( ) p
(static) K
( ) p
(boolean) k
( lineLineConnect\(Road currentRoad, ) p
(int) k
( currentLane) p n
(,) N
() S 8 T () S 16 T () S 24 T (Road targetRoad, ) S
(int) k
( targetLane\) ) p
(throws) K
( UnknownConnectio) p n
(nError {) N
() S 8 T () S 16 T (System.out.println\(") S
(Start connecting) str
("\);) p n
() S 8 T () S 16 T (HashMap<Integer, Lane> sLanes = currentRoad.getLanes\(\);) N
() S 8 T () S 16 T (HashMap<Integer, Lane> tLanes = targetRoad.getLanes\(\);) N
() S 8 T () S 16 T (Point2D.Float intersectingStartPoint;) N
() S 8 T () S 16 T (Point2D.Float intersectingControlPoint;) N
() S 8 T () S 16 T (Point2D.Float intersectingEndPoint;) N
() S 8 T () S 16 T () S
(boolean) k
( success = ) p
(false) k
(;) p n
() S 8 T () S 16 T () S
(boolean) k
( overlapFound = ) p
(false) k
(;) p n
() S 8 T () S 16 T () S
(// checks if the roads actually has the lanes that are needed to) c n
( be) N
() p 8 T () S 16 T () S
(// connected) c n
() p 8 T () S 16 T () S
(if) K
( \(sLanes.containsKey\(currentLane\) && tLanes.containsKey\(target) p n
(Lane\)\) {) N
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Lanes in the roads found) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S
(// get two most outer roads-> get most outer boundaries ) c n
(of the two) N
() p 8 T () S 16 T () S 24 T () S
(// roads) c n
(Road.java) (Page 2/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (1/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S
(// check if the closest outer boundary intersects with t) c n
(he) N
() p 8 T () S 16 T () S 24 T () S
(// boundaries of the other road.) c n
() p 8 T () S 16 T () S 24 T () S
(// if it doesn't check if it works other way.) c n
() p 8 T () S 16 T () S 24 T () S
(// case where they are all even or all odd->) c n
() p 8 T () S 16 T () S 24 T () S
(// for one of the roads a1-a2, a3-a4) c n
() p 8 T () S 16 T () S 24 T (Point2D.Float a1;) N
() S 8 T () S 16 T () S 24 T (Point2D.Float a2;) N
() S 8 T () S 16 T () S 24 T (Point2D.Float a3;) N
() S 8 T () S 16 T () S 24 T (Point2D.Float a4;) N
() N
() S 8 T () S 16 T () S 24 T () S
(// for another road b1-b2, b3-b4) c n
() p 8 T () S 16 T () S 24 T (Point2D.Float b1;) N
() S 8 T () S 16 T () S 24 T (Point2D.Float b2;) N
() S 8 T () S 16 T () S 24 T (Point2D.Float b3;) N
() S 8 T () S 16 T () S 24 T (Point2D.Float b4;) N
() N
() S 8 T () S 16 T () S 24 T () S
(// for sLanes) c n
() p 8 T () S 16 T () S 24 T (ArrayList<Integer> sortedS = ) S
(new) K
( ArrayList<Integer>\(sLan) p n
(es.keySet\(\)\);) N
() S 8 T () S 16 T () S 24 T (Collections.sort\(sortedS\);) N
() S 8 T () S 16 T () S 24 T () S
(int) k
( highest = sortedS.get\(sortedS.size\(\) - 1\);) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( modulus = highest % 2;) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( nextHighest = -1;) p n
() N
() S 8 T () S 16 T () S 24 T () S
(// ////////) c n
() p 8 T () S 16 T () S 24 T () S
(// ////////) c n
() p 8 T () S 16 T () S 24 T () S
(// start if) c n
() p 8 T () S 16 T () S 24 T () S
(if) K
( \(currentRoad.getBilateral\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// bilateral get one lane with highest even key ) c n
(and one with) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// highest odd key) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// start checking for nextHighest) c n
() p 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(") S
(starting road is bilateral) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(modulus == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Starting highest==even) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is even-> next highest should) c n
( be odd since) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// bilateral) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(for) K
( \() p
(int) k
( i = sortedS.size\(\) - 2; i >= 0;) p n
( i--\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(sortedS.get\(i\) % 2 == 1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nextHighest = sortedS.ge) N
(t\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is even the outer line is ano) c n
(ther addition of the) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// nextHighest is odd the outer line is ) c n
(another subtraction) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// of the half offset vector) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = sLanes.get\(highest) N
(\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = sLanes.get\(highest) N
(\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = sLanes.get\(highest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = sLanes.get\(nextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x + ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y + halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x + ha) p n
(Road.java) (Page 3/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(lfVector.x,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y + halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x -) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y - halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x - h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y - halfVect) N
(or.y\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is odd-> next highest should ) c n
(be even since) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// bilateral) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Starting highest== odd) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(for) K
( \() p
(int) k
( i = sortedS.size\(\) - 2; i >= 0;) p n
( i--\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(sortedS.get\(i\) % 2 == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nextHighest = sortedS.ge) N
(t\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is odd the outer line is anot) c n
(her subtraction of) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// the half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// nextHighest is even the outer line is) c n
( another addition) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// of the half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = sLanes.get\(nextHig) N
(hest\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = sLanes.get\(nextHig) N
(hest\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = sLanes.get\(highest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = sLanes.get\(nextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x - ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y - halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x - ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y - halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x +) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y + halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x + h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y + halfVect) N
(or.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// end of bilateral sLane.) c n
() p n
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// unilateral sLAne->get a lane with highest key) c n
( and one with) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// the lowest key) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T (nextHighest = sortedS.get\(0\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(nextHighest % 2 == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Starting lane is even unilatera) str n
(l) S
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// even lanes) c n
(Road.java) (Page 4/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (2/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is highest + offset) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is nextHighest - offse) c n
(t) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = sLanes.get\(nextHig) N
(hest\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = sLanes.get\(nextHig) N
(hest\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = sLanes.get\(highest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = sLanes.get\(nextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x + ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y + halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x + ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y + halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x -) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y - halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x - h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y - halfVect) N
(or.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Starting lane is odd unilateral) str
() p n
("\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// odd lanes) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is highest - offset) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is nextHighest + offse) c n
(t) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = sLanes.get\(nextHig) N
(hest\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = sLanes.get\(nextHig) N
(hest\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = sLanes.get\(highest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = sLanes.get\(nextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x - ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y - halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x - ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y - halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x +) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y + halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (a4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x + h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y + halfVect) N
(or.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(nextHighest == -1\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(throw) K
( ) p
(new) K
( UnknownConnectionError\(\);) p n
() S 8 T () S 16 T () S 24 T () S
(// END for sLane) c n
() p 8 T () S 16 T () S 24 T () S
(// //////////////) c n
() p 8 T () S 16 T () S 24 T () S
(// //////////////) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(// for targetRoad) c n
() p 8 T () S 16 T () S 24 T (ArrayList<Integer> sortedT = ) S
(new) K
( ArrayList<Integer>\(tLan) p n
(Road.java) (Page 5/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(es.keySet\(\)\);) p n
() S 8 T () S 16 T () S 24 T (Collections.sort\(sortedT\);) N
() S 8 T () S 16 T () S 24 T () S
(int) k
( tHighest = sortedT.get\(sortedT.size\(\) - 1\);) p n
() N
() S 8 T () S 16 T () S 24 T () S
(int) k
( tModulus = tHighest % 2;) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( tNextHighest = -1;) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(targetRoad.getBilateral\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// bilateral get one lane with highest even key ) c n
(and one with) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// highest odd key) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tModulus == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is even-> next highest should) c n
( be odd since) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// bilateral) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(for) K
( \() p
(int) k
( i = sortedT.size\(\) - 2; i >= 0;) p n
( i--\) {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(sortedT.get\(i\) % 2 == 1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (tNextHighest = sortedT.g) N
(et\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is even the outer line is ano) c n
(ther addition of the) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// nextHighest is odd the outer line is ) c n
(another subtraction) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// of the half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = tLanes.get\(tHighes) N
(t\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = tLanes.get\(tHighes) N
(t\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = tLanes.get\(tHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = tLanes.get\(tNextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x + ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y + halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x + ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y + halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x -) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y - halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x - h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y - halfVect) N
(or.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is odd-> next highest should ) c n
(be even since) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// bilateral) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(for) K
( \() p
(int) k
( i = sortedT.size\(\) - 2; i >= 0;) p n
( i--\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(sortedT.get\(i\) % 2 == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (tNextHighest = sortedT.g) N
(et\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
(Road.java) (Page 6/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (3/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7-8) 4
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// highest is odd the outer line is anot) c n
(her subtraction of) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// the half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// nextHighest is even the outer line is) c n
( another addition) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// of the half offset vector) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = tLanes.get\(tNextHi) N
(ghest\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = tLanes.get\(tNextHi) N
(ghest\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = tLanes.get\(tHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = tLanes.get\(tNextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x - ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y - halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x - ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y - halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x +) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y + halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x + h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y + halfVect) N
(or.y\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// unilateral get a lane with highest key and on) c n
(e with the) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// lowest key) c n
() p 8 T () S 16 T () S 24 T () S 32 T (tNextHighest = sortedT.get\(0\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tNextHighest % 2 == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// even lanes) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is highest + offset) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is nextHighest - offse) c n
(t) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = tLanes.get\(tNextHi) N
(ghest\).getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = tLanes.get\(tNextHi) N
(ghest\).getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = tLanes.get\(tHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = tLanes.get\(tNextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x + ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y + halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x + ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y + halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x -) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y - halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x - h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y - halfVect) N
(or.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// odd lanes) c n
(Road.java) (Page 7/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is highest - offset) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// one outer line is nextHighest + offse) c n
(t) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane h = tLanes.get\(tHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Lane nh = tLanes.get\(tNextHighest\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base1 = nh.getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float base2 = nh.getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float halfVector = getHalf\(base1) N
(, base2\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b1 = ) S
(new) K
( Point2D.Float\(h.getStart\(\).x - ) p n
(halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getStart\(\).y - halfVec) N
(tor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b2 = ) S
(new) K
( Point2D.Float\(h.getEnd\(\).x - ha) p n
(lfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (h.getEnd\(\).y - halfVecto) N
(r.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b3 = ) S
(new) K
( Point2D.Float\(nh.getStart\(\).x +) p n
( halfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getStart\(\).y + halfVe) N
(ctor.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (b4 = ) S
(new) K
( Point2D.Float\(nh.getEnd\(\).x + h) p n
(alfVector.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (nh.getEnd\(\).y + halfVect) N
(or.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T () S
(// now see if a1-a2, a3-a4 intersects with b1-b2 or b3-b) c n
(4) N
() p 8 T () S 16 T () S 24 T () S
(// or if b1-b2 and b3-b4 overlaps with a1-a2 or a3-a4) c n
() p n
() S 8 T () S 16 T () S 24 T (Line2D.Float line1 = ) S
(new) K
( Line2D.Float\(a1, a2\);) p n
() S 8 T () S 16 T () S 24 T (Line2D.Float line2 = ) S
(new) K
( Line2D.Float\(a3, a4\);) p n
() S 8 T () S 16 T () S 24 T (Line2D.Float line3 = ) S
(new) K
( Line2D.Float\(b1, b2\);) p n
() S 8 T () S 16 T () S 24 T (Line2D.Float line4 = ) S
(new) K
( Line2D.Float\(b3, b4\);) p n
() N
() S 8 T () S 16 T () S 24 T () S
(// if the line overlaps check if the overlapped segment ) c n
(is closest) N
() p 8 T () S 16 T () S 24 T () S
(// to the starting lane's starting point) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(line1.intersectsLine\(line3\) && line2.intersectsLine) p n
(\(line3\)\)\) {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (overlapFound = ) S
(true) k
(;) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// check distance between the starting point of ) c n
(the starting) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// lane and line3, as well as the distance betwe) c n
(en the same) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// point and line4. If line 3 is the closest int) c n
(ersection) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// between this line is the starting point) c n
() p n
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(\(line1.intersectsLine\(line4\) && line2) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.intersectsLine\(line4\)\)\) {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (overlapFound = ) S
(true) k
(;) p n
() N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(\(line3.intersectsLine\(line1\) && line4) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.intersectsLine\(line1\)\)\) {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (overlapFound = ) S
(true) k
(;) p n
() N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(\(line3.intersectsLine\(line2\) && line4) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.intersectsLine\(line2\)\)\) {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (overlapFound = ) S
(true) k
(;) p n
(Road.java) (Page 8/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (4/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (9-10) 5
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (System.out.println\(") S
(overlapping not found) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( ) p
(false) k
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(overlapFound\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (System.out) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.println\(") S
(Finding closest outerline of the t) str n
(arget road) S
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// get starting lane's outer lines) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// find two intersection point with the closest ) c n
(road outerline) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// of the target road) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// get the vector that is perpendicular to the o) c n
(uter line that) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// previously found intersection point lines on) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// get intersection of the previously found vect) c n
(or and the) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// starting lane's vector-> starting point of th) c n
(e connection) N
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// get intersection between the starting lane ve) c n
(ctor and target) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// lane vector-> control point of the quadratic ) c n
(bezier) N
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// get a point that lies on target lane's vector) c n
( with the) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// distance of the displacement between the two ) c n
(previously found) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(// points-> end point of the quadratic bezier) c n
() p 8 T () S 16 T () S 24 T () S 32 T (Lane startingL = sLanes.get\(currentLane\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Lane endingL = tLanes.get\(targetLane\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float slStarting = startingL.getStart\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float slEnding = startingL.getEnd\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float halfVector = getHalf\(slStarting, s) N
(lEnding\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float sla1;) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float sla2;) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float sla3;) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float sla4;) N
() S 8 T () S 16 T () S 24 T () S 32 T (sla1 = ) S
(new) K
( Point2D.Float\(slStarting.x + halfVect) p n
(or.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (slStarting.y + halfVector.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (sla2 = ) S
(new) K
( Point2D.Float\(slEnding.x + halfVector) p n
(.x, slEnding.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ halfVector.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (sla3 = ) S
(new) K
( Point2D.Float\(slStarting.x - halfVect) p n
(or.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (slStarting.y - halfVector.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (sla4 = ) S
(new) K
( Point2D.Float\(slEnding.x - halfVector) p n
(.x, slEnding.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (- halfVector.y\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (Line2D.Float sLine1 = ) S
(new) K
( Line2D.Float\(sla1, sla) p n
(2\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Line2D.Float sLine2 = ) S
(new) K
( Line2D.Float\(sla3, sla) p n
(4\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float i1 = linesolver.checkIntersection\() N
(slStarting,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (slEnding, \(Point2D.Float\) line3.) N
(getP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(Point2D.Float\) line3.getP2\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float i2 = linesolver.checkIntersection\() N
(slStarting,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (slEnding, \(Point2D.Float\) line4.) N
(getP1\(\),) N
(Road.java) (Page 9/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(Point2D.Float\) line4.getP2\(\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(float) k
( d1 = \() p
(float) k
(\) Math.sqrt\(Math.pow\(\(slStartin) p n
(g.x - i1.x\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (2.0\) + Math.pow\(slStarting.y - i) N
(1.y, 2.0\)\); ) S
(// length) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// between) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// line 3) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S
(float) k
( d2 = \() p
(float) k
(\) Math.sqrt\(Math.pow\(\(slStartin) p n
(g.x - i2.x\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (2.0\) + Math.pow\(slStarting.y - i) N
(2.y, 2.0\)\); ) S
(// length) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T () S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// between) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float closestPoint;) N
() S 8 T () S 16 T () S 24 T () S 32 T (Line2D.Float closestLine;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(d1 > d2\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// line 4 is the closest outer line) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// get intersection between line 4 and l) c n
(ine 1,line 2) N
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float ii1 = linesolver.checkInte) N
(rsection\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line4.ge) N
(tP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line4.ge) N
(tP2\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine1.g) N
(etP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine1.g) N
(etP2\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float ii2 = linesolver.checkInte) N
(rsection\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line4.ge) N
(tP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line4.ge) N
(tP2\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine2.g) N
(etP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine2.g) N
(etP2\(\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(float) k
( dd1 = \() p
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(slStarting.x - ii1.x\), ) N
(2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ Math.pow\(slStarting.y ) N
(- ii1.y, 2.0\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(float) k
( dd2 = \() p
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(slStarting.x - ii2.x\), ) N
(2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ Math.pow\(slStarting.y ) N
(- ii2.y, 2.0\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(dd1 > dd2\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// ii2 is the closest intersecti) c n
(on point) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// lies on line2) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestPoint = ii2;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestLine = sLine2;) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( ) p
(if) K
( \(dd2 > dd1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// ii1 is the closest intersecti) c n
(on point) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// lies on line1) c n
() p n
(Road.java) (Page 10/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (5/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (11-12) 6
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestPoint = ii1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestLine = sLine1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// they are the same so chose wh) c n
(ich ever point) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// lies on line1) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestPoint = ii1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestLine = sLine1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(d2 > d1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// line 3 is the shorted outer line) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// get intersection between line 3 and l) c n
(ine 1, line 2) N
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float ii1 = linesolver.checkInte) N
(rsection\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line3.ge) N
(tP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line3.ge) N
(tP2\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine1.g) N
(etP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine1.g) N
(etP2\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Point2D.Float ii2 = linesolver.checkInte) N
(rsection\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line3.ge) N
(tP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) line3.ge) N
(tP2\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine2.g) N
(etP1\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(Point2D.Float\) sLine2.g) N
(etP2\(\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(float) k
( dd1 = \() p
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(slStarting.x - ii1.x\), ) N
(2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ Math.pow\(slStarting.y ) N
(- ii1.y, 2.0\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(float) k
( dd2 = \() p
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (\(slStarting.x - ii2.x\), ) N
(2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ Math.pow\(slStarting.y ) N
(- ii2.y, 2.0\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(dd1 > dd2\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// ii2 is the closest intersecti) c n
(on point) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// lies on line2) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestPoint = ii2;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestLine = sLine2;) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( ) p
(if) K
( \(dd2 > dd1\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// ii1 is the closest intersecti) c n
(on point) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// lies on line1) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestPoint = ii1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestLine = sLine1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// they are the same so chose wh) c n
(ich ever point) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// lies on line1) c n
() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestPoint = ii1;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (closestLine = sLine1;) N
(Road.java) (Page 11/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(throw) K
( ) p
(new) K
( UnknownConnectionError\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float closestVec = ) S
(new) K
( Point2D.Float\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(\(Point2D.Float\) closestLine.get) N
(P1\(\)\).x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (- closestPoint.x) N
(,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(\(Point2D.Float\) closestLine.get) N
(P1\(\)\).y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (- closestPoint.y) N
(\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (intersectingStartPoint = ) S
(new) K
( Point2D.Float\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(\(Point2D.Float\) startingL.getSt) N
(art\(\)\).x - closestVec.x,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (\(\(Point2D.Float\) startingL.getSt) N
(art\(\)\).y - closestVec.y\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (intersectingControlPoint = linesolver.checkInter) N
(section\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (slStarting, slEnding, endingL.ge) N
(tStart\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (endingL.getEnd\(\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float iVec = ) S
(new) K
( Point2D.Float\(intersect) p n
(ingStartPoint.x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (- intersectingControlPoint.x, in) N
(tersectingStartPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (- intersectingControlPoint.y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(float) k
( scd = \() p
(float) k
(\) Math.sqrt\(Math.pow\(\(iVec.x\),) p n
( 2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Math.pow\(iVec.y, 2.0\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Point2D.Float tVec = ) S
(new) K
( Point2D.Float\(endingL.g) p n
(etStart\(\).x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (- endingL.getEnd\(\).x, endingL.ge) N
(tStart\(\).y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (- endingL.getEnd\(\).y\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(float) k
( tVecD = \() p
(float) k
(\) Math.sqrt\(Math.pow\(\(tVec.x) p n
(\), 2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ Math.pow\(tVec.y, 2.0\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (intersectingEndPoint = ) S
(new) K
( Point2D.Float\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (intersectingControlPoint.x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ \(\(endingL.getE) N
(nd\(\).x - endingL.getStart\(\).x\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
(/ tVecD * scd\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (intersectingControlPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (+ \(\(endingL.getE) N
(nd\(\).y - endingL.getStart\(\).y\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
(/ tVecD * scd\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (ConnectionPoint cp = ) S
(new) K
( ConnectionPoint\(current) p n
(Road,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (startingL, intersectingStartPoin) N
(t\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Connection cn = ) S
(new) K
( Connection\(currentRoad, star) p n
(tingL,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (targetRoad, endingL, cp, interse) N
(ctingStartPoint,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (intersectingEndPoint, intersecti) N
(ngControlPoint\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (success = startingL.addConnectionPoint\(cp, cn\);) N
() S 8 T () S 16 T () S 24 T (}) N
() N
(Road.java) (Page 12/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (6/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (13-14) 7
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S
(return) K
( success;) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( UnknownConnectionError\(\);) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// end if) c n
() p 8 T () S 16 T () S
(// //////////) c n
() p 8 T () S 16 T () S
(// ////////////) c n
() p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(static) K
( Point2D.Float getHalf\(Point2D.Float base1,) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float base2\) {) N
() S 8 T () S 16 T (Point2D.Float vector = ) S
(new) K
( Point2D.Float\(base2.x - base1.x, base) p n
(2.y) N
() S 8 T () S 16 T () S 24 T () S 32 T (- base1.y\);) N
() S 8 T () S 16 T () S
(// System.out.println\("Vector: " + vector\);) c n
() p 8 T () S 16 T () S
(float) k
( vectorLength = \() p
(float) k
(\) Math.sqrt\(Math.pow\(vector.x, 2.0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ Math.pow\(vector.y, 2.0\)\);) N
() S 8 T () S 16 T () S
(// System.out.println\("Length: " + vectorLength\);) c n
() p 8 T () S 16 T (Point2D.Float normalVector = ) S
(new) K
( Point2D.Float\(vector.x / vector) p n
(Length,) N
() S 8 T () S 16 T () S 24 T () S 32 T (vector.y / vectorLength\);) N
() S 8 T () S 16 T () S
(// System.out.println\("x calculation: " + normalVector.x +) c n
() p 8 T () S 16 T () S
(// "*") c n
() p 8 T () S 16 T () S
(// + perpenMat[0][0] + " + " + normalVector.y + "*") c n
() p 8 T () S 16 T () S
(// + perpenMat[1][0]\);) c n
() p 8 T () S 16 T (Point2D.Float perpenVector = ) S
(new) K
( Point2D.Float\(normalVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* perpenMat[0][0] + normalVector.y * perpenMat[1) N
(][0],) N
() S 8 T () S 16 T () S 24 T () S 32 T (normalVector.x * perpenMat[0][1] + normalVector.) N
(y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (* perpenMat[1][1]\);) N
() S 8 T () S 16 T () S
(// System.out.println\("Perpen vector: " + perpenVector\);) c n
() p 8 T () S 16 T (Point2D.Float halfScaled = ) S
(new) K
( Point2D.Float\(perpenVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* Road.roadWidth / 2, perpenVector.y * Road.road) N
(Width / 2\);) N
() S 8 T () S 16 T () S
(return) K
( halfScaled;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(/****************************/) C n
() p 8 T () S
(public) K
( ) p
(static) K
( ArrayList<Road> bfsParks\(Road currentRoad,) p n
() S 8 T () S 16 T () S 24 T (CarPark destinationPark\) {) N
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( CarWorld getWorld\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.world;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<Connection> getConnections\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (ArrayList<Connection> cal = ) S
(new) K
( ArrayList<Connection>\(\);) p n
() S 8 T () S 16 T (Iterator<Entry<Integer, Lane>> lit = this.lanes.entrySet\(\).itera) N
(tor\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(lit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry<Integer, Lane> lp = lit.next\(\);) N
() S 8 T () S 16 T () S 24 T (Lane currentLane = lp.getValue\(\);) N
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Point2D.Float, ConnectionPoint>> cit = cu) N
(rrentLane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getConnectionPoints\(\).entrySet\(\).iterat) N
(or\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(cit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Map.Entry<Point2D.Float, ConnectionPoint> cp = c) N
(it.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (ConnectionPoint currentPoint = cp.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Iterator<Entry<Lane, Connection>> conIt = curren) N
(Road.java) (Page 13/15) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(tPoint) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getConnections\(\).entrySet\(\).ite) N
(rator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(conIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Map.Entry<Lane, Connection> conP = conIt) N
(.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Connection currentConnection = conP.getV) N
(alue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (cal.add\(currentConnection\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( cal;) p n
() S 8 T (}) N
() N
() S 8 T () S
(// car parks are only allowed to exist on straight roads) c n
() p 8 T () S
(public) K
( ) p
(void) k
( setCarParks\() p
(int) k
( s\) {) p n
() S 8 T () S 16 T () S
(if) K
( \() p
(this) k
( ) p
(instanceof) K
( StraightRoad\) {) p n
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Integer, Lane>> lit = this.lanes.entrySet) N
(\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(lit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Map.Entry<Integer, Lane> lp = lit.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Lane cl = lp.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( laneKey = cl.getLaneKey\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(laneKey == s && !cl.getHasPark\(\)\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (CarPark newPark = ) S
(new) K
( CarPark\(cl, CarPar) p n
(k.START, this.world\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.world.getParks\(\).add\(newPark\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(Car park spawned) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (cl.setHasPark\() S
(true) k
(\);) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(road type doesn't support car park) str
("\);) p n
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(//currently exit point can only exist on straight road) c n
() p 8 T () S
(public) K
( ) p
(void) k
( setEnding\() p
(int) k
( s, ) p
(boolean) k
( b\) {) p n
() S 8 T () S 16 T () S
(if) K
( \() p
(this) k
( ) p
(instanceof) K
( StraightRoad\) {) p n
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Straight road detected) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( remainder = s % 2;) p n
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Integer, Lane>> lit = this.lanes.entrySet) N
(\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(lit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Map.Entry<Integer, Lane> lp = lit.next\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (Lane cl = lp.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(int) k
( laneKey = cl.getLaneKey\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(laneKey % 2 == remainder\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (cl.setEnding\(b\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(road type doesn't support car park) str
("\);) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( paintBorders\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Lane>> lit = lanes.entrySet\(\).iterator\(\)) N
(Road.java) (Page 14/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (7/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (15) 8
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(;) p n
() N
() S 8 T () S 16 T () S
(while) K
( \(lit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Lane currentLane = lit.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T (currentLane.paintBorders\(g\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
(}) N
(Road.java) (Page 15/15) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Road.java) (8/8) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: RoadController.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:31 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( control;) p n
() N
(import) K
( javax.swing.JFrame;) p n
() N
(import) K
( model.CarWorld;) p n
(import) K
( model.Road;) p n
() N
(public) K
( ) p
(class) K
( ) p
(RoadController) L
( {) p n
() N
() S 8 T () S
(public) K
( RoadController\(JFrame frame, CarWorld cWorld\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated constructor stub) c n
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( Road createRoundAbout\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road createStraightRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
(}) N
(RoadController.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/RoadController.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: RoundAbout.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
() N
(//currently not supported) c n
(//lane class of roundRoad object) N
(public) K
( ) p
(class) K
( ) p
(RoundAbout) L
( ) p
(extends) K
( Lane {) p n
() S 8 T () S
(private) K
( Point2D.Float center;) p n
() S 8 T () S
(private) K
( ) p
(float) k
( radius;) p n
() N
() S 8 T () S
(public) K
( RoundAbout\(Point2D.Float center, ) p
(float) k
( radius, Road cRoad,) p n
() S 8 T () S 16 T () S 24 T (CarWorld world, ) S
(int) k
( lk\) {) p n
() S 8 T () S 16 T () S
(super) K
(\(center, center, cRoad, world, lk\);) p n
() S 8 T () S 16 T (this.center = center;) N
() S 8 T () S 16 T (this.radius = radius;) N
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( calculateLaneSpan\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T () S 16 T () S
(return) K
( \() p
(float) k
(\) \(Math.PI * 2 * this.radius\);) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getStart\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( getCenter\(\);) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getEnd\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( getCenter\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getCenter\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.center;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float nextPosition\(Car car, ) p
(float) k
( targetDistance,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( distanceTravelled\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T () S 16 T () S
(double) k
( angle = 360 * targetDistance / calculateLaneSpan\(\);) p n
() N
() S 8 T () S 16 T () S
(double) k
( rad = Math.toRadians\(angle\);) p n
() N
() S 8 T () S 16 T () S
(float) k
( newX = \() p
(float) k
(\) \(this.getStart\(\).x + \(Math.cos\(rad\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* \(car.getCoordinate\(\).x - this.getStart\(\).x\) + ) N
(Math.sin\(rad\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (* \(car.getCoordinate\(\).y - this.getStart\(\).y\)\)\);) N
() N
() S 8 T () S 16 T () S
(float) k
( newY = \() p
(float) k
(\) \(this.getStart\(\).y) p n
() S 8 T () S 16 T () S 24 T () S 32 T (- \(Math.sin\(rad\) * \(car.getCoordinate\(\).x - this) N
(.getStart\(\).x\)\) + Math) N
() S 8 T () S 16 T () S 24 T () S 32 T (.cos\(rad\) * \(car.getCoordinate\(\).y - this.getSta) N
(rt\(\).y\)\);) N
() N
() S 8 T () S 16 T () S
(return) K
( ) p
(new) K
( Point2D.Float\(newX, newY\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getRadius\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.radius;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
(RoundAbout.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.contained;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( findDistance\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Car getFrontCar\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( TrafficLight getNextTrafficLight\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paintBorders\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
(}) N
(RoundAbout.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/RoundAbout.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: RoundAboutTest.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( tests;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
() N
(import) K
( model.Car;) p n
(import) K
( model.Road;) p n
(import) K
( model.RoundRoad;) p n
(import) K
( model.StraightRoad;) p n
() N
(public) K
( ) p
(class) K
( ) p
(RoundAboutTest) L
( {) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\) ) p
(throws) K
( InterruptedException {) p n
() S 8 T () S 16 T (Road ra = ) S
(new) K
( RoundRoad\() p
(new) K
( Point2D.Float\(100, 100\), 20, 1\);) p n
() S 8 T () S 16 T (Car c1 = ) S
(new) K
( Car\(\);) p n
() S 8 T () S 16 T (c1.setCurrentSpeed\(10\);) N
() S 8 T () S 16 T (c1.enterLane\(ra.getLanes\(\).get\(0\), ) S
(new) K
( Point2D.Float\(65f, 100f\)\)) p n
(;) N
() S 8 T () S 16 T () S
(while) K
( \() p
(true) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (c1.move\(\);) N
() S 8 T () S 16 T () S 24 T (Thread.sleep\(20\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
(RoundAboutTest.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/tests/RoundAboutTest.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: RoundRoad.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
() N
(public) K
( ) p
(class) K
( ) p
(RoundRoad) L
( ) p
(extends) K
( Road {) p n
() N
() S 8 T () S
(// currently not supported) c n
() p 8 T () S
(// can only hold RoundAbout) c n
() p 8 T () S
(// centerPoint= center point of the roundabout) c n
() p 8 T () S
(// radius= radius of center circle) c n
() p 8 T () S
(// numLanes= number of lanes in the roundabout) c n
() p 8 T () S
(public) K
( RoundRoad\(Point2D.Float centerPoint, ) p
(int) k
( radius, ) p
(int) k
( numLanes,) p n
() S 8 T () S 16 T () S 24 T (CarWorld world\) {) N
() S 8 T () S 16 T () S
(super) K
(\(1, world\);) p n
() N
() S 8 T () S 16 T (setUpLanes\(centerPoint, radius, numLanes\);) N
() S 8 T () S 16 T (Iterator it = this.getLanes\(\).entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(it.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry pair = \(Map.Entry\) it.next\(\);) N
() S 8 T () S 16 T () S 24 T (Lane currentLane = \(Lane\) pair.getValue\(\);) N
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Lane found: ) str
(" + currentLane.getStart\(\) ) p n
(+ ") S
(, ) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ currentLane.getEnd\(\)\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.setBilateral\() S
(false) k
(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( setUpLanes\(Float centerPoint, ) p
(int) k
( radius, ) p
(int) k
( numLanes\) {) p n
() S 8 T () S 16 T () S
(int) k
( firstRadius = radius + 15;) p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < numLanes; i++\) {) p n
() S 8 T () S 16 T () S 24 T (Lane ra = ) S
(new) K
( RoundAbout\(centerPoint, firstRadius + \(i *) p n
( 30\), ) S
(this) k
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.getWorld\(\), i\);) N
() S 8 T () S 16 T () S 24 T (this.getLanes\(\).put\(i, ra\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
(}) N
(RoundRoad.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/RoundRoad.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: SimulationPanel.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.BorderLayout;) p n
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Dimension;) p n
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.event.ActionEvent;) p n
(import) K
( java.awt.event.ActionListener;) p n
(import) K
( java.awt.event.MouseEvent;) p n
(import) K
( java.awt.event.MouseListener;) p n
(import) K
( java.util.ArrayList;) p n
() N
(import) K
( javax.swing.BorderFactory;) p n
(import) K
( javax.swing.JButton;) p n
(import) K
( javax.swing.JOptionPane;) p n
(import) K
( javax.swing.JPanel;) p n
() N
(import) K
( model.Car;) p n
(import) K
( model.CarPark;) p n
(import) K
( model.Lane;) p n
(import) K
( model.Road;) p n
(import) K
( model.TrafficLight;) p n
(import) K
( control.TrafficLightController;) p n
(import) K
( control.WorldController;) p n
() N
(class) K
( ) p
(SimulationPanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( MouseListener {) p n
() N
() S 8 T () S
(private) K
( WorldController control;) p n
() S 8 T () S
(private) K
( TrafficLightController tlc;) p n
() S 8 T () S
(private) K
( CarSimView mainFrame;) p n
() S 8 T () S
(private) K
( JButton stopButton, startButton, returnButton; ) p
(// not used) c n
() p 8 T () S
(private) K
( BorderLayout borderLayout;) p n
() S 8 T () S
(private) K
( Integer selectedLane = ) p
(null) k
(;) p n
() N
() S 8 T () S
(public) K
( SimulationPanel\(WorldController control, TrafficLightController t) p n
(lc,) N
() S 8 T () S 16 T () S 24 T (CarSimView mainFrame\) {) N
() N
() S 8 T () S 16 T (this.control = control;) N
() S 8 T () S 16 T (this.tlc = tlc;) N
() S 8 T () S 16 T (this.mainFrame = mainFrame;) N
() S 8 T () S 16 T (this.setPreferredSize\() S
(new) K
( Dimension\(980, 670\)\);) p n
() S 8 T () S 16 T (this.setBorder\(BorderFactory.createMatteBorder\(3, 3, 3, 3, Color) N
(.BLACK\)\);) N
() S 8 T () S 16 T (this.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T (borderLayout = ) S
(new) K
( BorderLayout\(\);) p n
() S 8 T () S 16 T (this.setLayout\(borderLayout\);) N
() S 8 T () S 16 T (this.addMouseListener\() S
(this) k
(\);) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(protected) K
( ) p
(void) k
( paintComponent\(Graphics g\) {) p n
() N
() S 8 T () S 16 T (ArrayList<Road> roads = control.getRoads\(\);) N
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < roads.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (roads.get\(i\).paint\(g\);) N
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < roads.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (roads.get\(i\).paintBorders\(g\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (ArrayList<TrafficLight> lights = control.getLights\(\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (lights.get\(i\).paint\(g\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (ArrayList<Car> cars = ) S
(new) K
( ArrayList<Car>\(control.getCars\(\).value) p n
(s\(\)\);) N
(SimulationPanel.java) (Page 1/3) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < cars.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (cars.get\(i\).paint\(g\);) N
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(if) K
( \(mainFrame.getAddingLight\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (ArrayList<Lane> lanes = this.control.getLanes\(\);) N
() S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < lanes.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (g.setColor\(Color.BLACK\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (g.fillOval\(\() S
(int) k
(\) \(lanes.get\(i\).getStart\(\).x - Ma) p n
(th) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.sqrt\(2 * \(Math.pow\(7.5 / 2, 2\)\)) N
(\)\), \() S
(int) k
(\) \(lanes.get\(i\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.getStart\(\).y - Math.sqrt\(2 * \(M) N
(ath.pow\(7.5 / 2, 2\)\)\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (15, 15\);) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(// Can this be remove there not used?) c n
() p n
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( mouseClicked\(MouseEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(// check if traffic light exists where it is clicked) c n
() p n
() S 8 T () S 16 T () S
(if) K
( \(!this.mainFrame.getAddingLight\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( selected = control.findLight\(e.getPoint\(\)\);) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(selected != 0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (mainFrame.TrafficPanel\(selected\);) N
() S 8 T () S 16 T () S 24 T () S
(// create new trafficlight panel) c n
() p 8 T () S 16 T () S 24 T () S
(// change color) c n
() p 8 T () S 16 T () S 24 T () S
(// add to main panel) c n
() p 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(this.mainFrame.getAddingLight\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(selectedLane == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (selectedLane = control.findLane\(e.getPoint\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(selectedLane != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(lane) str n
( id : ) S
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ selectedLane + ") S
( has bee) str n
(n selected) S
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.mainFrame.repaint\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.mainFrame.revalidate\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (tlc.addNewLight\(selectedLane, e.getPoint\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (selectedLane = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.mainFrame.setAddingLight\() S
(false) k
(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.repaint\(\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( mousePressed\(MouseEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( mouseReleased\(MouseEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
(SimulationPanel.java) (Page 2/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/SimulationPanel.java) (1/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S
(public) K
( ) p
(void) k
( mouseEntered\(MouseEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( mouseExited\(MouseEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T (}) N
() N
(}) N
(SimulationPanel.java) (Page 3/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/SimulationPanel.java) (2/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: StraightLane.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.Graphics2D;) p n
(import) K
( java.awt.RenderingHints;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Map.Entry;) p n
() N
(public) K
( ) p
(class) K
( ) p
(StraightLane) L
( ) p
(extends) K
( Lane {) p n
() N
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
([][] perpenMat = ) p
(new) K
( ) p
(int) k
([][] { { 0, -1 }, { 1, 0) p n
( } };) N
() N
() S 8 T () S
(public) K
( StraightLane\(Point2D.Float startingPoint, Point2D.Float endPoint,) p n
() S 8 T () S 16 T () S 24 T (Road cRoad, CarWorld cWorld, ) S
(int) k
( lk\) {) p n
() S 8 T () S 16 T () S
(super) K
(\(startingPoint, endPoint, cRoad, cWorld, lk\);) p n
() S 8 T () S 16 T (this.setLaneSpan\(calculateLaneSpan\(\)\);) N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( calculateLaneSpan\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( \() p
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (\(this.getEnd\(\).x - this.getStart\(\).x\), 2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (+ Math.pow\(this.getEnd\(\).y - this.getStart\(\).y, ) N
(2.0\)\);) N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float nextPosition\(Car car, ) p
(float) k
( targetDistance,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( distanceTravelled\) {) p n
() N
() S 8 T () S 16 T () S
(// update rate at 20ms) c n
() p 8 T () S 16 T () S
(float) k
( desiredDistance = targetDistance;) p n
() N
() S 8 T () S 16 T (Point2D.Float start = this.getStart\(\);) N
() S 8 T () S 16 T (Point2D.Float end = this.getEnd\(\);) N
() S 8 T () S 16 T () S
(float) k
( laneSpan = calculateLaneSpan\(\);) p n
() S 8 T () S 16 T (Point2D.Float displacement = ) S
(new) K
( Point2D.Float\(\(end.x - start.x\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (/ laneSpan * desiredDistance, \(end.y - start.y\) ) N
(/ laneSpan) N
() S 8 T () S 16 T () S 24 T () S 32 T (* desiredDistance\);) N
() N
() S 8 T () S 16 T (Point2D.Float newPoint = ) S
(new) K
( Point2D.Float\(car.getCoordinate\(\).x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ displacement.x, car.getCoordinate\(\).y + displa) N
(cement.y\);) N
() N
() S 8 T () S 16 T (car.setTravelled\(car.getTravelled\(\) + targetDistance\);) N
() S 8 T () S 16 T () S
(return) K
( newPoint;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() S 8 T () S 16 T (Point2D.Float start = this.getStart\(\);) N
() S 8 T () S 16 T (Point2D.Float end = this.getEnd\(\);) N
() S 8 T () S 16 T (Point2D.Float halfVector = gethalf\(start, end\);) N
() S 8 T () S 16 T (Point2D.Float p1 = ) S
(new) K
( Point2D.Float\(end.x - halfVector.x, end.y) p n
() S 8 T () S 16 T () S 24 T () S 32 T (- halfVector.y\);) N
() S 8 T () S 16 T (Point2D.Float p2 = ) S
(new) K
( Point2D.Float\(start.x - halfVector.x, sta) p n
(rt.y) N
() S 8 T () S 16 T () S 24 T () S 32 T (- halfVector.y\);) N
() N
() S 8 T () S 16 T (Point2D.Float p3 = ) S
(new) K
( Point2D.Float\(start.x + halfVector.x, sta) p n
(rt.y) N
() S 8 T () S 16 T () S 24 T () S 32 T (+ halfVector.y\);) N
() S 8 T () S 16 T (Point2D.Float p4 = ) S
(new) K
( Point2D.Float\(end.x + halfVector.x, end.y) p n
(StraightLane.java) (Page 1/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T (+ halfVector.y\);) N
() S 8 T () S 16 T () S
(int) k
( xpoints[] = { \() p
(int) k
(\) p1.x, \() p
(int) k
(\) p2.x, \() p
(int) k
(\) p3.x, \() p
(int) k
(\) p4.x) p n
( };) N
() S 8 T () S 16 T () S
(int) k
( ypoints[] = { \() p
(int) k
(\) p1.y, \() p
(int) k
(\) p2.y, \() p
(int) k
(\) p3.y, \() p
(int) k
(\) p4.y) p n
( };) N
() S 8 T () S 16 T (Graphics2D g2D = \(Graphics2D\) g;) N
() S 8 T () S 16 T (RenderingHints qualityHints = ) S
(new) K
( RenderingHints\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.KEY_ANTIALIASING,) N
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.VALUE_ANTIALIAS_ON\);) N
() S 8 T () S 16 T (qualityHints.put\(RenderingHints.KEY_RENDERING,) N
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.VALUE_RENDER_QUALITY\);) N
() S 8 T () S 16 T (g2D.setRenderingHints\(qualityHints\);) N
() S 8 T () S 16 T (g.setColor\() S
(new) K
( Color\(160, 160, 160\)\);) p n
() S 8 T () S 16 T (g.fillPolygon\(xpoints, ypoints, 4\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( Float gethalf\(Float start, Float end\) {) p n
() S 8 T () S 16 T (Point2D.Float vector = ) S
(new) K
( Point2D.Float\(end.x - start.x, end.y) p n
() S 8 T () S 16 T () S 24 T () S 32 T (- start.y\);) N
() N
() S 8 T () S 16 T () S
(float) k
( vectorLength = \() p
(float) k
(\) Math.sqrt\(Math.pow\(vector.x, 2.0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ Math.pow\(vector.y, 2.0\)\);) N
() N
() S 8 T () S 16 T (Point2D.Float normalVector = ) S
(new) K
( Point2D.Float\(vector.x / vector) p n
(Length,) N
() S 8 T () S 16 T () S 24 T () S 32 T (vector.y / vectorLength\);) N
() S 8 T () S 16 T (Point2D.Float perpenVector = ) S
(new) K
( Point2D.Float\(normalVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* perpenMat[0][0] + normalVector.y * perpenMat[1) N
(][0],) N
() S 8 T () S 16 T () S 24 T () S 32 T (normalVector.x * perpenMat[0][1] + normalVector.) N
(y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (* perpenMat[1][1]\);) N
() S 8 T () S 16 T () S
(// System.out.println\("Perpen vector: " + perpenVector\);) c n
() p 8 T () S 16 T (Point2D.Float halfScaled = ) S
(new) K
( Point2D.Float\(perpenVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* Road.roadWidth / 2, perpenVector.y * Road.road) N
(Width / 2\);) N
() S 8 T () S 16 T () S
(return) K
( halfScaled;) p n
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.contained;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( findDistance\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p n
() S 8 T () S 16 T () S
(return) K
( Car.distance\(this.getStart\(\), car.getCoordinate\(\)\);) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Car getFrontCar\(Car car\) {) p n
() S 8 T () S 16 T () S
(// also need to see cars infront of it in the nearest connection) c n
(s) N
() p 8 T () S 16 T () S
(// starting from its lane) c n
() p 8 T () S 16 T () S
(float) k
( closest = 100f;) p n
() S 8 T () S 16 T (Car closestCar = ) S
(null) k
(;) p n
() N
() S 8 T () S 16 T () S
(float) k
( cClosest = 100f;) p n
() S 8 T () S 16 T (ConnectionPoint closestPoint = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S
(// find closest connection point to the car that is <100f distan) c n
(ce) N
() p n
() S 8 T () S 16 T (Iterator<Entry<Point2D.Float, ConnectionPoint>> cpIt = ) S
(this) k n
() p 8 T () S 16 T () S 24 T () S 32 T (.getConnectionPoints\(\).entrySet\(\).iterator\(\);) N
(StraightLane.java) (Page 2/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/StraightLane.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(while) K
( \(cpIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (ConnectionPoint currentPoint = cpIt.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(Car.distance\(currentPoint.getPointCoordinate\(\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (car.getCoordinate\(\)\) < cClosest\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (closestPoint = currentPoint;) N
() S 8 T () S 16 T () S 24 T () S 32 T (cClosest = Car.distance\(currentPoint.getPointCoo) N
(rdinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (car.getCoordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(float) k
( dtp = -1f;) p n
() S 8 T () S 16 T () S
(if) K
( \(closestPoint != ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (dtp = Car.distance\(closestPoint.getPointCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.getStart\(\)\);) N
() N
() S 8 T () S 16 T () S 24 T (Iterator<Entry<Lane, Connection>> connectionIt = closest) N
(Point) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (.getConnections\(\).entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S
(while) K
( \(connectionIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Iterator<Entry<Integer, Car>> connectionCarsIt =) N
( connectionIt) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.next\(\).getValue\(\).getCarsInLane) N
(\(\).entrySet\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (.iterator\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(while) K
( \(connectionCarsIt.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Car connectionCar = connectionCarsIt.nex) N
(t\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(\(connectionCar.getTravelled\(\) + dtp\)) p n
( > car) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getTravelled\(\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(Car.distance\(connectionCar.g) p n
(etCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (car.getCoordinat) N
(e\(\)\) < closest) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (&& !car.equals\(c) N
(onnectionCar\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (closest = Car.distance\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (connecti) N
(onCar.getCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (car.getC) N
(oordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (closestCar = connectionC) N
(ar;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// retrieve cars in the connections that are starting from the c) c n
(losest) N
() p 8 T () S 16 T () S
(// connection point) c n
() p n
() S 8 T () S 16 T () S
(// get cars in the connections that belongs to the closest conne) c n
(ction) N
() p 8 T () S 16 T () S
(// point) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> cit = this.getCarsInLane\(\).entrySe) N
(t\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.iterator\(\);) N
() N
() S 8 T () S 16 T () S
(while) K
( \(cit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry<Integer, Car> cPair = cit.next\(\);) N
() S 8 T () S 16 T () S 24 T (Car cCar = cPair.getValue\(\);) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(cCar.getTravelled\(\) > car.getTravelled\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// cCar is somewhere ahead of the car in the sam) c n
(e lane) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(\(\(cCar.getTravelled\(\) - car.getTravelled\(\)\) ) p n
(< closest\)) N
(StraightLane.java) (Page 3/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& !car.equals\(cCar\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (closest = cCar.getTravelled\(\) - car.getT) N
(ravelled\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (closestCar = cCar;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// if closest car is null it means the parameter car is the lead) c n
(ing) N
() p 8 T () S 16 T () S
(// car) c n
() p 8 T () S 16 T () S
(return) K
( closestCar;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( TrafficLight getNextTrafficLight\(Car car\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(float) k
( closest = 100;) p n
() S 8 T () S 16 T (TrafficLight ctl = ) S
(null) k
(;) p n
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < this.trafficLights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (TrafficLight currentLight = trafficLights.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S
(float) k
( td = Car.distance\(currentLight.getCoordinate\(\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (car.getCoordinate\(\)\);) N
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(td < closest) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& Car.distance\(car.getCurrentLane\(\).get) N
(Start\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (currentLight.getCoordina) N
(te\(\)\) > car.getTravelled\(\)\) {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (closest = td;) N
() S 8 T () S 16 T () S 24 T () S 32 T (ctl = currentLight;) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(return) K
( ctl;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paintBorders\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (Point2D.Float start = this.getStart\(\);) N
() S 8 T () S 16 T (Point2D.Float end = this.getEnd\(\);) N
() S 8 T () S 16 T (Point2D.Float halfVector = gethalf\(start, end\);) N
() S 8 T () S 16 T (Point2D.Float p1 = ) S
(new) K
( Point2D.Float\(end.x - halfVector.x, end.y) p n
() S 8 T () S 16 T () S 24 T () S 32 T (- halfVector.y\);) N
() S 8 T () S 16 T (Point2D.Float p2 = ) S
(new) K
( Point2D.Float\(start.x - halfVector.x, sta) p n
(rt.y) N
() S 8 T () S 16 T () S 24 T () S 32 T (- halfVector.y\);) N
() N
() S 8 T () S 16 T (Point2D.Float p3 = ) S
(new) K
( Point2D.Float\(start.x + halfVector.x, sta) p n
(rt.y) N
() S 8 T () S 16 T () S 24 T () S 32 T (+ halfVector.y\);) N
() S 8 T () S 16 T (Point2D.Float p4 = ) S
(new) K
( Point2D.Float\(end.x + halfVector.x, end.y) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ halfVector.y\);) N
() S 8 T () S 16 T () S
(int) k
( xpoints[] = { \() p
(int) k
(\) p1.x, \() p
(int) k
(\) p2.x, \() p
(int) k
(\) p3.x, \() p
(int) k
(\) p4.x) p n
( };) N
() S 8 T () S 16 T () S
(int) k
( ypoints[] = { \() p
(int) k
(\) p1.y, \() p
(int) k
(\) p2.y, \() p
(int) k
(\) p3.y, \() p
(int) k
(\) p4.y) p n
( };) N
() S 8 T () S 16 T (Graphics2D g2D = \(Graphics2D\) g;) N
() S 8 T () S 16 T (RenderingHints qualityHints = ) S
(new) K
( RenderingHints\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.KEY_ANTIALIASING,) N
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.VALUE_ANTIALIAS_ON\);) N
() S 8 T () S 16 T (qualityHints.put\(RenderingHints.KEY_RENDERING,) N
() S 8 T () S 16 T () S 24 T () S 32 T (RenderingHints.VALUE_RENDER_QUALITY\);) N
() S 8 T () S 16 T (g2D.setRenderingHints\(qualityHints\);) N
() S 8 T () S 16 T (g.setColor\(Color.white\);) N
() S 8 T () S 16 T (g.drawPolygon\(xpoints, ypoints, 4\);) N
(StraightLane.java) (Page 4/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/StraightLane.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T (}) N
(}) N
(StraightLane.java) (Page 5/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/StraightLane.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: StraightRoad.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
() N
(public) K
( ) p
(class) K
( ) p
(StraightRoad) L
( ) p
(extends) K
( Road {) p n
() S 8 T () S
(private) K
( Point2D.Float startingPoint, endingPoint;) p n
() S 8 T () S
(private) K
( ) p
(final) K
( ) p
(int) k
([][] perpenMat = ) p
(new) K
( ) p
(int) k
([][] { { 0, -1 }, { 1, 0 } };) p n
() N
() S 8 T () S
(// can only hold straight lanes) c n
() p 8 T () S
(// even and odd lane) c n
() p 8 T () S
(// numAddLane= numbers of lanes that equals to the direction of the cent) c n
(er) N
() p 8 T () S
(// line) c n
() p 8 T () S
(// num subLane = numbers of lanes that is opposite of the direction of t) c n
(he) N
() p 8 T () S
(// center line) c n
() p n
() S 8 T () S
(public) K
( StraightRoad\(Point2D.Float startingPoint, Point2D.Float endingPoi) p n
(nt,) N
() S 8 T () S 16 T () S 24 T () S
(int) k
( numAddLane, ) p
(int) k
( numSubLane, CarWorld world\) {) p n
() S 8 T () S 16 T () S
(super) K
(\(Road.STRAIGHT_LANE, world\);) p n
() S 8 T () S 16 T (this.startingPoint = startingPoint;) N
() S 8 T () S 16 T (this.endingPoint = endingPoint;) N
() S 8 T () S 16 T (setUpLanes\(startingPoint, endingPoint, numAddLane, numSubLane\);) N
() S 8 T () S 16 T (Iterator it = this.getLanes\(\).entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(if) K
( \(\(numAddLane == 0 && numSubLane != 0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (|| \(numAddLane != 0 && numSubLane == 0\)\)) N
() S 8 T () S 16 T () S 24 T (this.setBilateral\() S
(false) k
(\);) p n
() S 8 T () S 16 T () S
(else) K n
() p 8 T () S 16 T () S 24 T (this.setBilateral\() S
(true) k
(\);) p n
() N
() S 8 T () S 16 T () S
(while) K
( \(it.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry pair = \(Map.Entry\) it.next\(\);) N
() S 8 T () S 16 T () S 24 T (Lane currentLane = \(Lane\) pair.getValue\(\);) N
() S 8 T () S 16 T () S 24 T (System.out.println\(") S
(Lane found: ) str
(" + currentLane.getStart\(\) ) p n
(+ ") S
(, ) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ currentLane.getEnd\(\)\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// TODO Auto-generated constructor stub) c n
() p 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( setUpLanes\(Point2D.Float startingPoint,) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float endingPoint, ) S
(int) k
( numAddLane, ) p
(int) k
( numSubLan) p n
(e\) {) N
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (Point2D.Float vector = ) S
(new) K
( Point2D.Float\(endingPoint.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (- startingPoint.x, endingPoint.y - startingPoint) N
(.y\);) N
() S 8 T () S 16 T () S
(// System.out.println\("Vector: " + vector\);) c n
() p 8 T () S 16 T () S
(float) k
( vectorLength = \() p
(float) k
(\) Math.sqrt\(Math.pow\(vector.x, 2.0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ Math.pow\(vector.y, 2.0\)\);) N
() S 8 T () S 16 T () S
(// System.out.println\("Length: " + vectorLength\);) c n
() p 8 T () S 16 T (Point2D.Float normalVector = ) S
(new) K
( Point2D.Float\(vector.x / vector) p n
(Length,) N
() S 8 T () S 16 T () S 24 T () S 32 T (vector.y / vectorLength\);) N
() S 8 T () S 16 T () S
(// System.out.println\("x calculation: " + normalVector.x + "*") c n
() p 8 T () S 16 T () S
(// + perpenMat[0][0] + " + " + normalVector.y + "*") c n
() p 8 T () S 16 T () S
(// + perpenMat[1][0]\);) c n
() p 8 T () S 16 T (Point2D.Float perpenVector = ) S
(new) K
( Point2D.Float\(normalVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* perpenMat[0][0] + normalVector.y * perpenMat[1) N
(][0],) N
() S 8 T () S 16 T () S 24 T () S 32 T (normalVector.x * perpenMat[0][1] + normalVector.) N
(y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (* perpenMat[1][1]\);) N
(StraightRoad.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S
(// System.out.println\("Perpen vector: " + perpenVector\);) c n
() p 8 T () S 16 T (Point2D.Float scaledPerpen = ) S
(new) K
( Point2D.Float\(perpenVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* Road.roadWidth, perpenVector.y * Road.roadWidt) N
(h\);) N
() S 8 T () S 16 T (Point2D.Float halfScaled = ) S
(new) K
( Point2D.Float\(perpenVector.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T (* Road.roadWidth / 2, perpenVector.y * Road.road) N
(Width / 2\);) N
() N
() S 8 T () S 16 T () S
(// setting up add lanes) c n
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < numAddLane; i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( laneNumber = i * 2;) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float newStart = ) S
(new) K
( Point2D.Float\(startingPoint) p n
(.x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ halfScaled.x + i * scaledPerpen.x, sta) N
(rtingPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ halfScaled.y + i * scaledPerpen.y\);) N
() S 8 T () S 16 T () S 24 T (Point2D.Float newEnd = ) S
(new) K
( Point2D.Float\(endingPoint.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ halfScaled.x + scaledPerpen.x * i, end) N
(ingPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ halfScaled.y + i * scaledPerpen.y\);) N
() S 8 T () S 16 T () S 24 T (Lane newStraight = ) S
(new) K
( StraightLane\(newStart, newEnd, ) p
(th) k n
(is) S
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.getWorld\(\), laneNumber\);) N
() S 8 T () S 16 T () S 24 T (this.getLanes\(\).put\(laneNumber, newStraight\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// setting up sub lanes) c n
() p 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < numSubLane; i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(int) k
( laneNumber = i * 2 + 1;) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float newStart = ) S
(new) K
( Point2D.Float\(endingPoint.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (- halfScaled.x - i * scaledPerpen.x, end) N
(ingPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (- halfScaled.y - i * scaledPerpen.y\);) N
() N
() S 8 T () S 16 T () S 24 T (Point2D.Float newEnd = ) S
(new) K
( Point2D.Float\(startingPoint.x) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (- halfScaled.x - i * scaledPerpen.x, sta) N
(rtingPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (- halfScaled.y - i * scaledPerpen.y\);) N
() S 8 T () S 16 T () S 24 T (Lane newStraight = ) S
(new) K
( StraightLane\(newStart, newEnd, ) p
(th) k n
(is) S
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.getWorld\(\), laneNumber\);) N
() S 8 T () S 16 T () S 24 T (this.getLanes\(\).put\(laneNumber, newStraight\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
(}) N
(StraightRoad.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/StraightRoad.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: StraightRoadTest.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( tests;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
() N
(import) K
( model.Car;) p n
(import) K
( model.Road;) p n
(import) K
( model.StraightRoad;) p n
() N
(public) K
( ) p
(class) K
( ) p
(StraightRoadTest) L
( {) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\) ) p
(throws) K
( InterruptedException {) p n
() S 8 T () S 16 T (Road sr = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(100, 100\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(180, 160\), 2, 2\);) p n
() S 8 T () S 16 T (Car c1 = ) S
(new) K
( Car\(\);) p n
() S 8 T () S 16 T (c1.setCurrentSpeed\(10\);) N
() S 8 T () S 16 T (c1.enterLane\(sr.getLanes\(\).get\(3\), sr.getLanes\(\).get\(3\).getStart) N
(\(\)\);) N
() S 8 T () S 16 T () S
(while) K
( \() p
(true) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (c1.move\(\);) N
() S 8 T () S 16 T () S 24 T (Thread.sleep\(20\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
(StraightRoadTest.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/tests/StraightRoadTest.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: TrafficLight.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.util.Date;) p n
() N
(public) K
( ) p
(class) K
( ) p
(TrafficLight) L
( {) p n
() S 8 T () S
(private) K
( Lane lane; ) p
(// lane object it belongs to) c n
() p 8 T () S
(private) K
( String status;) p n
() S 8 T () S
(private) K
( ) p
(boolean) k
( initial;) p n
() S 8 T () S
(private) K
( ) p
(float) k
( greenInterval;) p n
() S 8 T () S
(private) K
( ) p
(float) k
( redInterval;) p n
() S 8 T () S
(private) K
( ) p
(float) k
( initInterval;) p n
() S 8 T () S
(private) K
( Date lastChanged;) p n
() S 8 T () S
(private) K
( Point2D.Float coordination;) p n
() S 8 T () S
(private) K
( ) p
(int) k
( id;) p n
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(int) k
( totalLights = 0;) p n
() S 8 T () S
(private) K
( ) p
(double) k
( tempInterval = 0.0;) p n
() N
() S 8 T () S
(// testing stubs) c n
() p 8 T () S
(public) K
( TrafficLight\(\) {) p n
() S 8 T () S 16 T (this.greenInterval = 5;) N
() N
() S 8 T () S 16 T (this.redInterval = 5;) N
() S 8 T () S 16 T (this.lastChanged = ) S
(new) K
( Date\(\);) p n
() S 8 T () S 16 T (System.out.println\(this.lastChanged\);) N
() S 8 T () S 16 T (this.status = ") S
(Green) str
(";) p n
() S 8 T () S 16 T (this.id = totalLights;) N
() S 8 T () S 16 T (totalLights++;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( TrafficLight\(Lane lane\) {) p n
() S 8 T () S 16 T (this.lane = lane;) N
() N
() S 8 T () S 16 T (this.lastChanged = ) S
(new) K
( Date\(\);) p n
() S 8 T () S 16 T (this.status = ") S
(Green) str
(";) p n
() S 8 T () S 16 T (this.id = totalLights;) N
() S 8 T () S 16 T (totalLights++;) N
() S 8 T (}) N
() N
() S 8 T () S
(// testing stubs end) c n
() p n
() S 8 T () S
(public) K
( TrafficLight\(Lane lane, String status, ) p
(float) k
( greenInterval,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( redInterval, ) p
(float) k
( initInterval, Point2D.Float coo) p n
(rdination\) {) N
() S 8 T () S 16 T (this.lane = lane;) N
() S 8 T () S 16 T (System.out.println\(") S
(traffic coord) str
(" + coordination\);) p n
() S 8 T () S 16 T (initial = ) S
(true) k
(;) p n
() S 8 T () S 16 T () S
(if) K
( \(initInterval == 0\) {) p n
() S 8 T () S 16 T () S 24 T (initial = ) S
(false) k
(;) p n
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (this.initInterval = initInterval;) N
() S 8 T () S 16 T (this.redInterval = redInterval;) N
() S 8 T () S 16 T (this.greenInterval = greenInterval;) N
() S 8 T () S 16 T (this.lastChanged = ) S
(new) K
( Date\(\);) p n
() S 8 T () S 16 T (this.status = status;) N
() S 8 T () S 16 T (this.coordination = coordination;) N
() S 8 T () S 16 T (this.id = totalLights + 1;) N
() S 8 T () S 16 T (totalLights++;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setCoordinate\(Point2D.Float coordination\) {) p n
() S 8 T () S 16 T (this.coordination = coordination;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getCoordinate\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.coordination;) p n
() S 8 T (}) N
(TrafficLight.java) (Page 1/3) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S
(public) K
( String getStatus\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( status;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setStatus\(String status\) {) p n
() S 8 T () S 16 T (this.status = status;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setRedInterval\() p
(float) k
( interval\) {) p n
() S 8 T () S 16 T (this.redInterval = interval;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.lane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() N
() S 8 T () S 16 T () S
(if) K
( \(status.equalsIgnoreCase\(") p
(green) str
("\)\) {) p n
() N
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.GREEN\);) N
() N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(status.equalsIgnoreCase\(") p
(red) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T (g.setColor\(Color.RED\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (g.fillOval\() N
() S 8 T () S 16 T () S 24 T () S 32 T (\() S
(int) k
(\) \(coordination.x - Math.sqrt\(2 * \(Math.pow\() p n
(7.5 / 2, 2\)\)\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T (\() S
(int) k
(\) \(coordination.y - Math.sqrt\(2 * \(Math.pow\() p n
(7.5 / 2, 2\)\)\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T (15, 15\);) N
() S 8 T () S 16 T (g.setColor\(Color.BLACK\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( update\(\) {) p n
() S 8 T () S 16 T () S
(/*) c n
() S 8 T () S 16 T ( * Date currentDate = new Date\(\); if \(currentDate.getTime\(\) -) N
() S 8 T () S 16 T ( * lastChanged.getTime\(\) > interval\) { System.out.println\("chang) N
(ing"\);) N
() S 8 T () S 16 T ( * System.out.println\(currentDate.getTime\(\) - lastChanged.getTim) N
(e\(\)\);) N
() S 8 T () S 16 T ( * lastChanged = currentDate; if \(status.equals\("Green"\)\) { this) N
(.status) N
() S 8 T () S 16 T ( * = "Red"; } else if \(status.equals\("Red"\)\) { this.status = "Gr) N
(een"; }) N
() S 8 T () S 16 T ( * System.out.println\(this.status\); }) N
() S 8 T () S 16 T ( */) N
() p n
() S 8 T () S 16 T () S
(if) K
( \(initial\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// stay red till initial interval) c n
() p 8 T () S 16 T () S 24 T () S
(// past initial interval make initial false) c n
() p 8 T () S 16 T () S 24 T (this.status = ") S
(red) str
(";) p n
() S 8 T () S 16 T () S 24 T (tempInterval += 0.02;) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(tempInterval >= initInterval\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.initial = ) S
(false) k
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.status = ") S
(green) str
(";) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(this.status.equalsIgnoreCase\(") p
(green) str
("\)\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tempInterval >= greenInterval + initInterval) p n
(\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(redInterval != 0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.status = ") S
(red) str
(";) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (tempInterval = initInterval;) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (tempInterval += 0.02;) N
(TrafficLight.java) (Page 2/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/TrafficLight.java) (1/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(tempInterval >= redInterval + initInterval\) ) p n
({) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(if) K
( \(greenInterval != 0\)) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (this.status = ") S
(green) str
(";) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (tempInterval = initInterval;) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (tempInterval += 0.02;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// System.out.println\(getStatus\(\)\);) c n
() p 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( getId\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.id;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getGreen\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.greenInterval;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getRed\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.redInterval;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(float) k
( getInit\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.initInterval;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setGreen\() p
(float) k
( f\) {) p n
() S 8 T () S 16 T (this.greenInterval = f;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setInit\() p
(float) k
( f\) {) p n
() S 8 T () S 16 T (this.initInterval = f;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( reset\(\) {) p n
() S 8 T () S 16 T (this.tempInterval = 0d;) N
() S 8 T () S 16 T (this.status = ") S
(green) str
(";) p n
() S 8 T () S 16 T () S
(if) K
( \(initInterval != 0\)) p n
() S 8 T () S 16 T () S 24 T (this.initial = ) S
(true) k
(;) p n
() S 8 T () S 16 T () S
(else) K
( ) p
(if) K
( \(initInterval == 0\)) p n
() S 8 T () S 16 T () S 24 T (this.initial = ) S
(false) k
(;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( setTotalLights\() p
(int) k
( i\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (totalLights = i;) N
() S 8 T (}) N
() N
(}) N
(TrafficLight.java) (Page 3/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/TrafficLight.java) (2/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: TrafficLightController.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:31 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( control;) p n
() N
(import) K
( java.awt.Point;) p n
(import) K
( java.util.ArrayList;) p n
() N
(import) K
( javax.swing.JFrame;) p n
() N
(import) K
( model.CarWorld;) p n
(import) K
( model.TrafficLight;) p n
() N
(public) K
( ) p
(class) K
( ) p
(TrafficLightController) L
( {) p n
() S 8 T (CarWorld world;) N
() S 8 T (JFrame mainFrame;) N
() N
() S 8 T () S
(public) K
( TrafficLightController\(CarWorld cw\) {) p n
() S 8 T () S 16 T (this.world = cw;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setView\(JFrame frame\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (mainFrame = frame;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<TrafficLight> getLights\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.world.getLights\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setInterval\(String color, ) p
(float) k
( interval, ) p
(int) k
( id\) {) p n
() S 8 T () S 16 T (ArrayList<TrafficLight> lights = getLights\(\);) N
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(lights.get\(i\).getId\(\) == id\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (TrafficLight selected = lights.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(color.equals\(") p
(red) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (selected.setRedInterval\(interval\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(traffic light id : ) str
(" + id) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ ") S
( red interval changed to : ) str
(" +) p n
( interval\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(color.equals\(") p
(green) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (selected.setGreen\(interval\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(traffic light id : ) str
(" + id) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ ") S
( green interval changed to : ) str
(" ) p n
(+ interval\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (} ) S
(else) K
( ) p
(if) K
( \(color.equals\(") p
(initial) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (selected.setInit\(interval\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (System.out.println\(") S
(traffic light id : ) str
(" + id) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (+ ") S
( initial interval changed to : ) str
(" ) p n
(+ interval\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( removeLight\() p
(int) k
( id\) {) p n
() S 8 T () S 16 T (ArrayList<TrafficLight> lights = getLights\(\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(lights.get\(i\).getId\(\) == id\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (lights.get\(i\).getLane\(\).removeTrafficLight\(id\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( addNewLight\(Integer selectedLane, Point point\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (this.world.addNewLight\(selectedLane, point\);) N
() S 8 T () S 16 T (mainFrame.repaint\(\);) N
() S 8 T () S 16 T (mainFrame.revalidate\(\);) N
(TrafficLightController.java) (Page 1/2) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () N
() S 8 T (}) N
(}) N
(TrafficLightController.java) (Page 2/2) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/TrafficLightController.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: TrafficLightPanel.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.BorderLayout;) p n
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Dimension;) p n
(import) K
( java.awt.Font;) p n
(import) K
( java.awt.event.ActionEvent;) p n
(import) K
( java.awt.event.ActionListener;) p n
(import) K
( java.io.File;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.HashMap;) p n
() N
(import) K
( javax.swing.ImageIcon;) p n
(import) K
( javax.swing.JButton;) p n
(import) K
( javax.swing.JLabel;) p n
(import) K
( javax.swing.JOptionPane;) p n
(import) K
( javax.swing.JPanel;) p n
(import) K
( javax.swing.JScrollPane;) p n
(import) K
( javax.swing.JTextField;) p n
() N
(import) K
( model.TrafficLight;) p n
(import) K
( control.TrafficLightController;) p n
(import) K
( control.WorldController;) p n
() N
(public) K
( ) p
(class) K
( ) p
(TrafficLightPanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( ActionListener {) p n
() S 8 T () S
(private) K
( JPanel panel, btnHolderPanel;) p n
() S 8 T () S
(private) K
( JScrollPane jsp;) p n
() S 8 T () S
(private) K
( BorderLayout bl = ) p
(new) K
( BorderLayout\(\);) p n
() S 8 T () S
(private) K
( JButton rtrnButton;) p n
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( INTERVAL_MIN = 0;) p n
() S 8 T () S
(private) K
( ) p
(static) K
( ) p
(final) K
( ) p
(int) k
( INTERVAL_MAX = 20;) p n
() S 8 T () S
(private) K
( ArrayList<TrafficLight> lights;) p n
() N
() S 8 T () S
(private) K
( WorldController wController;) p n
() S 8 T () S
(private) K
( CarSimView mainFrame;) p n
() N
() S 8 T () S
(private) K
( String TrifficLightID;) p n
() S 8 T () S
(private) K
( ImageIcon traffic_img;) p n
() S 8 T () S
(private) K
( HashMap<Integer, JTextField> greenList, redList, initList;) p n
() N
() S 8 T () S
(public) K
( TrafficLightPanel\(WorldController wc,) p n
() S 8 T () S 16 T () S 24 T () S
(final) K
( TrafficLightController tlc, ) p
(final) K
( CarSimView mainF) p n
(rame, ) S
(int) k
( id\) {) p n
() S 8 T () S 16 T (this.wController = wc;) N
() S 8 T () S 16 T (this.greenList = ) S
(new) K
( HashMap<Integer, JTextField>\(\);) p n
() S 8 T () S 16 T (this.redList = ) S
(new) K
( HashMap<Integer, JTextField>\(\);) p n
() S 8 T () S 16 T (this.initList = ) S
(new) K
( HashMap<Integer, JTextField>\(\);) p n
() S 8 T () S 16 T (this.mainFrame = mainFrame;) N
() N
() S 8 T () S 16 T (panel = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T (btnHolderPanel = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T (rtrnButton = ) S
(new) K
( CustomJButton\(") p
(Return) str
("\);) p n
() S 8 T () S 16 T (rtrnButton.addActionListener\() S
(this) k
(\);) p n
() S 8 T () S 16 T (lights = tlc.getLights\(\);) N
() S 8 T () S 16 T (System.out.println\(lights.size\(\)\);) N
() N
() S 8 T () S 16 T (JLabel trafficLightTitle = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (traffic_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\(File.separato) p n
(r + ") S
(gfx) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ File.separator + ") S
(adjustTrafficLight_gfx.png) str
("\)\);) p n
() S 8 T () S 16 T (trafficLightTitle.setIcon\(traffic_img\);) N
() S 8 T () S 16 T () S
(//JLabel space = new JLabel\("  "\);) c n
() p 8 T () S 16 T (JLabel iInterval = ) S
(new) K
( JLabel\(") p
(Initial Interval ) str
("\);) p n
() S 8 T () S 16 T (JLabel gInterval = ) S
(new) K
( JLabel\(") p
(  Green Interval  ) str
("\);) p n
() S 8 T () S 16 T (JLabel rInterval = ) S
(new) K
( JLabel\(") p
(  Red Interval) str
("\);) p n
() N
() S 8 T () S 16 T (Font font = ) S
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 15\);) p n
() S 8 T () S 16 T (iInterval.setFont\(font\);) N
() S 8 T () S 16 T (gInterval.setFont\(font\);) N
(TrafficLightPanel.java) (Page 1/5) (Mar 26, 15 1:26) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (rInterval.setFont\(font\);) N
() S 8 T () S 16 T () S
(//space.setFont\(font\);) c n
() p n
() S 8 T () S 16 T (JPanel a = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T (a.setPreferredSize\() S
(new) K
( Dimension\(920, 30\)\);) p n
() S 8 T () S
(//) c 16 T (a.add\(space\);) N
() p 8 T () S 16 T (a.add\(iInterval\);) N
() S 8 T () S 16 T (a.add\(gInterval\);) N
() S 8 T () S 16 T (a.add\(rInterval\);) N
() S 8 T () S 16 T (a.add\() S
(new) K
( JLabel\(") p
(                         ) str
("\)\);) p n
() N
() S 8 T () S 16 T (panel.add\(a\);) N
() S 8 T () S 16 T () S
(int) k
( trafficLightSize = lights.size\(\);) p n
() S 8 T () S 16 T (panel.setPreferredSize\() S
(new) K
( Dimension\(920, 64 * trafficLightSize\)) p n
(\);) N
() N
() S 8 T () S 16 T (System.out.println\(") S
(size) str
(" + trafficLightSize\);) p n
() S 8 T () S 16 T () S
(if) K
( \(id == 0\) {) p n
() S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < trafficLightSize; i++\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T (JPanel container = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (container.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.setPreferredSize\() S
(new) K
( Dimension\(920, 58) p n
(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (TrifficLightID = "" + lights.get\(i\).getId\(\); ) S
(// ) c n
(THIS IS NEW) N
() p n
() S 8 T () S 16 T () S 24 T () S 32 T (JLabel lbl = ) S
(new) K
( JLabel\(") p
(traffic light ) str
("+TrifficLightI) p n
(D+") S
(   ) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Font font2 = ) S
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 16\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (lbl.setFont\(font2\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (lbl.setForeground\(Color.black\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(lights.get\(i\).getId\(\) == id\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (lbl.setOpaque\() S
(true) k
(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (container.setBackground\(Color.red\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (lbl.setForeground\(Color.blue\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\(lbl\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (JTextField initialTField = ) S
(new) K
( JTextField\("") p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ lights.get\(i\).getInit\(\), 7\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (initList.put\(lights.get\(i\).getId\(\), initialTFiel) N
(d\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (JTextField greenTField = ) S
(new) K
( JTextField\("") p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ lights.get\(i\).getGreen\(\), 7\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (greenList.put\(lights.get\(i\).getId\(\), greenTField) N
(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (JTextField redTField = ) S
(new) K
( JTextField\("") p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ lights.get\(i\).getRed\(\), 7\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (redList.put\(lights.get\(i\).getId\(\), redTField\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (JButton submitBtn = ) S
(new) K
( LightButton\(") p
(submit) str
(",) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Integer.parseInt\(TrifficLightID\)) N
(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (submitBtn.setPreferredSize\() S
(new) K
( Dimension\(100, 25) p n
(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (submitBtn.addActionListener\() S
(new) K
( ActionListener\(\)) p n
( {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (@Override) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent ) p n
(e\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// TODO Auto-generated method st) c n
(ub) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(int) k
( id = \(\(LightButton\) e.getSou) p n
(rce\(\)\).getId\(\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JTextField init = initList.get\(i) N
(d\);) N
() N
(TrafficLightPanel.java) (Page 2/5) (Mar 26, 15 1:26) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/TrafficLightPanel.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JTextField red = redList.get\(id\)) N
(;) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JTextField green = greenList.get) N
(\(id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(float) k
( redInt = Float.par) p n
(seFloat\(red.getText\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(float) k
( initInt = Float.pa) p n
(rseFloat\(init.getText\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(float) k
( greenInt = Float.p) p n
(arseFloat\(green.getText\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(if) K
( \(redInt < 0 || initIn) p n
(t < 0 || greenInt < 0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S
(throw) K
( ) p
(new) K
( Except) p n
(ion\(\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (tlc.setInterval\(") S
(red) str
(", r) p n
(edInt, id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (tlc.setInterval\(") S
(green) str
(", ) p n
(greenInt, id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (tlc.setInterval\(") S
(initial) str
(", ) p n
(initInt, id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (} ) S
(catch) K
( \(Exception exc\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (JOptionPane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T (.showMes) N
(sageDialog\() S
(null) k
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
() S 0 T (") S
(check if the input is valid. Input needs to be a positive float number) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (JButton removeBtn = ) S
(new) K
( LightButton\(") p
(remove) str
(",) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (Integer.parseInt\(TrifficLightID\)) N
(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (removeBtn.setPreferredSize\() S
(new) K
( Dimension\(100, 25) p n
(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (removeBtn.addActionListener\() S
(new) K
( ActionListener\(\)) p n
( {) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (@Override) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent ) p n
(e\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(// TODO Auto-generated method st) c n
(ub) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (tlc.removeLight\(\(\(LightButton\) e) N
(.getSource\(\)\).getId\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (mainFrame.TrafficPanel\(0\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\() S
(new) K
( JLabel\(") p
(      ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\(initialTField\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\() S
(new) K
( JLabel\(") p
(            ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\(greenTField\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\() S
(new) K
( JLabel\(") p
(             ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\(redTField\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\() S
(new) K
( JLabel\(") p
(      ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\(submitBtn\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (container.add\(removeBtn\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (panel.add\(container\);) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T (JPanel container = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T () S 24 T (container.setBackground\(Color.WHITE\);) N
(TrafficLightPanel.java) (Page 3/5) (Mar 26, 15 1:26) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (container.setPreferredSize\() S
(new) K
( Dimension\(920, 58\)\);) p n
() S 8 T () S 16 T () S 24 T (TrifficLightID = ""; ) S
(// THIS IS NEW) c n
() p 8 T () S 16 T () S 24 T (TrafficLight cl = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(lights.get\(i\).getId\(\) == id\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (cl = lights.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (TrifficLightID += cl.getId\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T (JLabel lbl = ) S
(new) K
( JLabel\(") p
(traffic light ) str
("+TrifficLightID+") p
(   ) str
("\);) p n
() S 8 T () S 16 T () S 24 T (Font font2 = ) S
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 16\);) p n
() S 8 T () S 16 T () S 24 T (lbl.setFont\(font2\);) N
() S 8 T () S 16 T () S 24 T (lbl.setForeground\(Color.black\);) N
() N
() S 8 T () S 16 T () S 24 T (container.add\(lbl\);) N
() S 8 T () S 16 T () S 24 T (JTextField initialTField = ) S
(new) K
( JTextField\("" + cl.getIni) p n
(t\(\), 7\);) N
() S 8 T () S 16 T () S 24 T (initList.put\(cl.getId\(\), initialTField\);) N
() S 8 T () S 16 T () S 24 T (JTextField greenTField = ) S
(new) K
( JTextField\("" + cl.getGreen) p n
(\(\), 7\);) N
() S 8 T () S 16 T () S 24 T (greenList.put\(cl.getId\(\), greenTField\);) N
() S 8 T () S 16 T () S 24 T (JTextField redTField = ) S
(new) K
( JTextField\("" + cl.getRed\(\), ) p n
(7\);) N
() S 8 T () S 16 T () S 24 T (redList.put\(cl.getId\(\), redTField\);) N
() N
() S 8 T () S 16 T () S 24 T (JButton submitBtn = ) S
(new) K
( LightButton\(") p
(submit) str
(",) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Integer.parseInt\(TrifficLightID\)\);) N
() S 8 T () S 16 T () S 24 T (submitBtn.setPreferredSize\() S
(new) K
( Dimension\(100, 25\)\);) p n
() S 8 T () S 16 T () S 24 T (submitBtn.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T (@Override) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(int) k
( id = \(\(LightButton\) e.getSource\(\)\).g) p n
(etId\(\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JTextField init = initList.get\(id\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JTextField red = redList.get\(id\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (JTextField green = greenList.get\(id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(float) k
( redInt = Float.parseFloat\() p n
(red.getText\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(float) k
( initInt = Float.parseFloat) p n
(\(init.getText\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(float) k
( greenInt = Float.parseFloa) p n
(t\(green.getText\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S
(if) K
( \(redInt < 0 || initInt < 0 ||) p n
( greenInt < 0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S
(throw) K
( ) p
(new) K
( Exception\(\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (tlc.setInterval\(") S
(red) str
(", redInt, i) p n
(d\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (tlc.setInterval\(") S
(green) str
(", greenInt) p n
(, id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (tlc.setInterval\(") S
(initial) str
(", initInt,) p n
( id\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (} ) S
(catch) K
( \(Exception exc\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (JOptionPane) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T (.showMessageDial) N
(og\() S
(null) k
(,) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () N
(") S
(check if the input is valid. Input needs to be a positive float number) str
("\);) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (}) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
(TrafficLightPanel.java) (Page 4/5) (Mar 26, 15 1:26) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/TrafficLightPanel.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S 16 T () S 24 T (}\);) N
() S 8 T () S 16 T () S 24 T (JButton removeBtn = ) S
(new) K
( LightButton\(") p
(remove) str
(",) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (Integer.parseInt\(TrifficLightID\)\);) N
() S 8 T () S 16 T () S 24 T (removeBtn.setPreferredSize\() S
(new) K
( Dimension\(100, 25\)\);) p n
() S 8 T () S 16 T () S 24 T (removeBtn.addActionListener\() S
(new) K
( ActionListener\(\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S 32 T (@Override) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (tlc.removeLight\(\(\(LightButton\) e.getSour) N
(ce\(\)\).getId\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (panel.removeAll\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (repaint\(\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() N
() S 8 T () S 16 T () S 24 T (}\);) N
() S 8 T () S 16 T () S 24 T (container.add\() S
(new) K
( JLabel\(") p
(      ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T (container.add\(initialTField\);) N
() S 8 T () S 16 T () S 24 T (container.add\() S
(new) K
( JLabel\(") p
(            ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T (container.add\(greenTField\);) N
() S 8 T () S 16 T () S 24 T (container.add\() S
(new) K
( JLabel\(") p
(             ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T (container.add\(redTField\);) N
() S 8 T () S 16 T () S 24 T (container.add\() S
(new) K
( JLabel\(") p
(      ) str
("\)\);) p n
() S 8 T () S 16 T () S 24 T (container.add\(submitBtn\);) N
() S 8 T () S 16 T () S 24 T (container.add\(removeBtn\);) N
() S 8 T () S 16 T () S 24 T (panel.add\(container\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(/*) c n
() S 8 T () S 16 T ( * JSlider slider1 = new JSlider\(\); JSlider slider2 = new JSlide) N
(r\(\);) N
() S 8 T () S 16 T ( * JSlider slider3 = new JSlider\(\); JSlider slider4 = new JSlide) N
(r\(\);) N
() S 8 T () S 16 T ( * slider1.setPaintTicks\(true\); slider1.setPaintLabels\(true\);) N
() S 8 T () S 16 T ( * slider1.setMinorTickSpacing\(2\);) N
() S 8 T () S 16 T ( */) N
() p n
() S 8 T () S 16 T (jsp = ) S
(new) K
( JScrollPane\(panel, JScrollPane.VERTICAL_SCROLLBAR_ALWA) p n
(YS,) N
() S 8 T () S 16 T () S 24 T () S 32 T (JScrollPane.HORIZONTAL_SCROLLBAR_NEVER\);) N
() S 8 T () S 16 T (panel.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T (btnHolderPanel.setPreferredSize\() S
(new) K
( Dimension\(1000, 200\)\);) p n
() S 8 T () S 16 T (jsp.setPreferredSize\() S
(new) K
( Dimension\(920, 500\)\);) p n
() S 8 T () S 16 T (jsp.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T (this.add\(trafficLightTitle\);) N
() S 8 T () S 16 T (this.add\(jsp\);) N
() S 8 T () S 16 T (this.add\(btnHolderPanel\);) N
() S 8 T () S 16 T (btnHolderPanel.add\(rtrnButton\);) N
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == rtrnButton\) { ) p
(// T Junction choosen by user) c n
() p 8 T () S 16 T () S 24 T (this.wController.pause\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.simulationView\(\); ) S
(// Need to confirm where use) c n
(r goes back) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () S
() c n
(// too) N
() p 8 T () S 16 T (}) N
() N
() S 8 T (}) N
() N
(}) S
(TrafficLightPanel.java) (Page 5/5) (Mar 26, 15 1:26) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/TrafficLightPanel.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: TrafficLightTest.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( tests;) p n
() N
(import) K
( model.TrafficLight;) p n
() N
(public) K
( ) p
(class) K
( ) p
(TrafficLightTest) L
( {) p n
() S 8 T () S
(public) K
( ) p
(static) K
( ) p
(void) k
( main\(String[] args\) ) p
(throws) K
( InterruptedException {) p n
() S 8 T () S 16 T (TrafficLight light = ) S
(new) K
( TrafficLight\(\);) p n
() S 8 T () S 16 T (System.out.println\(") S
(Traffic light created) str
("\);) p n
() S 8 T () S 16 T () S
(while) K
( \(light.getStatus\(\).equals\(") p
(Green) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T (light.update\(\);) N
() S 8 T () S 16 T () S 24 T (System.out.println\(light.getStatus\(\)\);) N
() S 8 T () S 16 T () S 24 T (Thread.sleep\(1000\);) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
(}) N
(TrafficLightTest.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/tests/TrafficLightTest.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: UnknownConnectionError.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(public) K
( ) p
(class) K
( ) p
(UnknownConnectionError) L
( ) p
(extends) K
( Exception {) p n
() N
(}) N
(UnknownConnectionError.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/UnknownConnectionError.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: UserHelpPanel.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:33 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( view;) p n
() N
(import) K
( java.awt.Color;) p n
(import) K
( java.awt.Dimension;) p n
(import) K
( java.awt.Font;) p n
(import) K
( java.awt.event.ActionEvent;) p n
(import) K
( java.awt.event.ActionListener;) p n
(import) K
( java.io.File;) p n
() N
(import) K
( javax.swing.BorderFactory;) p n
(import) K
( javax.swing.ImageIcon;) p n
(import) K
( javax.swing.JButton;) p n
(import) K
( javax.swing.JLabel;) p n
(import) K
( javax.swing.JPanel;) p n
(import) K
( javax.swing.JScrollPane;) p n
(import) K
( javax.swing.JTextArea;) p n
() N
(import) K
( control.WorldController;) p n
() N
(public) K
( ) p
(class) K
( ) p
(UserHelpPanel) L
( ) p
(extends) K
( JPanel ) p
(implements) K
( ActionListener {) p n
() S 8 T (WorldController wController;) N
() S 8 T (CarSimView mainFrame;) N
() S 8 T () S
(private) K
( JScrollPane jscrollPane;) p n
() S 8 T () S
(private) K
( JPanel usrHelpPanel, btnHolderPanel;) p n
() S 8 T () S
(private) K
( JButton rtrnButton;) p n
() S 8 T () S
(private) K
( JLabel helpTitle, aimTitle, trafficTitle, collsionTitle,) p n
() S 8 T () S 16 T () S 24 T (addTrafficLightLabel, collisionLabel;) N
() S 8 T () S
(private) K
( ImageIcon helpTitle_img, aim_img, addTrafficLight_img,) p n
() S 8 T () S 16 T () S 24 T (collision_img;) N
() S 8 T () S
(private) K
( JTextArea introTextArea, trafficTextArea, collsionTextArea;) p n
() S 8 T () S
(private) K
( Font titleFont = ) p
(new) K
( Font\(") p
(Tahoma) str
(", Font.BOLD, 20\);) p n
() N
() S 8 T () S
(public) K
( UserHelpPanel\(WorldController wController, CarSimView mainFrame\) ) p n
({) N
() S 8 T () S 16 T (this.wController = wController;) N
() S 8 T () S 16 T (this.mainFrame = mainFrame;) N
() N
() S 8 T () S 16 T (this.setBorder\(BorderFactory.createMatteBorder\(3, 3, 3, 3, Color) N
(.BLACK\)\);) N
() N
() S 8 T () S 16 T (usrHelpPanel = ) S
(new) K
( JPanel\(\);) p n
() S 8 T () S 16 T (btnHolderPanel = ) S
(new) K
( JPanel\(\);) p n
() N
() S 8 T () S 16 T (introTextArea = ) S
(new) K
( JTextArea\(2, 50\);) p n
() S 8 T () S 16 T (introTextArea.setLineWrap\() S
(true) k
(\);) p n
() S 8 T () S 16 T (introTextArea.setEditable\() S
(false) k
(\);) p n
() S 8 T () S 16 T (trafficTextArea = ) S
(new) K
( JTextArea\(2, 50\);) p n
() S 8 T () S 16 T (trafficTextArea.setLineWrap\() S
(true) k
(\);) p n
() S 8 T () S 16 T (trafficTextArea.setEditable\() S
(false) k
(\);) p n
() S 8 T () S 16 T (collsionTextArea = ) S
(new) K
( JTextArea\(2, 50\);) p n
() S 8 T () S 16 T (collsionTextArea.setLineWrap\() S
(true) k
(\);) p n
() S 8 T () S 16 T (collsionTextArea.setEditable\() S
(false) k
(\);) p n
() N
() S 8 T () S 16 T (rtrnButton = ) S
(new) K
( CustomJButton\(") p
(Return) str
("\);) p n
() S 8 T () S 16 T (rtrnButton.addActionListener\() S
(this) k
(\);) p n
() N
() S 8 T () S 16 T (helpTitle = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (helpTitle_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\( File.separ) p n
(ator + ") S
(gfx) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ File.separator + ") S
(helpTitle_gfx.gif) str
("\)\);) p n
() S 8 T () S 16 T (helpTitle.setIcon\(helpTitle_img\);) N
() S 8 T () S 16 T (aimTitle = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (aim_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\( File.separator +) p n
( ") S
(gfx) str
(" + File.separator) p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ ") S
(aim_gfx.gif) str
("\)\);) p n
() S 8 T () S 16 T (aimTitle.setIcon\(aim_img\);) N
() N
() S 8 T () S 16 T (trafficTitle = ) S
(new) K
( JLabel\(") p
(How to add a traffic light:) str
("\);) p n
() S 8 T () S 16 T (collsionTitle = ) S
(new) K
( JLabel\(") p
(What is a collsion?) str
("\);) p n
(UserHelpPanel.java) (Page 1/3) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (trafficTitle.setFont\(titleFont\);) N
() S 8 T () S 16 T (collsionTitle.setFont\(titleFont\);) N
() S 8 T () S 16 T (addTrafficLightLabel = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (addTrafficLight_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (File.separator + ") S
(gfx) str
(" + File.separator) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (+ ") S
(addTrafficLightHelp.png) str
("\)\);) p n
() S 8 T () S 16 T (addTrafficLightLabel.setIcon\(addTrafficLight_img\);) N
() N
() S 8 T () S 16 T (collisionLabel = ) S
(new) K
( JLabel\(\);) p n
() S 8 T () S 16 T (collision_img = ) S
(new) K
( ImageIcon\(getClass\(\).getResource\() p n
() S 8 T () S 16 T () S 24 T () S 32 T (File.separator + ") S
(gfx) str
(" + File.separator + ") p
(collison) str n
(Help.png) S
("\)\);) p n
() S 8 T () S 16 T (collisionLabel.setIcon\(collision_img\);) N
() N
() S 8 T () S 16 T (this.add\(helpTitle\);) N
() N
() S 8 T () S 16 T (jscrollPane = ) S
(new) K
( JScrollPane\(usrHelpPanel,) p n
() S 8 T () S 16 T () S 24 T () S 32 T (JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,) N
() S 8 T () S 16 T () S 24 T () S 32 T (JScrollPane.HORIZONTAL_SCROLLBAR_NEVER\);) N
() S 8 T () S 16 T (jscrollPane.setPreferredSize\() S
(new) K
( Dimension\(700, 400\)\);) p n
() S 8 T () S 16 T (jscrollPane.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T (jscrollPane.setBorder\(BorderFactory.createMatteBorder\(2, 2, 2, 2) N
(,) N
() S 8 T () S 16 T () S 24 T () S 32 T (Color.BLACK\)\);) N
() N
() S 8 T () S 16 T () S
(// introTextArea) c n
() p 8 T () S 16 T () S
(// .setText\("The aim of this software is to allow you to find th) c n
(e perfect coordination f"\);) N
() p 8 T () S 16 T (trafficTextArea) N
() S 8 T () S 16 T () S 24 T () S 32 T (.setText\(") S
(The above image illustrates how you can add new traffic) str n
( light to the system. \(1\) Press the 'Add Traffic Light' button and then the screen will pause and you will then see the bla) N
(ck circles at each lane entry point \(2\) Select the lane you would like to add the traffic light to \(3\) Simply click on the pa) N
(rt of the lane you would like to add the traffic light to. If you make a mistake or do not place the traffic light in the posit) N
(ion you wanted simply, select the new tarffic light created and once 'Adjust Traffic Light' screen opens up simply delet) N
(e that traffic light and start again.) S
("\);) p n
() S 8 T () S 16 T (collsionTextArea) N
() S 8 T () S 16 T () S 24 T () S 32 T (.setText\(") S
(The image above illustrates an example of a collision, th) str n
(is is an indication that they setup of the traffic light intervals is not good and has resulted in a collsion between two cars) N
(. To solve this issue select 'Adjust Traffic Lights' or select each traffic light and make adjustments and then press the 's) N
(ubmit' button to confirm these changes. When making adjustments to the traffic light intervals the [Initial] Interval is th) N
(e interval that the traffic light will stay as red before it enters recurring [Green] and [Red] light loop. The [Green] and [) N
(Red] interval values are the time \(seconds\) you would like the interval to last) S
("\);) p n
() S 8 T () S 16 T () S
(// usrHelpPanel.add\(aimTitle\);) c n
() p 8 T () S 16 T () S
(// usrHelpPanel.add\(introTextArea\);) c n
() p 8 T () S 16 T (usrHelpPanel.add\(trafficTitle\);) N
() S 8 T () S 16 T (usrHelpPanel.add\(addTrafficLightLabel\);) N
() S 8 T () S 16 T (usrHelpPanel.add\(trafficTextArea\);) N
() S 8 T () S 16 T (usrHelpPanel.add\(collsionTitle\);) N
() S 8 T () S 16 T (usrHelpPanel.add\(collisionLabel\);) N
() S 8 T () S 16 T (usrHelpPanel.add\(collsionTextArea\);) N
() S 8 T () S 16 T (usrHelpPanel.setBackground\(Color.WHITE\);) N
() S 8 T () S 16 T (usrHelpPanel.setPreferredSize\() S
(new) K
( Dimension\(700, 1000\)\);) p n
() S 8 T () S 16 T (btnHolderPanel.setPreferredSize\() S
(new) K
( Dimension\(1000, 150\)\);) p n
() N
() S 8 T () S 16 T (this.add\(jscrollPane\);) N
() S 8 T () S 16 T (this.add\(btnHolderPanel\);) N
() S 8 T () S 16 T (btnHolderPanel.add\(rtrnButton\);) N
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( actionPerformed\(ActionEvent e\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(if) K
( \(e.getSource\(\) == rtrnButton\) { ) p
(// T Junction choosen by user) c n
() p 8 T () S 16 T () S 24 T (this.wController.pause\(\);) N
() S 8 T () S 16 T () S 24 T (mainFrame.simulationView\(\); ) S
(// Need to confirm where use) c n
(r goes back) N
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S 80 T () S
() c n
(// too) N
(UserHelpPanel.java) (Page 2/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/UserHelpPanel.java) (1/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (}) N
() N
() S 8 T (}) N
(}) N
(UserHelpPanel.java) (Page 3/3) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/view/UserHelpPanel.java) (2/2) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: WorldController.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:31 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( control;) p n
() N
(import) K
( java.awt.Point;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.util.ArrayList;) p n
(import) K
( java.util.HashMap;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map.Entry;) p n
() N
(import) K
( javax.swing.JFrame;) p n
(import) K
( javax.swing.JOptionPane;) p n
() N
(import) K
( view.CarSimView;) p n
(import) K
( model.Car;) p n
(import) K
( model.CarPark;) p n
(import) K
( model.CarWorld;) p n
(import) K
( model.Lane;) p n
(import) K
( model.Road;) p n
(import) K
( model.StraightRoad;) p n
(import) K
( model.TrafficLight;) p n
() N
(public) K
( ) p
(class) K
( ) p
(WorldController) L
( {) p n
() S 8 T () S
(private) K
( CarWorld cWorld; ) p
(// core model) c n
() p 8 T () S
(private) K
( JFrame carView; ) p
(// JFrame) c n
() p n
() S 8 T () S
(public) K
( WorldController\(\) {) p n
() N
() S 8 T () S 16 T (this.cWorld = this.createWorld\(\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( CarWorld getcWorld\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( cWorld;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setcWorld\(CarWorld cWorld\) {) p n
() S 8 T () S 16 T (this.cWorld = cWorld;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( String toString\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( cWorld.toString\(\);) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setView\(JFrame frame\) {) p n
() S 8 T () S 16 T (this.carView = frame;) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( pause\(\) {) p n
() S 8 T () S 16 T (this.cWorld.setStatus\(") S
(paused) str
("\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( start\(\) {) p n
() S 8 T () S 16 T (this.cWorld.setStatus\(") S
(running) str
("\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( exit\(\) {) p n
() S 8 T () S 16 T (this.cWorld.setStatus\(") S
(exit) str
("\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(// program loop) c n
() p 8 T () S
(public) K
( ) p
(void) k
( simulate\(\) ) p
(throws) K
( InterruptedException {) p n
() N
() S 8 T () S 16 T () S
(while) K
( \() p
(true) k
(\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(cWorld.getStatus\(\).equals\(") p
(running) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (update\(\);) N
() N
() S 8 T () S 16 T () S 24 T () S 32 T (Thread.sleep\(20\); ) S
(// the timing mechanism) c n
(WorldController.java) (Page 1/6) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T () S 64 T () S 72 T () S
(// needs) c n
( improvement) N
() p 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(cWorld.getStatus\(\).equals\(") p
(paused) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (Thread.sleep\(20\);) N
() S 8 T () S 16 T () S 24 T (} ) S
(else) K
( ) p
(if) K
( \(cWorld.getStatus\(\).equals\(") p
(exit) str
("\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( HashMap<Integer, Car> getCars\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.cWorld.getCars\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<Road> getRoads\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.cWorld.getRoads\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( update\(\) {) p n
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < cWorld.getParks\(\).size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (cWorld.getParks\(\).get\(i\).update\(\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (ArrayList<Car> cars = ) S
(new) K
( ArrayList<Car>\(cWorld.getCars\(\).values) p n
(\(\)\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < cars.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (cars.get\(i\).move\(\);) N
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (ArrayList<TrafficLight> lights = cWorld.getLights\(\);) N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (lights.get\(i\).update\(\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (\(\(CarSimView\) carView\).getDynamicChart\(\).updateData\(\);) N
() S 8 T () S 16 T (ArrayList<Car> collided = this.cWorld.checkCollision\(\);) N
() S 8 T () S 16 T () S
(if) K
( \(collided.size\(\) == 2\) {) p n
() N
() S 8 T () S 16 T () S 24 T (cWorld.reset\(\);) N
() S 8 T () S 16 T () S 24 T () S
(for) K
( \() p
(int) k
( i = 0; i < collided.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.cWorld.addCar\(collided.get\(i\)\);) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T () S 24 T (this.carView.repaint\(\);) N
() S 8 T () S 16 T () S 24 T (JOptionPane.showMessageDialog\() S
(null) k
(, ") p
(Collision detected!) str
("\);) p n
() S 8 T () S 16 T () S 24 T (cWorld.reset\(\);) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T (this.carView.repaint\(\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setFullSimulation\(\) {) p n
() S 8 T () S 16 T (this.cWorld.setStatus\(") S
(paused) str
("\);) p n
() S 8 T () S 16 T (this.cWorld.flush\(\);) N
() S 8 T () S 16 T (Road road1 = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(100, 70\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(1000, 70\), 1, 1, this.getcWorl) p n
(d\(\)\);) N
() S 8 T () S 16 T (Road road2 = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(800, 50\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(800, 590\), 1, 1, this.getcWorl) p n
(d\(\)\);) N
() S 8 T () S 16 T (Road road3 = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(100, 570\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(1000, 570\), 1, 1, this.getcWor) p n
(ld\(\)\);) N
() S 8 T () S 16 T (Road road4 = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(100, 200\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(1000, 400\), 2, 2, this.getcWor) p n
(ld\(\)\);) N
() S 8 T () S 16 T (Road road5 = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(550, 70\),) p n
(WorldController.java) (Page 2/6) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/WorldController.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(180, 570\), 1, 1, this.getcWorl) p n
(d\(\)\);) N
() S 8 T () S 16 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road1, 0, road2, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road1, 0, road5, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road1, 1, road2, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road1, 1, road5, 0\);) N
() N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 1, road1, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 1, road1, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 0, road3, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 0, road3, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 0, road4, 2\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 0, road4, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 0, road4, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 0, road4, 3\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 1, road4, 2\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 1, road4, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 1, road4, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road2, 1, road4, 3\);) N
() N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road3, 0, road2, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road3, 1, road2, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road3, 0, road5, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road3, 1, road5, 1\);) N
() N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 1, road1, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 1, road1, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 0, road3, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 0, road3, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 0, road4, 2\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 0, road4, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 0, road4, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 0, road4, 3\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 1, road4, 2\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 1, road4, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 1, road4, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road5, 1, road4, 3\);) N
() N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 2, road5, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 0, road5, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 2, road2, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 0, road2, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 1, road5, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 3, road5, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 1, road2, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(road4, 3, road2, 0\);) N
() N
() S 8 T () S 16 T (} ) S
(catch) K
( \(Exception e\) {) p n
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (road1.setCarParks\(0\);) N
() S 8 T () S 16 T (road1.setCarParks\(1\);) N
() S 8 T () S 16 T (road1.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (road1.setEnding\(1, ) S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (road1.setCarParks\(0\);) N
() S 8 T () S 16 T (road1.setCarParks\(1\);) N
() S 8 T () S 16 T (road1.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (road1.setEnding\(1, ) S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (road4.setCarParks\(0\);) N
() S 8 T () S 16 T (road4.setCarParks\(1\);) N
() S 8 T () S 16 T (road4.setCarParks\(2\);) N
() S 8 T () S 16 T (road4.setCarParks\(3\);) N
() S 8 T () S 16 T (road4.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (road4.setEnding\(1, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (road4.setEnding\(2, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (road4.setEnding\(3, ) S
(true) k
(\);) p n
(WorldController.java) (Page 3/6) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p n
() S 8 T () S 16 T (road3.setCarParks\(0\);) N
() S 8 T () S 16 T (road3.setCarParks\(1\);) N
() S 8 T () S 16 T (road3.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (road3.setEnding\(1, ) S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (this.cWorld.addRoad\(road1\);) N
() S 8 T () S 16 T (this.cWorld.addRoad\(road2\);) N
() S 8 T () S 16 T (this.cWorld.addRoad\(road3\);) N
() S 8 T () S 16 T (this.cWorld.addRoad\(road4\);) N
() S 8 T () S 16 T (this.cWorld.addRoad\(road5\);) N
() S 8 T (}) N
() N
() S 8 T () S
(// example case setup) c n
() p 8 T () S
(public) K
( ) p
(void) k
( setTJunction\(\) {) p n
() S 8 T () S 16 T (this.cWorld.setStatus\(") S
(paused) str
("\);) p n
() S 8 T () S 16 T (this.cWorld.flush\(\);) N
() S 8 T () S 16 T () S
(// add new roads and such) c n
() p 8 T () S 16 T (Road sr = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(100, 100\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(1000, 100\), 1, 1, this.getcWor) p n
(ld\(\)\);) N
() S 8 T () S 16 T (Road ar = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(550, 80\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(550, 600\), 1, 1, this.getcWorl) p n
(d\(\)\);) N
() S 8 T () S 16 T () S
(try) K
( {) p n
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr, 0, ar, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr, 1, ar, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(ar, 1, sr, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(ar, 1, sr, 1\);) N
() S 8 T () S 16 T (} ) S
(catch) K
( \(Exception e\) {) p n
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (sr.setCarParks\(0\);) N
() S 8 T () S 16 T (sr.setCarParks\(1\);) N
() S 8 T () S 16 T (ar.setCarParks\(1\);) N
() N
() S 8 T () S 16 T (sr.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (sr.setEnding\(1, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (ar.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (this.cWorld.addRoad\(sr\);) N
() S 8 T () S 16 T (this.cWorld.addRoad\(ar\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( setIntersection\(\) {) p n
() S 8 T () S 16 T () S
(// construct the world with road network) c n
() p 8 T () S 16 T (this.cWorld.setStatus\(") S
(paused) str
("\);) p n
() S 8 T () S 16 T (this.cWorld.flush\(\);) N
() S 8 T () S 16 T () S
(// add new roads and such) c n
() p 8 T () S 16 T (Road sr = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(100, 200\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(1000, 400\), 2, 2, this.getcWor) p n
(ld\(\)\);) N
() N
() S 8 T () S 16 T (Road cr = ) S
(new) K
( StraightRoad\() p
(new) K
( Point2D.Float\(700, 100\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(new) K
( Point2D.Float\(700, 600\), 2, 2, this.getcWorl) p n
(d\(\)\);) N
() N
() S 8 T () S 16 T () S
(try) K
( {) p n
() N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr, 0, cr, 0\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr, 2, cr, 3\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr, 3, cr, 2\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(sr, 1, cr, 1\);) N
() N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(cr, 0, sr, 1\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(cr, 2, sr, 2\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(cr, 3, sr, 3\);) N
() S 8 T () S 16 T () S 24 T (Road.connectLane\(cr, 1, sr, 0\);) N
() N
() S 8 T () S 16 T (} ) S
(catch) K
( \(Exception e\) {) p n
(WorldController.java) (Page 4/6) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/WorldController.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5-6) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (System.out.println\(") S
(error while connecting) str
("\);) p n
() S 8 T () S 16 T () S 24 T (e.printStackTrace\(\);) N
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (sr.setCarParks\(0\);) N
() N
() S 8 T () S 16 T (sr.setCarParks\(1\);) N
() N
() S 8 T () S 16 T (sr.setCarParks\(2\);) N
() S 8 T () S 16 T (sr.setCarParks\(3\);) N
() N
() S 8 T () S 16 T (cr.setCarParks\(1\);) N
() S 8 T () S 16 T (cr.setCarParks\(0\);) N
() S 8 T () S 16 T (cr.setCarParks\(2\);) N
() S 8 T () S 16 T (cr.setCarParks\(3\);) N
() N
() S 8 T () S 16 T (sr.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (sr.setEnding\(1, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (sr.setEnding\(2, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (sr.setEnding\(3, ) S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (cr.setEnding\(0, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (cr.setEnding\(1, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (cr.setEnding\(2, ) S
(true) k
(\);) p n
() S 8 T () S 16 T (cr.setEnding\(3, ) S
(true) k
(\);) p n
() N
() S 8 T () S 16 T (this.cWorld.addRoad\(sr\);) N
() N
() S 8 T () S 16 T (this.cWorld.addRoad\(cr\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( CarWorld createWorld\(\) {) p n
() S 8 T () S 16 T () S
(if) K
( \(this.cWorld == ) p
(null) k
(\) {) p n
() S 8 T () S 16 T () S 24 T (CarWorld world = ) S
(new) K
( CarWorld\(\);) p n
() S 8 T () S 16 T () S 24 T (this.cWorld = world;) N
() S 8 T () S 16 T () S 24 T () S
(return) K
( cWorld;) p n
() S 8 T () S 16 T (} ) S
(else) K
( {) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( this.cWorld;) p n
() S 8 T () S 16 T (}) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(double) k
( getAverageSpeed\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> cit = this.cWorld.getCars\(\).entryS) N
(et\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.iterator\(\);) N
() S 8 T () S 16 T () S
(float) k
( sum = 0;) p n
() S 8 T () S 16 T () S
(float) k
( count = 0;) p n
() S 8 T () S 16 T () S
(while) K
( \(cit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Car currentCar = cit.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T (sum += currentCar.getCurrentSpeed\(\);) N
() S 8 T () S 16 T () S 24 T (count++;) N
() N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(if) K
( \(count == 0\)) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( 0;) p n
() S 8 T () S 16 T () S
(else) K n
() p 8 T () S 16 T () S 24 T () S
(return) K
( sum / count;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(int) k
( findLight\(Point p\) {) p n
() S 8 T () S 16 T (ArrayList<TrafficLight> lights = this.cWorld.getLights\(\);) N
() S 8 T () S 16 T (TrafficLight selected = ) S
(null) k
(;) p n
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lights.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (TrafficLight cl = lights.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(p.x > cl.getCoordinate\(\).x - 7.5 && p.x < cl.getCoo) p n
(rdinate\(\).x + 7.5\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(p.y > cl.getCoordinate\(\).y - 7.5 && ) N
(WorldController.java) (Page 5/6) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(p.y < cl) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.getCoordinate\(\).y + 7.5) N
(\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (selected = cl;) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(break) K
(;) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(if) K
( \(selected == ) p
(null) k
(\)) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( 0;) p n
() N
() S 8 T () S 16 T () S
(return) K
( selected.getId\(\);) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<TrafficLight> getLights\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.cWorld.getLights\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<CarPark> getParks\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( this.cWorld.getParks\(\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ) p
(void) k
( reset\(\) {) p n
() S 8 T () S 16 T (this.cWorld.reset\(\);) N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Integer findLane\(Point p\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T (ArrayList<Lane> lanes = this.cWorld.getLanes\(\);) N
() N
() S 8 T () S 16 T () S
(for) K
( \() p
(int) k
( i = 0; i < lanes.size\(\); i++\) {) p n
() S 8 T () S 16 T () S 24 T (Lane cl = lanes.get\(i\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(\(p.x > cl.getStart\(\).x - 7.5 && p.x < cl.getStart\(\).) p n
(x + 7.5\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(p.y > cl.getStart\(\).y - 7.5 && p.y <) N
( cl.getStart\(\).y + 7.5\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S
(return) K
( cl.getLaneId\(\);) p n
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( ArrayList<Lane> getLanes\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.cWorld.getLanes\(\);) p n
() S 8 T (}) N
(}) N
(WorldController.java) (Page 6/6) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/control/WorldController.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
%!PS-Adobe-3.0
%%Title: linesolver.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.geom.Point2D;) p n
() N
(//Util clas) c n
(public) K
( ) p
(class) K
( ) p
(linesolver) L
( {) p n
() N
() S 8 T () S
(/*) c n
() S 8 T ( * we assume that there are two points p1,p2 belonging to line1 two poin) N
(ts) N
() S 8 T ( * p3,p4 belonging to line2 and we need to calculate whether there is an) N
() S 8 T ( * intersection of these two lines) N
() S 8 T ( */) N
() p n
() S 8 T () S
(public) K
( ) p
(static) K
( Point2D.Float checkIntersection\(Point2D.Float p1,) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float p2, Point2D.Float p3, Point2D.Float p4\)) N
() S 8 T () S 16 T () S 24 T () S
(throws) K
( UnknownConnectionError {) p n
() S 8 T () S 16 T (Float f = \(p1.x - p2.x\) * \(p3.y - p4.y\) - \(p1.y - p2.y\) * \(p3.x ) N
(- p4.x\);) N
() S 8 T () S 16 T () S
(if) K
( \(f == 0\)) p n
() S 8 T () S 16 T () S 24 T () S
(throw) K
( ) p
(new) K
( UnknownConnectionError\(\);) p n
() S 8 T () S 16 T (Float xi = \(\(p3.x - p4.x\) * \(p1.x * p2.y - p1.y * p2.x\) - \(p1.x ) N
(- p2.x\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (* \(p3.x * p4.y - p3.y * p4.x\)\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (/ f;) N
() S 8 T () S 16 T (Float yi = \(\(p3.y - p4.y\) * \(p1.x * p2.y - p1.y * p2.x\) - \(p1.y ) N
(- p2.y\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (* \(p3.x * p4.y - p3.y * p4.x\)\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (/ f;) N
() N
() S 8 T () S 16 T (Point2D.Float intersection = ) S
(new) K
( Point2D.Float\(xi, yi\);) p n
() N
() S 8 T () S 16 T () S
(return) K
( intersection;) p n
() S 8 T (}) N
() N
(}) N
(linesolver.java) (Page 1/1) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/linesolver.java) (1/1) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
