%!PS-Adobe-3.0
%%Title: Connection.java
%%For: Tanda Kabanda
%%Creator: a2ps version 4.14
%%CreationDate: Thu Mar 26 02:10:32 2015
%%BoundingBox: 24 24 588 768
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 612 def
/sw 792 def
/llx 24 def
/urx 768 def
/ury 588 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 7.493857 def
/cw 4.496314 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   522.321860 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1-2) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(package) K
( model;) p n
() N
(import) K
( java.awt.Graphics;) p n
(import) K
( java.awt.RenderingHints;) p n
(import) K
( java.awt.geom.Line2D;) p n
(import) K
( java.awt.geom.Point2D;) p n
(import) K
( java.awt.geom.Point2D.Float;) p n
(import) K
( java.math.BigDecimal;) p n
(import) K
( java.util.Iterator;) p n
(import) K
( java.util.Map;) p n
(import) K
( java.util.Map.Entry;) p n
(//this is quadratic bezier curve that car will move onto while changing) c n
(// lane) N
() p n
(public) K
( ) p
(class) K
( ) p
(Connection) L
( ) p
(extends) K
( Lane {) p n
() N
() S 8 T () S
(private) K
( Road sRoad, tRoad;) p n
() S 8 T () S
(private) K
( Lane sLane, tLane;) p n
() S 8 T () S
(private) K
( Point2D.Float interStartPoint;) p n
() S 8 T () S
(private) K
( Point2D.Float interEndPoint;) p n
() S 8 T () S
(private) K
( Point2D.Float intersectingPoint;) p n
() S 8 T () S
(private) K
( ConnectionPoint cp;) p n
() S 8 T () S
(private) K
( ) p
(float) k
([] bezierDistanceTable = ) p
(new) K
( ) p
(float) k
([1001];) p n
() S 8 T () S
(private) K
( Point2D.Float[] bezierPointTable = ) p
(new) K
( Point2D.Float[1001];) p n
() N
() S 8 T () S
(public) K
( Connection\(\) {) p n
() S 8 T () S 16 T () S
(// dummy: used to represent an exit point.) c n
() p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Connection\(Road sRoad, Lane sLane, Road tRoad, Lane tLane,) p n
() S 8 T () S 16 T () S 24 T (ConnectionPoint cp, Point2D.Float interStartPoint,) N
() S 8 T () S 16 T () S 24 T (Point2D.Float interEndPoint, Point2D.Float intersectingP) N
(oint\)) N
() S 8 T () S 16 T () S 24 T () S
(throws) K
( UnknownConnectionError {) p n
() S 8 T () S 16 T () S
(super) K
(\(\);) p n
() S 8 T () S 16 T (this.sRoad = sRoad;) N
() S 8 T () S 16 T (this.sLane = sLane;) N
() S 8 T () S 16 T (this.tRoad = tRoad;) N
() S 8 T () S 16 T (this.tLane = tLane;) N
() S 8 T () S 16 T (this.cp = cp;) N
() S 8 T () S 16 T (this.interStartPoint = interStartPoint;) N
() S 8 T () S 16 T (this.interEndPoint = interEndPoint;) N
() S 8 T () S 16 T (this.intersectingPoint = intersectingPoint;) N
() S 8 T () S 16 T (setupBezier\(interStartPoint, intersectingPoint, interEndPoint\);) N
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( calculateLaneSpan\(\) {) p n
() S 8 T () S 16 T () S
(// TODO Auto-generated method stub) c n
() p 8 T () S 16 T () S
(return) K
( bezierDistanceTable[1000];) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float nextPosition\(Car car, ) p
(float) k
( targetDistance,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( distanceTravelled\) {) p n
() N
() S 8 T () S 16 T () S
(// bezier curve. Only up the table for coordinate according to) c n
() p 8 T () S 16 T () S
(// distanceTravelled+targetDistance;) c n
() p n
() S 8 T () S 16 T () S
(float) k
( finalDistance = targetDistance + distanceTravelled;) p n
() N
() S 8 T () S 16 T () S
(float) k
( fdRound = round\(finalDistance\).floatValue\(\);) p n
() N
() S 8 T () S 16 T () S
(int) k
( index = binarySearch\(this.bezierDistanceTable, finalDistance) p n
(,) N
() S 8 T () S 16 T () S 24 T () S 32 T (targetDistance\);) N
() S 8 T () S 16 T () S
(if) K
( \(index == -1\) {) p n
(Connection.java) (Page 1/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T (System.out.println\(") S
(something went wrong) str
("\);) p n
() S 8 T () S 16 T () S 24 T (System.exit\(0\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(index > 1000\) {) p n
() S 8 T () S 16 T () S 24 T (index = 1000;) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (car.setTravelled\(finalDistance\);) N
() S 8 T () S 16 T () S
(return) K
( bezierPointTable[index];) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getStart\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.interStartPoint;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Point2D.Float getEnd\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.interEndPoint;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Point2D.Float getIntersection\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.intersectingPoint;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getTargetRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.tRoad;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getTargetLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.tLane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Lane getStartLane\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.sLane;) p n
() S 8 T (}) N
() N
() S 8 T () S
(public) K
( Road getRoad\(\) {) p n
() S 8 T () S 16 T () S
(return) K
( this.sRoad;) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( Point2D.Float calculateBezier\() p
(float) k
( t\) {) p n
() N
() S 8 T () S 16 T () S
(float) k
( x = \(1 - t\) * \(1 - t\) * this.interStartPoint.x + 2 * \(1 - ) p n
(t\) * t) N
() S 8 T () S 16 T () S 24 T () S 32 T (* this.intersectingPoint.x + t * t * this.interE) N
(ndPoint.x;) N
() S 8 T () S 16 T () S
(float) k
( y = \(1 - t\) * \(1 - t\) * this.interStartPoint.y + 2 * \(1 - ) p n
(t\) * t) N
() S 8 T () S 16 T () S 24 T () S 32 T (* this.intersectingPoint.y + t * t * this.interE) N
(ndPoint.y;) N
() S 8 T () S 16 T () S
(return) K
( ) p
(new) K
( Point2D.Float\(x, y\);) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(void) k
( setupBezier\(Point2D.Float startingPoint,) p n
() S 8 T () S 16 T () S 24 T (Point2D.Float controlPoint, Point2D.Float endPoint\) {) N
() S 8 T () S 16 T () S
(float) k
( t = 0.000f;) p n
() S 8 T () S 16 T () S
(float) k
( x;) p n
() S 8 T () S 16 T () S
(float) k
( y;) p n
() S 8 T () S 16 T () S
(float) k
( cumulativeDistance = 0;) p n
() S 8 T () S 16 T () S
(int) k
( i = 0;) p n
() S 8 T () S 16 T (Point2D.Float bezierPoint;) N
() S 8 T () S 16 T (Point2D.Float currentPoint = startingPoint;) N
() S 8 T () S 16 T () S
(for) K
( \(; t <= 1; i++\) {) p n
() N
() S 8 T () S 16 T () S 24 T (x = \(1 - t\) * \(1 - t\) * startingPoint.x + 2 * \(1 - t\) * ) N
(t) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (* controlPoint.x + t * t * endPoint.x;) N
() S 8 T () S 16 T () S 24 T (y = \(1 - t\) * \(1 - t\) * startingPoint.y + 2 * \(1 - t\) * ) N
(t) N
(Connection.java) (Page 2/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Connection.java) (1/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3-4) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (* controlPoint.y + t * t * endPoint.y;) N
() S 8 T () S 16 T () S 24 T (bezierPoint = ) S
(new) K
( Point2D.Float\(x, y\);) p n
() S 8 T () S 16 T () S 24 T (bezierPointTable[i] = bezierPoint; ) S
(// t for point) c n
() p 8 T () S 16 T () S 24 T (cumulativeDistance += \() S
(float) k
(\) Math.sqrt\(Math.pow\() p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (\(bezierPoint.x - currentPoint.x\), 2.0\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (+ Math.pow\(bezierPoint.y - currentPoint.) N
(y, 2.0\)\);) N
() S 8 T () S 16 T () S 24 T (bezierDistanceTable[i] = cumulativeDistance;) N
() S 8 T () S 16 T () S 24 T (currentPoint = bezierPoint;) N
() S 8 T () S 16 T () S 24 T (t += 0.001f;) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T (System.out.println\(") S
(bezier setup) str
("\);) p n
() S 8 T () S 16 T (System.out.println\(") S
(Total connection distance = ) str
(") p n
() S 8 T () S 16 T () S 24 T () S 32 T (+ bezierDistanceTable[1000]\);) N
() N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(static) K
( BigDecimal round\() p
(float) k
( finalDistance\) {) p n
() N
() S 8 T () S 16 T (BigDecimal bd = ) S
(new) K
( BigDecimal\(finalDistance\);) p n
() S 8 T () S 16 T (bd.setScale\(4, BigDecimal.ROUND_HALF_UP\);) N
() S 8 T () S 16 T () S
(return) K
( bd;) p n
() N
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(int) k
( binarySearch\() p
(float) k
([] table, ) p
(float) k
( target, ) p
(float) k
( errorBound\) ) p n
({) N
() S 8 T () S 16 T () S
(int) k
( firstKey = \(table.length / 2\);) p n
() S 8 T () S 16 T () S
(if) K
( \(Math.abs\(table[firstKey] - target\) < errorBound\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( firstKey;) p n
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[firstKey] > target\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// look for the values smaller) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, 0, firstKey - 1, target, erro) p n
(rBound\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[firstKey] < target\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// look for the values larger) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, firstKey + 1, table.length, t) p n
(arget,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (errorBound\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( -1;) p n
() S 8 T (}) N
() N
() S 8 T () S
(private) K
( ) p
(int) k
( binarySearch\() p
(float) k
([] table, ) p
(int) k
( lowerBound, ) p
(int) k
( upperBound,) p n
() S 8 T () S 16 T () S 24 T () S
(float) k
( target, ) p
(float) k
( errorBound\) {) p n
() N
() S 8 T () S 16 T () S
(int) k
( halfPoint = \(lowerBound + upperBound\) / 2;) p n
() S 8 T () S 16 T () S
(if) K
( \(lowerBound == upperBound\) {) p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( halfPoint;) p n
() N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(else) K
( ) p
(if) K
( \(Math.abs\(table[halfPoint] - target\) < errorBound\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( halfPoint;) p n
() N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[halfPoint] > target\) {) p n
() N
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, lowerBound, halfPoint - 1, ta) p n
(rget,) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (errorBound\);) N
() S 8 T () S 16 T (} ) S
(else) K
( ) p
(if) K
( \(table[halfPoint] < target\) {) p n
() S 8 T () S 16 T () S 24 T () S
(// look for bigger half) c n
() p n
() S 8 T () S 16 T () S 24 T () S
(return) K
( binarySearch\(table, halfPoint + 1, upperBound, ta) p n
(rget,) N
(Connection.java) (Page 3/5) (Mar 26, 15 1:15) title
border
/v 1 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T () S 24 T () S 32 T () S 40 T (errorBound\);) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(return) K
( -1;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paint\(Graphics g\) {) p n
() N
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(float) k
( findDistance\(Car car\) {) p n
() S 8 T () S 16 T () S
(// not needed for this class) c n
() p 8 T () S 16 T () S
(return) K
( 0;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( Car getFrontCar\(Car car\) {) p n
() N
() S 8 T () S 16 T () S
(float) k
( closest = 100f;) p n
() S 8 T () S 16 T (Car closestCar = ) S
(null) k
(;) p n
() N
() S 8 T () S 16 T () S
(float) k
( dtp = Car.distance\(this.cp.getPointCoordinate\(\),) p n
() S 8 T () S 16 T () S 24 T () S 32 T (this.sLane.getStart\(\)\);) N
() S 8 T () S 16 T () S
(// needs to see cars in front of it currently in originating lan) c n
(e, cars) N
() p 8 T () S 16 T () S
(// in current connection) c n
() p 8 T () S 16 T () S
(// as well as cars after the connection) c n
() p n
() S 8 T () S 16 T () S
(// in originating lane) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> olCars = this.sLane.getCarsInLane\() N
(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(olCars.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Car oCar = olCars.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(oCar.getTravelled\(\) > car.getTravelled\(\) + dtp) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(oCar.getTravelled\(\) - \(car.getTravel) N
(led\(\) + dtp\)\) < 100f\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (closest = Car.distance\(oCar.getCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (car.getCoordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (closestCar = oCar;) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() N
() S 8 T () S 16 T () S
(// in ending lane) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> elCars = this.tLane.getCarsInLane\() N
(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.entrySet\(\).iterator\(\);) N
() S 8 T () S 16 T () S
(while) K
( \(elCars.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Car eCar = elCars.next\(\).getValue\(\);) N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(eCar.getTravelled\(\) > Car.distance\() p
(new) K
( Point2D.Float) p n
(\() N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (intersectingPoint.x) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (- \(interEndPoint.x - int) N
(ersectingPoint.x\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (intersectingPoint.y) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (- \(interEndPoint.y - int) N
(ersectingPoint.y\)\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (this.tLane.getStart\(\)\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& Car.distance\(eCar.getCoordinate\(\), ca) N
(r.getCoordinate\(\)\) < 100f) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (&& \(Car.distance\(eCar.getCoordinate\(\), t) N
(his.interEndPoint\) < Car) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T () S 56 T (.distance\(car.getCoordin) N
(ate\(\), this.interEndPoint\)\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T (closest = Car.distance\(eCar.getCoordinate\(\),) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (car.getCoordinate\(\)\);) N
() S 8 T () S 16 T () S 24 T () S 32 T (closestCar = eCar;) N
() S 8 T () S 16 T () S 24 T (}) N
(Connection.java) (Page 4/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Connection.java) (2/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 3
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.147420 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
() p 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// in current connection) c n
() p 8 T () S 16 T (Iterator<Entry<Integer, Car>> cit = this.getCarsInLane\(\).entrySe) N
(t\(\)) N
() S 8 T () S 16 T () S 24 T () S 32 T (.iterator\(\);) N
() N
() S 8 T () S 16 T () S
(while) K
( \(cit.hasNext\(\)\) {) p n
() S 8 T () S 16 T () S 24 T (Map.Entry<Integer, Car> cPair = cit.next\(\);) N
() S 8 T () S 16 T () S 24 T (Car cCar = cPair.getValue\(\);) N
() S 8 T () S 16 T () S 24 T () N
() S 8 T () S 16 T () S 24 T () S
(if) K
( \(cCar.getTravelled\(\) > car.getTravelled\(\)\) {) p n
() S 8 T () S 16 T () S 24 T () S 32 T () S
(// cCar is somewhere ahead of the car in the sam) c n
(e lane) N
() p 8 T () S 16 T () S 24 T () S 32 T () S
(if) K
( \(\(\(cCar.getTravelled\(\) - car.getTravelled\(\)\) ) p n
(< closest\)) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T () S 48 T (&& !car.equals\(cCar\)\) {) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (closest = cCar.getTravelled\(\) - car.getT) N
(ravelled\(\);) N
() S 8 T () S 16 T () S 24 T () S 32 T () S 40 T (closestCar = cCar;) N
() S 8 T () S 16 T () S 24 T () S 32 T (}) N
() S 8 T () S 16 T () S 24 T (}) N
() S 8 T () S 16 T (}) N
() S 8 T () S 16 T () S
(// if closest car is null it means the parameter car is the lead) c n
(ing) N
() p 8 T () S 16 T () S
(// car) c n
() p 8 T () S 16 T () S
(return) K
( closestCar;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( TrafficLight getNextTrafficLight\(Car car\) {) p n
() S 8 T () S 16 T () S
(// not needed) c n
() p 8 T () S 16 T () S
(return) K
( ) p
(null) k
(;) p n
() S 8 T (}) N
() N
() S 8 T (@Override) N
() S 8 T () S
(public) K
( ) p
(void) k
( paintBorders\(Graphics g\) {) p n
() S 8 T () S 16 T () S
(// not needed) c n
() p n
() S 8 T (}) N
() N
(}) N
(Connection.java) (Page 5/5) (Mar 26, 15 1:15) title
border
grestore
(Printed by Tanda Kabanda) rhead
(./src/model/Connection.java) (3/3) (Thursday March 26, 2015) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
